Search.setIndex({"docnames": ["contrib/engines", "contrib/handlers", "contrib/metrics", "defaults", "distributed", "engine", "exceptions", "generated/defaults", "generated/ignite.contrib.metrics.AveragePrecision", "generated/ignite.contrib.metrics.CohenKappa", "generated/ignite.contrib.metrics.GpuInfo", "generated/ignite.contrib.metrics.PrecisionRecallCurve", "generated/ignite.contrib.metrics.ROC_AUC", "generated/ignite.contrib.metrics.RocCurve", "generated/ignite.contrib.metrics.regression.CanberraMetric", "generated/ignite.contrib.metrics.regression.FractionalAbsoluteError", "generated/ignite.contrib.metrics.regression.FractionalBias", "generated/ignite.contrib.metrics.regression.GeometricMeanAbsoluteError", "generated/ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError", "generated/ignite.contrib.metrics.regression.ManhattanDistance", "generated/ignite.contrib.metrics.regression.MaximumAbsoluteError", "generated/ignite.contrib.metrics.regression.MeanAbsoluteRelativeError", "generated/ignite.contrib.metrics.regression.MeanError", "generated/ignite.contrib.metrics.regression.MeanNormalizedBias", "generated/ignite.contrib.metrics.regression.MedianAbsoluteError", "generated/ignite.contrib.metrics.regression.MedianAbsolutePercentageError", "generated/ignite.contrib.metrics.regression.MedianRelativeAbsoluteError", "generated/ignite.contrib.metrics.regression.R2Score", "generated/ignite.contrib.metrics.regression.WaveHedgesDistance", "generated/ignite.distributed.auto.DistributedProxySampler", "generated/ignite.distributed.auto.auto_dataloader", "generated/ignite.distributed.auto.auto_model", "generated/ignite.distributed.auto.auto_optim", "generated/ignite.distributed.launcher.Parallel", "generated/ignite.engine.create_supervised_evaluator", "generated/ignite.engine.create_supervised_trainer", "generated/ignite.engine.deterministic.DeterministicEngine", "generated/ignite.engine.deterministic.ReproducibleBatchSampler", "generated/ignite.engine.deterministic.keep_random_state", "generated/ignite.engine.deterministic.update_dataloader", "generated/ignite.engine.engine.Engine", "generated/ignite.engine.events.CallableEventWithFilter", "generated/ignite.engine.events.EventEnum", "generated/ignite.engine.events.Events", "generated/ignite.engine.events.EventsList", "generated/ignite.engine.events.RemovableEventHandle", "generated/ignite.engine.events.State", "generated/ignite.engine.supervised_evaluation_step", "generated/ignite.engine.supervised_evaluation_step_amp", "generated/ignite.engine.supervised_training_step", "generated/ignite.engine.supervised_training_step_amp", "generated/ignite.engine.supervised_training_step_apex", "generated/ignite.engine.supervised_training_step_tpu", "generated/ignite.handlers.DiskSaver", "generated/ignite.handlers.TimeLimit", "generated/ignite.handlers.base_logger", "generated/ignite.handlers.checkpoint.BaseSaveHandler", "generated/ignite.handlers.checkpoint.Checkpoint", "generated/ignite.handlers.checkpoint.ModelCheckpoint", "generated/ignite.handlers.clearml_logger", "generated/ignite.handlers.early_stopping.EarlyStopping", "generated/ignite.handlers.ema_handler.EMAHandler", "generated/ignite.handlers.global_step_from_engine", "generated/ignite.handlers.lr_finder.FastaiLRFinder", "generated/ignite.handlers.mlflow_logger", "generated/ignite.handlers.neptune_logger", "generated/ignite.handlers.param_scheduler.BaseParamScheduler", "generated/ignite.handlers.param_scheduler.ConcatScheduler", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler", "generated/ignite.handlers.param_scheduler.CyclicalScheduler", "generated/ignite.handlers.param_scheduler.LRScheduler", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler", "generated/ignite.handlers.param_scheduler.ParamScheduler", "generated/ignite.handlers.param_scheduler.PiecewiseLinear", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup", "generated/ignite.handlers.polyaxon_logger", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler", "generated/ignite.handlers.stores.EpochOutputStore", "generated/ignite.handlers.tensorboard_logger", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan", "generated/ignite.handlers.time_profilers.BasicTimeProfiler", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler", "generated/ignite.handlers.timing.Timer", "generated/ignite.handlers.tqdm_logger", "generated/ignite.handlers.visdom_logger", "generated/ignite.handlers.wandb_logger", "generated/ignite.metrics.Accuracy", "generated/ignite.metrics.Average", "generated/ignite.metrics.Bleu", "generated/ignite.metrics.ClassificationReport", "generated/ignite.metrics.CosineSimilarity", "generated/ignite.metrics.DiceCoefficient", "generated/ignite.metrics.Entropy", "generated/ignite.metrics.EpochMetric", "generated/ignite.metrics.FID", "generated/ignite.metrics.Fbeta", "generated/ignite.metrics.Frequency", "generated/ignite.metrics.GeometricAverage", "generated/ignite.metrics.InceptionScore", "generated/ignite.metrics.IoU", "generated/ignite.metrics.JaccardIndex", "generated/ignite.metrics.Loss", "generated/ignite.metrics.MeanAbsoluteError", "generated/ignite.metrics.MeanPairwiseDistance", "generated/ignite.metrics.MeanSquaredError", "generated/ignite.metrics.MultiLabelConfusionMatrix", "generated/ignite.metrics.PSNR", "generated/ignite.metrics.RootMeanSquaredError", "generated/ignite.metrics.Rouge", "generated/ignite.metrics.RougeL", "generated/ignite.metrics.RougeN", "generated/ignite.metrics.RunningAverage", "generated/ignite.metrics.SSIM", "generated/ignite.metrics.TopKCategoricalAccuracy", "generated/ignite.metrics.VariableAccumulation", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix", "generated/ignite.metrics.mIoU", "generated/ignite.metrics.metric.Metric", "generated/ignite.metrics.metrics_lambda.MetricsLambda", "generated/ignite.metrics.precision.Precision", "generated/ignite.metrics.recall.Recall", "handlers", "index", "metrics", "utils"], "filenames": ["contrib/engines.rst", "contrib/handlers.rst", "contrib/metrics.rst", "defaults.rst", "distributed.rst", "engine.rst", "exceptions.rst", "generated/defaults.rst", "generated/ignite.contrib.metrics.AveragePrecision.rst", "generated/ignite.contrib.metrics.CohenKappa.rst", "generated/ignite.contrib.metrics.GpuInfo.rst", "generated/ignite.contrib.metrics.PrecisionRecallCurve.rst", "generated/ignite.contrib.metrics.ROC_AUC.rst", "generated/ignite.contrib.metrics.RocCurve.rst", "generated/ignite.contrib.metrics.regression.CanberraMetric.rst", "generated/ignite.contrib.metrics.regression.FractionalAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.FractionalBias.rst", "generated/ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.ManhattanDistance.rst", "generated/ignite.contrib.metrics.regression.MaximumAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.rst", "generated/ignite.contrib.metrics.regression.MeanError.rst", "generated/ignite.contrib.metrics.regression.MeanNormalizedBias.rst", "generated/ignite.contrib.metrics.regression.MedianAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.MedianAbsolutePercentageError.rst", "generated/ignite.contrib.metrics.regression.MedianRelativeAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.R2Score.rst", "generated/ignite.contrib.metrics.regression.WaveHedgesDistance.rst", "generated/ignite.distributed.auto.DistributedProxySampler.rst", "generated/ignite.distributed.auto.auto_dataloader.rst", "generated/ignite.distributed.auto.auto_model.rst", "generated/ignite.distributed.auto.auto_optim.rst", "generated/ignite.distributed.launcher.Parallel.rst", "generated/ignite.engine.create_supervised_evaluator.rst", "generated/ignite.engine.create_supervised_trainer.rst", "generated/ignite.engine.deterministic.DeterministicEngine.rst", "generated/ignite.engine.deterministic.ReproducibleBatchSampler.rst", "generated/ignite.engine.deterministic.keep_random_state.rst", "generated/ignite.engine.deterministic.update_dataloader.rst", "generated/ignite.engine.engine.Engine.rst", "generated/ignite.engine.events.CallableEventWithFilter.rst", "generated/ignite.engine.events.EventEnum.rst", "generated/ignite.engine.events.Events.rst", "generated/ignite.engine.events.EventsList.rst", "generated/ignite.engine.events.RemovableEventHandle.rst", "generated/ignite.engine.events.State.rst", "generated/ignite.engine.supervised_evaluation_step.rst", "generated/ignite.engine.supervised_evaluation_step_amp.rst", "generated/ignite.engine.supervised_training_step.rst", "generated/ignite.engine.supervised_training_step_amp.rst", "generated/ignite.engine.supervised_training_step_apex.rst", "generated/ignite.engine.supervised_training_step_tpu.rst", "generated/ignite.handlers.DiskSaver.rst", "generated/ignite.handlers.TimeLimit.rst", "generated/ignite.handlers.base_logger.rst", "generated/ignite.handlers.checkpoint.BaseSaveHandler.rst", "generated/ignite.handlers.checkpoint.Checkpoint.rst", "generated/ignite.handlers.checkpoint.ModelCheckpoint.rst", "generated/ignite.handlers.clearml_logger.rst", "generated/ignite.handlers.early_stopping.EarlyStopping.rst", "generated/ignite.handlers.ema_handler.EMAHandler.rst", "generated/ignite.handlers.global_step_from_engine.rst", "generated/ignite.handlers.lr_finder.FastaiLRFinder.rst", "generated/ignite.handlers.mlflow_logger.rst", "generated/ignite.handlers.neptune_logger.rst", "generated/ignite.handlers.param_scheduler.BaseParamScheduler.rst", "generated/ignite.handlers.param_scheduler.ConcatScheduler.rst", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler.rst", "generated/ignite.handlers.param_scheduler.CyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.LRScheduler.rst", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamScheduler.rst", "generated/ignite.handlers.param_scheduler.PiecewiseLinear.rst", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.rst", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup.rst", "generated/ignite.handlers.polyaxon_logger.rst", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler.rst", "generated/ignite.handlers.stores.EpochOutputStore.rst", "generated/ignite.handlers.tensorboard_logger.rst", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan.rst", "generated/ignite.handlers.time_profilers.BasicTimeProfiler.rst", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler.rst", "generated/ignite.handlers.timing.Timer.rst", "generated/ignite.handlers.tqdm_logger.rst", "generated/ignite.handlers.visdom_logger.rst", "generated/ignite.handlers.wandb_logger.rst", "generated/ignite.metrics.Accuracy.rst", "generated/ignite.metrics.Average.rst", "generated/ignite.metrics.Bleu.rst", "generated/ignite.metrics.ClassificationReport.rst", "generated/ignite.metrics.CosineSimilarity.rst", "generated/ignite.metrics.DiceCoefficient.rst", "generated/ignite.metrics.Entropy.rst", "generated/ignite.metrics.EpochMetric.rst", "generated/ignite.metrics.FID.rst", "generated/ignite.metrics.Fbeta.rst", "generated/ignite.metrics.Frequency.rst", "generated/ignite.metrics.GeometricAverage.rst", "generated/ignite.metrics.InceptionScore.rst", "generated/ignite.metrics.IoU.rst", "generated/ignite.metrics.JaccardIndex.rst", "generated/ignite.metrics.Loss.rst", "generated/ignite.metrics.MeanAbsoluteError.rst", "generated/ignite.metrics.MeanPairwiseDistance.rst", "generated/ignite.metrics.MeanSquaredError.rst", "generated/ignite.metrics.MultiLabelConfusionMatrix.rst", "generated/ignite.metrics.PSNR.rst", "generated/ignite.metrics.RootMeanSquaredError.rst", "generated/ignite.metrics.Rouge.rst", "generated/ignite.metrics.RougeL.rst", "generated/ignite.metrics.RougeN.rst", "generated/ignite.metrics.RunningAverage.rst", "generated/ignite.metrics.SSIM.rst", "generated/ignite.metrics.TopKCategoricalAccuracy.rst", "generated/ignite.metrics.VariableAccumulation.rst", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix.rst", "generated/ignite.metrics.mIoU.rst", "generated/ignite.metrics.metric.Metric.rst", "generated/ignite.metrics.metrics_lambda.MetricsLambda.rst", "generated/ignite.metrics.precision.Precision.rst", "generated/ignite.metrics.recall.Recall.rst", "handlers.rst", "index.rst", "metrics.rst", "utils.rst"], "titles": ["ignite.contrib.engines", "ignite.contrib.handlers", "ignite.contrib.metrics", "&lt;no title&gt;", "ignite.distributed", "ignite.engine", "ignite.exceptions", "&lt;no title&gt;", "AveragePrecision", "CohenKappa", "GpuInfo", "PrecisionRecallCurve", "ROC_AUC", "RocCurve", "CanberraMetric", "FractionalAbsoluteError", "FractionalBias", "GeometricMeanAbsoluteError", "GeometricMeanRelativeAbsoluteError", "ManhattanDistance", "MaximumAbsoluteError", "MeanAbsoluteRelativeError", "MeanError", "MeanNormalizedBias", "MedianAbsoluteError", "MedianAbsolutePercentageError", "MedianRelativeAbsoluteError", "R2Score", "WaveHedgesDistance", "DistributedProxySampler", "auto_dataloader", "auto_model", "auto_optim", "Parallel", "create_supervised_evaluator", "create_supervised_trainer", "DeterministicEngine", "ReproducibleBatchSampler", "keep_random_state", "update_dataloader", "Engine", "CallableEventWithFilter", "EventEnum", "Events", "EventsList", "RemovableEventHandle", "State", "supervised_evaluation_step", "supervised_evaluation_step_amp", "supervised_training_step", "supervised_training_step_amp", "supervised_training_step_apex", "supervised_training_step_tpu", "DiskSaver", "TimeLimit", "base_logger", "BaseSaveHandler", "Checkpoint", "ModelCheckpoint", "clearml_logger", "EarlyStopping", "EMAHandler", "global_step_from_engine", "FastaiLRFinder", "mlflow_logger", "neptune_logger", "BaseParamScheduler", "ConcatScheduler", "CosineAnnealingScheduler", "CyclicalScheduler", "LRScheduler", "LinearCyclicalScheduler", "ParamGroupScheduler", "ParamScheduler", "PiecewiseLinear", "ReduceLROnPlateauScheduler", "create_lr_scheduler_with_warmup", "polyaxon_logger", "ExpStateScheduler", "LambdaStateScheduler", "MultiStepStateScheduler", "PiecewiseLinearStateScheduler", "StateParamScheduler", "StepStateScheduler", "EpochOutputStore", "tensorboard_logger", "TerminateOnNan", "BasicTimeProfiler", "HandlersTimeProfiler", "Timer", "tqdm_logger", "visdom_logger", "wandb_logger", "Accuracy", "Average", "Bleu", "ClassificationReport", "CosineSimilarity", "DiceCoefficient", "Entropy", "EpochMetric", "FID", "Fbeta", "Frequency", "GeometricAverage", "InceptionScore", "IoU", "JaccardIndex", "Loss", "MeanAbsoluteError", "MeanPairwiseDistance", "MeanSquaredError", "MultiLabelConfusionMatrix", "PSNR", "RootMeanSquaredError", "Rouge", "RougeL", "RougeN", "RunningAverage", "SSIM", "TopKCategoricalAccuracy", "VariableAccumulation", "ConfusionMatrix", "mIoU", "Metric", "MetricsLambda", "Precision", "Recall", "ignite.handlers", "Ignite Your Networks!", "ignite.metrics", "ignite.utils"], "terms": {"contribut": [0, 1, 122], "modul": [0, 1, 4, 5, 31, 33, 34, 35, 47, 48, 49, 50, 51, 52, 55, 57, 59, 61, 65, 85, 91, 92, 101, 105, 129, 130, 131], "tool": [0, 4, 33], "tbptt": 0, "common": [0, 4, 59, 64, 65, 77, 85, 91, 92, 116, 130], "class": [0, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131], "tbptt_event": [0, 40], "valu": [0, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 89, 90, 92, 93, 97, 101, 102, 103, 105, 110, 113, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 130], "sourc": [0, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131], "adit": 0, "event": [0, 10, 36, 40, 41, 42, 44, 45, 46, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 103, 118, 128, 129, 130], "addit": [0, 4, 5, 31, 36, 40, 57, 76, 95, 101, 108, 126], "dedic": 0, "create_supervised_tbptt_train": 0, "model": [0, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 40, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 61, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130], "optim": [0, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 40, 42, 47, 48, 49, 50, 51, 52, 55, 57, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 128], "loss_fn": [0, 35, 49, 50, 51, 52, 108], "tbtt_step": 0, "dim": [0, 8, 40, 94, 101, 104, 120, 130], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 40, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131], "devic": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 40, 47, 48, 49, 50, 51, 52, 56, 57, 61, 64, 77, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131], "none": [0, 4, 5, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 33, 34, 35, 37, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131], "non_block": [0, 34, 35, 40, 47, 48, 49, 50, 51, 52, 131], "fals": [0, 4, 8, 9, 11, 12, 13, 31, 34, 35, 36, 40, 43, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 96, 100, 102, 112, 118, 119, 125, 126, 127, 130, 131], "prepare_batch": [0, 34, 35, 40, 47, 48, 49, 50, 51, 52], "function": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 41, 43, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131], "_prepare_batch": [0, 34, 35, 47, 48, 49, 50, 51, 52], "creat": [0, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 35, 40, 42, 47, 48, 53, 54, 57, 58, 59, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 131], "backprop": 0, "through": [0, 4, 35, 67, 68, 69, 71, 130], "supervis": [0, 34, 35, 47, 48, 49, 50, 51, 52, 63, 129], "train": [0, 4, 10, 29, 33, 34, 35, 40, 47, 48, 49, 50, 51, 52, 54, 57, 59, 60, 61, 63, 64, 65, 66, 68, 73, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 101, 118, 124, 125, 129, 131], "recurr": 0, "long": [0, 100, 108, 122], "sequenc": [0, 59, 64, 65, 68, 69, 71, 73, 74, 77, 85, 91, 92, 93, 95, 97, 99, 101, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 125, 126, 127, 131], "i": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131], "computation": 0, "intens": 0, "requir": [0, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 40, 49, 50, 51, 52, 57, 63, 64, 66, 77, 91, 95, 97, 99, 101, 105, 108, 109, 110, 111, 114, 120, 124], "process": [0, 4, 10, 18, 29, 30, 31, 32, 33, 35, 56, 57, 59, 87, 88, 89, 92, 93, 95, 97, 99, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 127, 130, 131], "whole": [0, 66, 67, 72], "befor": [0, 4, 18, 24, 25, 26, 31, 34, 35, 40, 41, 43, 47, 48, 54, 57, 63, 68, 69, 71, 100, 130], "get": [0, 35, 46, 56, 57, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 74, 75, 78, 79, 80, 81, 83, 85, 101, 118, 122, 130], "gradient": [0, 35, 49, 50, 51, 52, 55, 59, 63, 65, 85, 91, 92], "howev": [0, 5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 90, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125], "when": [0, 4, 5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 36, 40, 43, 54, 57, 59, 61, 63, 65, 75, 82, 85, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130, 131], "loss": [0, 35, 40, 42, 49, 50, 51, 52, 57, 59, 63, 64, 65, 75, 77, 84, 85, 90, 91, 92], "comput": [0, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 54, 57, 61, 68, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129], "over": [0, 40, 59, 63, 65, 67, 68, 69, 71, 72, 74, 85, 91, 106, 108, 123, 130], "mani": 0, "output": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 40, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 62, 63, 64, 65, 75, 76, 77, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131], "x": [0, 4, 10, 34, 35, 40, 47, 48, 49, 50, 51, 52, 57, 77, 84, 90, 94, 101, 103, 104, 105, 108, 118, 121, 124, 130, 131], "an": [0, 4, 5, 8, 9, 11, 12, 13, 34, 35, 36, 37, 40, 43, 46, 47, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 100, 101, 104, 105, 108, 113, 118, 122, 124, 130, 131], "opportun": 0, "subsequ": [0, 116], "thi": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 79, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131], "known": [0, 21], "appli": [0, 8, 9, 11, 12, 13, 30, 31, 34, 35, 36, 40, 47, 48, 49, 50, 51, 52, 57, 59, 61, 63, 65, 68, 69, 71, 85, 91, 125, 130, 131], "step": [0, 4, 5, 32, 35, 40, 42, 49, 50, 51, 52, 57, 58, 59, 61, 62, 64, 65, 77, 78, 80, 83, 85, 89, 91, 92], "everi": [0, 4, 5, 40, 41, 43, 44, 57, 58, 59, 61, 64, 65, 77, 78, 79, 83, 84, 85, 89, 90, 91, 92, 103, 118, 124, 125, 130, 131], "while": [0, 5, 30, 38, 57, 59, 62, 63, 64, 65, 77, 85, 91, 92, 99], "same": [0, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 36, 37, 57, 61, 63, 75, 93, 94, 95, 97, 99, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127], "paramet": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131], "int": [0, 4, 29, 33, 35, 37, 40, 41, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 89, 91, 92, 95, 96, 98, 101, 103, 105, 106, 107, 110, 112, 113, 115, 117, 119, 120, 122, 123, 131], "length": [0, 40, 46, 68, 69, 71, 116], "chunk": 0, "last": [0, 5, 40, 57, 58, 60, 67, 68, 69, 71, 118, 130], "one": [0, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 40, 57, 60, 63, 71, 72, 80, 86, 90, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 130, 131], "mai": [0, 4, 34, 35, 40, 45, 47, 48, 49, 50, 51, 52, 63, 90, 122], "smaller": [0, 57], "axi": [0, 122], "repres": [0, 74, 81, 122], "dimens": [0, 94, 104, 108, 112, 121, 126], "option": [0, 4, 5, 8, 9, 12, 13, 24, 25, 26, 29, 33, 34, 35, 37, 40, 41, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 84, 85, 89, 90, 91, 92, 95, 96, 98, 100, 101, 102, 105, 106, 107, 108, 115, 118, 121, 122, 123, 124, 126, 127, 131], "str": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131], "type": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131], "specif": [0, 4, 5, 8, 9, 12, 13, 24, 25, 26, 32, 33, 34, 35, 37, 43, 47, 48, 49, 50, 51, 52, 57, 59, 65, 85, 96, 100, 130], "default": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 40, 41, 46, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131], "batch": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130], "bool": [0, 4, 8, 9, 11, 12, 13, 31, 34, 35, 40, 41, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 89, 90, 91, 92, 93, 96, 100, 102, 112, 118, 119, 124, 125, 126, 127, 131], "true": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 41, 43, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 63, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131], "copi": [0, 34, 35, 47, 48, 49, 50, 51, 52, 59, 61, 66, 67, 72], "between": [0, 5, 34, 35, 40, 46, 47, 48, 49, 50, 51, 52, 63, 74, 89, 113, 115, 116, 117, 122], "cpu": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 47, 48, 49, 50, 51, 52, 57, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131], "gpu": [0, 4, 10, 33, 34, 35, 47, 48, 49, 50, 51, 52, 130], "occur": [0, 34, 35, 47, 48, 49, 50, 51, 52, 53, 58, 89, 117], "asynchron": [0, 34, 35, 47, 48, 49, 50, 51, 52, 131], "respect": [0, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 47, 48, 49, 50, 51, 52, 61, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 131], "host": [0, 4, 34, 35, 47, 48, 49, 50, 51, 52, 131], "For": [0, 4, 5, 32, 33, 34, 35, 36, 38, 47, 48, 49, 50, 51, 52, 57, 59, 63, 64, 65, 77, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130], "other": [0, 4, 31, 32, 33, 34, 35, 36, 40, 47, 48, 49, 50, 51, 52, 57, 59, 61, 63, 65, 108, 113, 122, 124, 125, 130], "case": [0, 4, 5, 8, 9, 10, 11, 12, 13, 34, 35, 40, 47, 48, 49, 50, 51, 52, 57, 61, 93, 94, 96, 102, 104, 118, 122, 126, 127, 130], "argument": [0, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 33, 34, 35, 40, 43, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 64, 65, 70, 71, 75, 77, 84, 85, 91, 92, 93, 94, 95, 97, 99, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130], "ha": [0, 34, 35, 40, 43, 47, 48, 49, 50, 51, 52, 57, 58, 59, 61, 95, 112, 115, 122, 130], "effect": [0, 4, 34, 35, 47, 48, 49, 50, 51, 52], "callabl": [0, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 62, 63, 64, 65, 77, 79, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131], "receiv": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 40, 43, 47, 48, 49, 50, 51, 52, 57, 93, 94, 95, 97, 99, 100, 102, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 126, 127], "tupl": [0, 4, 10, 34, 35, 47, 48, 49, 50, 51, 52, 67, 72, 74, 81, 88, 95, 100, 108, 115, 118, 121, 124, 126, 131], "tensor": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 47, 48, 49, 50, 51, 52, 55, 59, 65, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131], "batch_x": [0, 34, 35, 47, 48, 49, 50, 51, 52], "batch_i": [0, 34, 35, 47, 48, 49, 50, 51, 52], "return": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131], "updat": [0, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 35, 42, 49, 50, 51, 52, 61, 66, 68, 69, 71, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129], "The": [0, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 35, 40, 41, 43, 47, 48, 53, 57, 59, 61, 63, 67, 68, 78, 80, 86, 96, 97, 99, 101, 102, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130], "intern": [0, 5, 8, 9, 12, 13, 24, 25, 26, 30, 31, 32, 34, 35, 36, 37, 40, 41, 46, 47, 48, 57, 58, 60, 73, 82, 89, 96, 100, 124, 130, 131], "chang": [0, 4, 10, 13, 14, 15, 16, 17, 19, 20, 21, 23, 27, 28, 31, 32, 33, 34, 35, 40, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 64, 65, 68, 69, 70, 71, 75, 77, 78, 80, 83, 84, 85, 90, 91, 92, 95, 103, 115, 118, 124, 126, 127, 130, 131], "now": [0, 4, 33, 34, 35, 45, 47, 48, 84, 90, 95, 115, 131], "onli": [0, 4, 18, 31, 33, 34, 35, 40, 41, 47, 48, 57, 58, 59, 65, 71, 85, 100, 101, 102, 105, 113, 118, 122], "move": [0, 1, 34, 35, 47, 48, 49, 50, 51, 52, 53, 57, 58, 61, 129, 131], "input": [0, 4, 5, 18, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 47, 48, 53, 57, 58, 59, 64, 65, 77, 79, 85, 91, 92, 94, 95, 100, 101, 104, 105, 108, 115, 118, 121, 124, 126, 127, 131], "data": [0, 4, 5, 8, 9, 10, 11, 12, 13, 18, 24, 25, 26, 29, 30, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 57, 59, 60, 84, 87, 88, 91, 93, 94, 99, 100, 101, 103, 104, 105, 112, 113, 118, 122, 124, 125, 126, 127, 130, 131], "correct": [0, 34, 35, 41, 47, 48, 57, 90, 130], "should": [0, 4, 10, 31, 33, 34, 35, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 74, 75, 77, 81, 85, 89, 91, 92, 93, 97, 100, 101, 102, 103, 109, 110, 111, 112, 114, 118, 119, 122, 124, 125, 126, 127], "user": [0, 4, 5, 8, 9, 11, 12, 13, 29, 30, 33, 34, 35, 40, 42, 43, 46, 47, 48, 57, 58, 61, 64, 65, 79, 100, 119, 130], "more": [0, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 33, 34, 35, 36, 38, 40, 43, 58, 59, 63, 64, 65, 73, 75, 82, 85, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130], "inform": [0, 4, 10, 34, 35, 59, 63, 65, 85, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127], "see": [0, 4, 5, 33, 34, 35, 36, 38, 40, 55, 57, 58, 59, 64, 89, 90, 92, 100, 108, 122, 124, 128, 130], "pytorch": [0, 4, 5, 29, 33, 34, 35, 40, 59, 64, 65, 77, 78, 80, 83, 85, 92, 124, 129, 130], "document": [0, 34, 35, 92, 129], "": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 40, 43, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131], "explan": [0, 34, 35], "add_early_stopping_by_val_scor": 0, "patienc": [0, 60, 75, 128], "metric_nam": [0, 10, 55, 57, 59, 64, 65, 75, 77, 85, 90, 91, 92, 103], "score_sign": [0, 57], "1": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 35, 36, 40, 43, 46, 49, 50, 51, 52, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131], "earli": 0, "stop": [0, 60, 63, 75, 86], "handler": [0, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 36, 40, 45, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 129, 131], "base": [0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 42, 46, 55, 56, 57, 58, 59, 62, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130], "score": [0, 56, 57, 58, 60, 95, 96, 102, 105, 115, 116, 117], "name": [0, 4, 10, 33, 34, 35, 40, 41, 45, 46, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 103, 118, 124, 125, 130, 131], "provid": [0, 2, 4, 5, 10, 30, 31, 32, 33, 36, 37, 40, 43, 56, 57, 58, 59, 60, 62, 63, 64, 65, 76, 77, 85, 91, 92, 102, 103, 108, 110, 124, 125, 130], "metric": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 40, 46, 47, 48, 55, 57, 59, 60, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129], "increas": [0, 60, 63, 68, 71, 72, 74, 75, 80, 81], "order": [0, 5, 95, 117], "keep": [0, 4, 5, 38, 57, 59, 61, 63, 65, 85, 130, 131], "number": [0, 4, 29, 30, 33, 35, 40, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 82, 85, 86, 90, 91, 92, 94, 101, 103, 104, 105, 112, 121, 122, 124, 126, 127, 131], "wait": [0, 60], "improv": [0, 60, 75, 131], "run": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 36, 40, 41, 43, 45, 46, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130, 131], "present": [0, 40, 112], "state": [0, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 36, 38, 40, 45, 47, 48, 49, 50, 51, 52, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "float": [0, 4, 9, 55, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 85, 86, 88, 89, 97, 100, 102, 110, 113, 115, 116, 117, 118, 119, 121], "sign": [0, 57], "error": [0, 15, 17, 18, 20, 21, 22, 24, 25, 26, 57, 59, 84, 100, 109, 111, 113, 114, 131], "like": [0, 4, 5, 10, 33, 57, 90, 103, 108, 124, 126, 127, 130, 131], "e": [0, 5, 36, 40, 43, 56, 57, 58, 59, 60, 64, 65, 76, 77, 84, 85, 89, 90, 91, 92, 98, 99, 106, 107, 118, 122, 123, 124, 125, 130, 131], "g": [0, 5, 40, 56, 57, 58, 59, 64, 65, 76, 77, 84, 85, 89, 90, 91, 92, 98, 99, 105, 106, 107, 118, 122, 123, 124, 125, 130, 131], "better": [0, 56, 57], "neg": [0, 4, 57, 93, 112, 127], "object": [0, 40, 41, 46, 55, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 77, 79, 85, 87, 88, 89, 90, 91, 92, 102, 105, 118, 124, 125, 131], "larger": [0, 18, 24, 25, 26, 30, 31, 33, 40, 57, 69, 84, 100], "ar": [0, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 31, 36, 40, 43, 53, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 77, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131], "retain": [0, 57, 58], "A": [0, 10, 18, 26, 27, 36, 40, 41, 45, 57, 58, 60, 70, 106, 107, 113, 119, 130], "earlystop": 0, "gen_save_best_models_by_val_scor": 0, "save_handl": [0, 57], "n_save": [0, 57, 58, 59, 65, 92], "3": [0, 4, 5, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 40, 43, 44, 54, 55, 57, 58, 61, 66, 70, 73, 74, 75, 76, 78, 79, 80, 87, 88, 90, 94, 97, 98, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131], "tag": [0, 10, 55, 59, 64, 65, 77, 85, 91, 92], "val": 0, "kwarg": [0, 4, 30, 31, 32, 33, 40, 46, 53, 55, 57, 58, 59, 63, 64, 65, 66, 70, 72, 73, 75, 77, 82, 85, 90, 91, 92, 108, 124, 125, 130], "add": [0, 4, 40, 61], "save": [0, 5, 35, 36, 40, 53, 56, 57, 58, 59, 60, 65, 72, 75, 84, 92, 124], "best": [0, 57, 59, 65, 75, 92, 115, 116, 117], "highest": [0, 57, 58], "logic": [0, 40], "how": [0, 61, 63, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129], "store": [0, 5, 18, 24, 25, 26, 36, 37, 40, 45, 57, 58, 59, 84, 87, 88, 100, 121, 130, 131], "deleg": 0, "union": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 63, 64, 65, 66, 67, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131], "basesavehandl": [0, 57], "two": [0, 5, 40, 57, 58, 61, 63, 100, 121], "checkpoint": [0, 5, 53, 56, 58, 59, 61, 65, 92, 131], "dictionari": [0, 10, 36, 40, 46, 56, 57, 59, 63, 64, 65, 66, 67, 72, 77, 85, 90, 91, 92, 103, 108, 118, 124, 125], "filenam": [0, 53, 56, 57, 58, 59, 65, 87, 88, 131], "If": [0, 4, 8, 9, 10, 11, 12, 13, 30, 33, 34, 35, 36, 40, 47, 48, 53, 57, 58, 59, 61, 64, 65, 68, 69, 71, 75, 76, 77, 84, 85, 90, 91, 92, 96, 97, 99, 100, 101, 103, 105, 108, 109, 110, 111, 113, 114, 118, 119, 120, 122, 124, 125, 130, 131], "can": [0, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 40, 42, 43, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 77, 79, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131], "inherit": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 42, 43, 57, 58, 130], "implement": [0, 2, 14, 18, 24, 25, 26, 32, 40, 55, 57, 63, 95, 96, 100, 101, 107, 108, 124, 130], "remov": [0, 1, 40, 41, 45, 53, 55, 56, 57, 58, 59, 63, 65], "fix": [0, 14, 19, 57], "In": [0, 4, 5, 10, 18, 31, 40, 56, 57, 59, 61, 79, 93, 95, 100, 101, 108, 118, 122, 124, 126, 127, 128, 130], "need": [0, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 41, 57, 58, 61, 63, 65, 85, 90, 91, 92, 97, 99, 109, 110, 111, 113, 114, 118, 119, 120, 124, 125, 130, 131], "disk": [0, 53, 57, 58], "defin": [0, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 40, 42, 43, 46, 47, 48, 55, 57, 58, 60, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130], "disksav": [0, 5, 57, 58, 61], "dict": [0, 10, 34, 40, 57, 58, 60, 61, 63, 66, 67, 72, 87, 96, 103, 108, 124], "have": [0, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 40, 57, 59, 61, 64, 65, 77, 82, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 130], "state_dict": [0, 5, 36, 40, 57, 58, 60, 63, 66, 67, 72, 124], "load_state_dict": [0, 5, 40, 57, 60, 63, 66, 67, 72, 124], "fetch": [0, 4, 5, 43, 46, 87, 88], "epoch": [0, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 36, 40, 43, 45, 46, 57, 58, 59, 60, 62, 64, 65, 68, 69, 71, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130, 131], "prefix": [0, 56, 57, 58], "_": [0, 4, 24, 25, 26, 36, 40, 57, 58, 89, 92], "By": [0, 4, 5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 46, 57, 67, 85, 90, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131], "ani": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 40, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 82, 85, 87, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130, 131], "keyword": [0, 30, 33, 40, 46, 53, 57, 58, 59, 75, 77, 85, 92, 108, 125, 130], "arg": [0, 4, 12, 13, 33, 40, 55, 58, 59, 64, 65, 71, 77, 85, 89, 90, 91, 92, 100, 124, 125, 130], "pass": [0, 4, 10, 35, 40, 42, 43, 46, 54, 56, 57, 58, 63, 65, 72, 75, 84, 90, 91, 93, 95, 97, 99, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 127, 130], "construct": [0, 35, 59, 65, 72, 75, 85], "save_best_model_by_val_scor": 0, "output_path": [0, 87, 88], "path": [0, 53, 57, 58, 59, 85, 87, 88, 92, 131], "indic": [0, 5, 37, 41, 43, 58, 80, 89, 96, 122, 130, 131], "where": [0, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 53, 54, 57, 58, 59, 61, 64, 65, 67, 72, 77, 85, 90, 91, 92, 93, 95, 97, 99, 101, 102, 105, 108, 109, 111, 113, 114, 126, 127], "setup_any_log": 0, "logger": [0, 55, 59, 64, 65, 77, 85, 90, 91, 92, 129, 131], "logger_modul": 0, "log_every_it": 0, "deprec": [0, 41, 129], "sinc": [0, 1, 35, 40, 43, 58, 59, 60, 61, 64, 65, 77, 85, 91, 92, 130], "version": [0, 1, 4, 5, 10, 13, 14, 15, 16, 17, 19, 20, 21, 23, 27, 28, 31, 32, 33, 34, 35, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 95, 101, 103, 105, 112, 113, 115, 116, 117, 118, 119, 124, 126, 127, 130, 131], "4": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 40, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130, 131], "pleas": [0, 4, 5, 30, 31, 33, 36, 38, 40, 41, 56, 57, 58, 59, 63, 64, 65, 77, 85, 90, 91, 92, 101, 105, 113, 130], "instead": [0, 1, 35, 41, 58, 59, 64, 65, 77, 85, 90, 91, 92], "setup_tb_log": 0, "setup_visdom_log": 0, "setup_mlflow_log": 0, "etc": [0, 5, 33, 40, 57, 59, 92, 131], "baselogg": [0, 55], "setup_clearml_log": 0, "100": [0, 5, 25, 40, 43, 61, 76, 103, 128], "clearml": [0, 59, 128], "log": [0, 4, 10, 55, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 90, 91, 92, 95, 99, 103, 104, 131], "list": [0, 2, 4, 40, 41, 55, 57, 59, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 95, 96, 115, 116, 117, 124, 129], "averag": [0, 4, 8, 40, 61, 89, 95, 102, 104, 108, 110, 113, 115, 116, 117, 118, 121, 122, 125, 126, 127, 130], "learn": [0, 9, 14, 19, 57, 59, 63, 64, 65, 67, 68, 71, 72, 73, 74, 76, 77, 82, 85, 91, 92, 96, 126, 127, 128], "rate": [0, 59, 63, 64, 65, 67, 68, 71, 72, 73, 74, 76, 77, 82, 85, 91, 92, 112, 128], "singl": [0, 4, 33, 41, 45, 46, 56, 57, 58, 60, 86, 89, 90, 94, 104, 121, 122, 130], "torch": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 48, 50, 53, 57, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131], "kei": [0, 10, 33, 40, 46, 57, 58, 59, 60, 63, 64, 65, 77, 85, 91, 92, 96, 103, 108, 124], "interv": 0, "attach": [0, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 40, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129], "iter": [0, 5, 10, 34, 35, 36, 37, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 71, 72, 74, 75, 77, 85, 87, 90, 91, 92, 103, 130], "To": [0, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 57, 58, 59, 64, 65, 77, 85, 91, 92, 97, 99, 100, 101, 103, 109, 110, 111, 113, 114, 119, 120, 130], "set": [0, 4, 5, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 30, 40, 46, 57, 58, 59, 61, 65, 67, 73, 74, 76, 78, 79, 80, 81, 82, 83, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130], "clearmllogg": [0, 59], "setup_common_distrib_training_handl": 0, "train_sampl": 0, "to_sav": [0, 5, 57, 58, 59, 61, 63, 65], "save_every_it": 0, "1000": [0, 57, 105], "lr_schedul": [0, 5, 57, 70, 72, 75, 76, 78, 80, 83, 128], "with_gpu_stat": 0, "output_nam": 0, "with_pbar": 0, "with_pbar_on_it": 0, "stop_on_nan": 0, "clear_cuda_cach": 0, "also": [0, 4, 5, 21, 36, 40, 42, 43, 57, 58, 59, 63, 64, 65, 77, 85, 88, 90, 91, 92, 101, 118, 130], "support": [0, 4, 30, 31, 32, 33, 34, 35, 40, 49, 57, 59, 65, 126, 127, 130], "distribut": [0, 5, 18, 29, 30, 31, 32, 33, 53, 56, 57, 58, 59, 100, 124, 129, 131], "configur": [0, 4, 18, 29, 30, 31, 32, 33, 40, 53, 56, 57, 58, 59, 66, 73, 82, 100, 124, 130, 131], "terminateonnan": [0, 87], "schedul": [0, 5, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 129], "modelcheckpoint": [0, 57, 92], "runningaverag": [0, 90], "update_funct": 0, "progress": [0, 10, 90, 103], "bar": [0, 10, 18, 26, 27, 90, 103], "distributedsampl": [0, 30, 130], "sampler": [0, 4, 29, 30, 36, 37, 39, 130], "call": [0, 4, 5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 31, 35, 40, 43, 56, 57, 59, 65, 70, 85, 89, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 127, 130], "set_epoch": 0, "start": [0, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 34, 35, 36, 37, 40, 43, 44, 47, 48, 49, 50, 51, 52, 54, 57, 58, 63, 67, 68, 69, 71, 75, 76, 78, 80, 83, 87, 89, 93, 95, 97, 99, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 130, 131], "map": [0, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 34, 40, 56, 57, 58, 60, 63, 66, 67, 72, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 131], "instanc": [0, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 50, 57, 59, 61, 65, 72, 75, 87, 88, 97, 98, 99, 106, 107, 109, 110, 111, 113, 114, 118, 119, 120, 123, 130], "each": [0, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 40, 46, 47, 48, 49, 50, 51, 52, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130], "mutual": [0, 18, 40, 100], "exclus": [0, 40], "paramschedul": [0, 1, 67, 72, 76], "lrschedul": [0, 76], "nativ": [0, 4, 31, 32, 33], "gpuinfo": 0, "pynvml": 0, "packag": [0, 4, 33, 63, 64, 66, 77, 85, 91, 101], "instal": [0, 33, 59, 63, 64, 65, 66, 77, 85, 90, 91, 92, 101, 105], "associ": [0, 40, 53, 56, 59, 65, 130], "wise": [0, 130], "ad": [0, 4, 9, 10, 13, 31, 32, 33, 34, 35, 36, 40, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 65, 68, 69, 70, 71, 76, 85, 94, 95, 97, 99, 103, 104, 109, 110, 111, 113, 114, 118, 119, 120, 124, 126, 127, 130, 131], "cuda": [0, 4, 30, 31, 34, 35, 40, 48, 49, 50, 51, 61, 64, 77, 101, 119, 130, 131], "empty_cach": 0, "end": [0, 5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 40, 43, 63, 68, 69, 71, 74, 76, 77, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130], "detail": [0, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 36, 38, 40, 57, 58, 64, 90, 92, 95, 101, 105, 115, 116, 117, 122, 128, 130], "setup_common_training_handl": 0, "mlflow": [0, 64], "mlflowlogg": [0, 55, 64], "setup_neptune_log": 0, "neptun": [0, 65, 128], "neptunelogg": [0, 65], "setup_plx_log": 0, "polyaxon": [0, 77], "polyaxonlogg": [0, 55, 77], "tensorboard": [0, 10, 85], "directori": [0, 53, 57, 58, 59, 85, 131], "tensorboardlogg": [0, 55, 85], "setup_trains_log": 0, "wa": [0, 1, 33, 40, 53, 89, 118], "renam": 0, "visdom": [0, 91, 128], "visdomlogg": [0, 55, 91], "setup_wandb_log": 0, "wandb": [0, 92, 128], "wandblogg": [0, 92], "6": [1, 4, 5, 35, 40, 57, 58, 61, 63, 74, 80, 81, 87, 88, 93, 101, 102, 105, 110, 115, 116, 126, 127, 128], "fastailrfind": 1, "basictimeprofil": 1, "handlerstimeprofil": 1, "14": [1, 5, 34, 35, 40, 43, 49, 83], "task": [2, 4, 5, 11, 13, 59], "definit": 2, "botchkarev": [2, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28], "2018": [2, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 105], "page": 2, "30": [2, 4, 5, 8, 40, 43, 74, 128], "appendix": 2, "2": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 40, 43, 50, 53, 57, 58, 59, 61, 65, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130], "mathemat": 2, "complet": [2, 4, 5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 36, 40, 43, 44, 46, 57, 60, 65, 75, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 129, 131], "from": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131], "collect": [3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 44, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 86, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 130], "import": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 37, 40, 42, 49, 50, 51, 52, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131], "ordereddict": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 57, 60, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127], "nn": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 57, 58, 61, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130], "ignit": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "engin": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131], "util": [3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 37, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 129], "contrib": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "regress": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 129], "evalu": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 40, 47, 48, 57, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131], "doctest": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "def": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 36, 40, 42, 43, 44, 45, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130], "eval_step": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "default_evalu": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "param_tensor": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "zero": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 128], "requires_grad": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 128], "default_optim": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "sgd": [3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 57, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 128], "lr": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 55, 57, 59, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129], "trainer": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 40, 42, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 129, 131], "could": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 58, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 130], "test": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 63, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "must": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 57, 58, 63, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130], "hi": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "own": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 65, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "testsetup": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "get_default_train": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "train_step": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "default_model": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "sequenti": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "linear": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 57, 58, 61, 63, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "fc": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 59, 65, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 85, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "manual_se": [3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131], "666": [3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 127], "multipl": [4, 5, 33, 57, 58, 61, 72, 78, 80, 83, 86, 115, 130], "backend": [4, 30, 31, 32, 33, 36, 130], "nccl": [4, 33], "gloo": [4, 33], "mpi": [4, 33], "xla": [4, 30, 32, 33, 52, 56, 57], "tpu": [4, 33, 35, 52, 57, 130], "via": [4, 33, 45], "horovod": [4, 31, 32, 33], "framework": [4, 31, 33], "we": [4, 5, 30, 31, 32, 59, 63, 64, 65, 77, 79, 85, 91, 92, 101, 105, 108, 124, 130], "context": [4, 31, 33, 45, 59, 63, 65, 85, 91], "manag": [4, 33, 45, 63, 65, 85, 91], "simplifi": [4, 33], "code": [4, 5, 29, 33, 65, 130], "setup": [4, 5, 30, 33, 37, 40, 57, 58, 59, 62, 64, 65, 77, 85, 91, 92, 108, 124, 129, 130, 131], "all": [4, 10, 18, 24, 25, 26, 30, 31, 32, 35, 40, 42, 52, 56, 57, 58, 59, 63, 64, 65, 75, 77, 85, 90, 91, 92, 100, 102, 108, 124, 125, 129, 130], "abov": [4, 57, 105, 112, 118, 130], "method": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131], "auto_model": 4, "auto_optim": 4, "auto_dataload": 4, "help": [4, 37, 59, 62, 64, 65, 77, 85, 91, 92, 129, 130], "adapt": [4, 29, 30, 31, 32, 130], "transpar": [4, 129], "wai": [4, 5, 31, 37, 63, 130], "loader": 4, "exist": [4, 53, 58, 61, 63, 78, 79, 80, 81, 82, 83, 100, 131], "main": [4, 5, 33, 91, 96], "py": [4, 33], "idist": [4, 30, 31, 32, 33, 57], "local_rank": [4, 33, 130], "config": [4, 33, 92], "print": [4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 40, 45, 57, 58, 61, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 130], "get_rank": [4, 33, 57], "train_load": [4, 5, 30, 40, 84], "dataset": [4, 30, 40, 59, 60, 64, 65, 77, 85, 91, 92], "batch_siz": [4, 5, 30, 64, 77, 93, 94, 96, 100, 101, 102, 104, 105, 108, 112, 113, 121, 122, 126, 127, 130], "32": [4, 5, 30, 40], "num_work": [4, 30, 36, 91, 130], "12": [4, 5, 10, 34, 40, 47, 48, 56, 80, 90, 103, 128, 131], "shuffl": [4, 5, 30], "size": [4, 5, 29, 30, 31, 33, 69, 83, 94, 101, 104, 108, 119, 121, 130], "automat": [4, 10, 30, 34, 35, 40, 57, 59, 90, 92, 103, 124, 125], "resnet50": 4, "ddp": [4, 14, 15, 16, 17, 19, 20, 21, 23, 27, 28], "dp": 4, "just": [4, 5, 92], "itself": [4, 30], "accord": [4, 5, 33, 57, 108, 112, 130], "01": [4, 40, 68, 71, 72, 119, 128, 131], "except": [4, 43, 53, 58, 113, 126, 127, 129, 130], "overrid": [4, 32, 36, 40, 56, 78, 79, 80, 81, 82, 83, 130], "safe": 4, "behind": 4, "xm": [4, 32, 53, 56, 58], "optimizer_step": [4, 32], "optimizi": 4, "perform": [4, 12, 13, 31, 61, 90], "dist_config": [4, 33], "nproc_per_nod": [4, 33], "specifi": [4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 33, 40, 41, 53, 57, 58, 63, 64, 90, 91, 93, 94, 95, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130], "launch": [4, 33], "python": [4, 33, 91, 130], "start_method": 4, "fork": 4, "jupyt": [4, 90], "notebook": [4, 90, 128], "parallel": [4, 29, 105, 130, 131], "b": [4, 10, 33, 40, 43, 57, 99, 106, 107, 113, 130], "execut": [4, 5, 33, 38, 40, 41, 43, 55, 63, 76, 89, 100, 130], "exampl": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 37, 40, 42, 45, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131], "cifar10": [4, 5], "found": [4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 40, 63, 65, 95, 101, 105, 108, 115, 116, 117, 124], "here": [4, 5, 40, 65, 101, 130], "group": [4, 33, 68, 69, 71, 72, 73, 74, 75], "initi": [4, 5, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 31, 33, 35, 40, 55, 59, 61, 75, 76, 93, 95, 97, 99, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 130, 131], "wrap": [4, 30, 31, 32, 57, 70, 72, 75, 128], "about": [4, 36, 43], "final": [4, 18, 53, 58, 100, 130], "spawn": [4, 33], "has_native_dist_support": 4, "avail": [4, 18, 24, 25, 26, 30, 31, 32, 33, 59, 64, 65, 77, 84, 85, 90, 91, 92, 100, 126, 127], "has_xla_support": 4, "torch_xla": [4, 52, 131], "all_gath": 4, "gather": [4, 18, 100, 124], "oper": [4, 12, 13, 18, 43, 44, 90, 100, 130], "across": [4, 18, 35, 49, 50, 51, 52, 100, 102, 118, 126, 127, 130], "particip": [4, 29, 33, 130], "shape": [4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 59, 85, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 113, 114, 119, 121, 122, 126, 127, 130, 131], "integ": [4, 57, 58, 59, 64, 65, 67, 74, 77, 81, 85, 91, 92, 115, 126, 130], "world_siz": [4, 30], "string": [4, 9, 10, 57, 59, 64, 65, 77, 85, 90, 91, 92, 103, 118, 124, 125, 130], "current": [4, 10, 18, 24, 25, 26, 29, 31, 33, 36, 39, 40, 41, 43, 57, 58, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 89, 90, 100, 103, 118, 124, 125, 130], "doe": [4, 5, 40, 58, 59, 61, 64, 65, 77, 80, 83, 85, 91, 92], "belong": [4, 59, 65, 85, 99, 126, 127], "veri": 4, "11": [4, 5, 13, 35, 40, 43, 49, 50, 51, 52, 72, 80, 88, 97, 109, 110, 111, 114, 119], "all_reduc": 4, "op": [4, 32, 121], "sum": [4, 40, 94, 95, 112, 130], "reduc": [4, 59, 65, 74, 75, 81, 85, 91, 101, 115, 116, 117, 130], "reduct": [4, 55, 59, 65, 85, 91, 130], "possibl": [4, 5, 57, 58, 65, 85, 91, 92, 113, 126, 131], "product": [4, 130], "min": [4, 75, 87, 88, 130], "max": [4, 28, 40, 75, 87, 88, 97, 128, 130], "AND": 4, "OR": 4, "adasum": 4, "available_backend": [4, 30, 31, 32], "barrier": 4, "synchron": [4, 36, 38, 92, 129], "broadcast": [4, 18, 31, 32, 100], "src": [4, 118], "safe_mod": 4, "make": [4, 5, 30, 31, 40, 56, 57, 118], "sure": [4, 30, 31, 56], "otherwis": [4, 35, 56, 57, 58, 60, 63, 75, 85, 90, 96, 102, 113, 118, 130], "crash": [4, 5], "non": [4, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 93, 94, 95, 97, 99, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127], "rank": [4, 18, 29, 30, 31, 32, 53, 57, 58, 59, 100, 124, 131], "anyth": [4, 35], "discard": 4, "mind": [4, 5, 57, 63], "mode": [4, 59, 61, 75, 95, 128], "work": [4, 14, 15, 16, 17, 19, 20, 21, 23, 27, 28, 57, 73, 82, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127], "dens": 4, "It": [4, 5, 10, 40, 58, 60, 61, 63, 65, 85, 91, 92, 101, 102, 103, 105, 118, 124, 130], "lead": [4, 18, 24, 25, 26, 84, 100, 101], "some": [4, 5, 36, 40, 69, 126, 127, 130], "slower": 4, "than": [4, 18, 24, 25, 26, 31, 33, 40, 60, 63, 65, 69, 75, 84, 90, 93, 100, 101, 124, 131], "without": [4, 5, 30, 33, 57, 122, 130], "y": [4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 40, 42, 47, 48, 49, 50, 51, 52, 93, 95, 97, 99, 100, 101, 102, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 130], "t1": [4, 128], "rand": [4, 5, 105, 113, 119, 130], "5": [4, 5, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 40, 43, 47, 48, 49, 50, 51, 52, 57, 61, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 90, 93, 95, 96, 97, 100, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 124, 127, 128, 130, 131], "s1": 4, "abc": 4, "3456": 4, "els": [4, 40, 57, 125], "empti": [4, 84, 90], "assert": [4, 10, 36, 40, 103, 118, 124, 125], "isinst": [4, 118], "those": [4, 5], "do": [4, 40, 41, 43, 44, 84, 89, 122], "placehold": 4, "new": [4, 32, 39, 40, 47, 48, 49, 50, 51, 52, 54, 57, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 88, 95, 101, 105, 112, 113, 115, 116, 117, 119, 125, 126, 127, 130, 131], "index": [4, 33, 74, 79, 81, 87, 88, 98, 106, 107, 112, 119, 120, 122, 123, 130], "dist": [4, 33], "destroy_process_group": 4, "get_local_rank": 4, "local": [4, 30, 33, 59, 87, 88, 92], "within": [4, 29], "get_nnod": 4, "node": [4, 33, 130], "get_node_rank": 4, "get_nproc_per_nod": 4, "per": [4, 33, 40, 46, 103, 126, 127], "get_world_s": 4, "world": [4, 30, 31, 33], "hostnam": 4, "accept": [4, 31, 33, 43, 53, 57, 58, 59, 64, 65, 77, 84, 85, 90, 91, 92, 113, 124], "timeout": 4, "timedelta": 4, "minut": 4, "init_method": [4, 33], "env": [4, 33, 59], "info": [4, 33, 131], "torch_init": 4, "comm": 4, "hvd_init": 4, "multi": [4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 80, 86, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 130], "torchrun": [4, 33], "train_fn": 4, "c": [4, 40, 43, 99, 126, 127], "is_avail": 4, "is_initi": 4, "f": [4, 40, 45, 61, 102, 115, 116, 117, 125, 126, 127, 130], "window": [4, 65, 91], "file": [4, 33, 53, 56, 57, 58, 59, 87, 88, 90, 92, 131], "tmp": [4, 5, 33, 36, 40, 57, 58], "share": [4, 65, 92], "model_nam": 4, "given": [4, 5, 10, 31, 33, 40, 46, 57, 59, 60, 63, 65, 67, 85, 87, 88, 98, 105, 118, 122], "serial": [4, 5, 53, 58, 130], "new_group": 4, "subset": 4, "pg_option": 4, "one_rank_first": 4, "ensur": [4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 59, 93, 94, 95, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127], "first": [4, 5, 8, 9, 11, 12, 13, 33, 40, 46, 57, 58, 61, 67, 68, 74, 76, 94, 100, 104, 108, 121, 126, 127, 131], "environ": [4, 5, 54, 65, 91], "block": [4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 93, 94, 95, 97, 99, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127], "insid": [4, 90], "flag": [4, 89, 91, 93, 126, 127], "global": [4, 57, 58, 59, 62, 64, 65, 77, 85, 91, 92], "download_dataset": 4, "d": [4, 33, 43], "13": [4, 5, 34, 35, 40, 47, 48, 49, 50, 51, 52, 68, 69, 71, 87], "one_rank_onli": 4, "with_barri": 4, "decor": [4, 5, 38, 40, 130], "filter": [4, 40, 41, 43, 122, 130], "wrt": 4, "synchronis": 4, "mean": [4, 17, 18, 21, 22, 23, 27, 35, 40, 49, 50, 51, 52, 57, 61, 87, 88, 92, 96, 97, 99, 100, 101, 102, 109, 110, 111, 113, 114, 121, 123, 125, 126, 127, 130], "some_handl": 4, "set_local_rank": 4, "hint": 4, "up": [4, 5, 61, 65, 68, 69, 71, 76, 94, 130], "init_process_group": [4, 33], "dist_info": 4, "show_config": 4, "displai": [4, 90], "fn": [4, 93, 127], "kwargs_dict": 4, "entrypoint": 4, "top": [4, 120], "level": [4, 129, 131], "so": [4, 40, 53, 58, 83, 118, 122, 126, 127, 130], "pickl": [4, 130], "impos": 4, "multiprocess": 4, "nnode": [4, 33], "node_rank": [4, 33], "master_addr": [4, 33], "127": 4, "master_port": [4, 33], "2222": [4, 15], "mp": [4, 34, 35, 49], "start_process": 4, "xmp": 4, "hvd_run": 4, "toler": 4, "ignor": [4, 35, 59, 63, 98, 106, 107, 123, 130], "rais": [4, 6, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 40, 53, 57, 58, 59, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130], "23": [4, 5, 10, 40, 86, 103, 131], "8": [4, 5, 14, 15, 16, 17, 33, 40, 43, 54, 67, 70, 72, 74, 75, 76, 80, 81, 97, 130, 131], "master": [4, 33], "7": [4, 5, 32, 35, 40, 49, 50, 51, 52, 57, 59, 64, 65, 66, 77, 78, 79, 80, 81, 82, 83, 85, 90, 91, 92, 93, 95, 102, 108, 115, 120, 126, 127, 128], "googl": 4, "colab": 4, "core": [4, 40, 131], "xla_model": [4, 131], "sync": [4, 92], "temporari": [4, 53, 58, 59], "forc": 4, "manual": [4, 59, 77, 118], "destroi": 4, "done": [4, 5, 36, 40, 65, 85, 91, 92, 93, 102, 113, 118, 124, 125, 126, 127, 130], "get_": 4, "impact": [4, 5, 90], "librari": [5, 101, 129, 130], "contain": [5, 10, 36, 40, 41, 46, 56, 57, 63, 66, 67, 72, 86, 87, 88, 103, 112, 122, 124, 125], "approxim": 5, "reproduc": [5, 37], "origin": 5, "behaviour": [5, 40, 58], "easili": 5, "deseri": 5, "its": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 33, 36, 40, 55, 57, 58, 59, 61, 64, 65, 75, 76, 77, 85, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 129], "data_load": [5, 40, 57], "create_dir": [5, 53, 57, 58], "add_event_handl": [5, 40, 45, 54, 57, 58, 59, 60, 61, 65, 67, 68, 70, 71, 72, 74, 75, 76, 86, 92], "epoch_complet": [5, 40, 43, 45, 46, 57, 58, 59, 61, 64, 65, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 90, 91, 92, 130], "max_epoch": [5, 35, 36, 40, 46, 57, 58, 59, 63, 64, 65, 67, 68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 90, 91, 92, 131], "l": [5, 115, 116], "checkpoint_50000": 5, "pt": [5, 36, 40, 57, 58], "restor": [5, 40, 63], "to_load": [5, 57, 61], "load": [5, 35, 40, 57, 61, 87, 88], "checkpoint_fil": 5, "load_object": [5, 57, 61], "n": [5, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 59, 65, 68, 85, 94, 95, 97, 99, 104, 105, 109, 111, 114, 115, 117, 118, 124, 125, 126, 127, 128, 131], "continu": [5, 40], "mnist": [5, 59, 65, 92, 128], "gener": [5, 59, 61, 64, 65, 77, 78, 80, 83, 85, 91, 92, 105, 129], "rather": [5, 65, 101, 131], "difficult": 5, "achiev": [5, 128], "reli": 5, "aspect": 5, "softwar": 5, "hardwar": 5, "note": [5, 31, 40, 43, 57, 58, 60, 65, 101, 105, 122, 127], "random": [5, 38, 131], "take": [5, 41, 57, 58, 59, 60, 64, 65, 68, 77, 78, 79, 80, 81, 82, 83, 85, 89, 91, 92, 108], "your": [5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 35, 59, 65, 93, 94, 95, 97, 99, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127], "problem": 5, "platform": 5, "releas": 5, "seed": [5, 46, 64, 77, 131], "cudnn": [5, 36], "applic": [5, 31, 34, 35, 47, 48, 49, 50, 51, 52, 56, 57, 68, 118, 124], "enough": 5, "rerun": 5, "experi": [5, 64, 77, 85], "deterministicengin": [5, 35], "reproduciblebatchsampl": [5, 36], "control": [5, 54, 89, 115, 116, 117], "precis": [5, 8, 11, 34, 35, 36, 73, 82, 95, 96, 102, 115, 116, 117, 122, 125, 130], "roughli": 5, "look": [5, 10, 90, 103, 131], "rang": [5, 36, 40, 61, 63, 89, 113, 119], "num_epoch": [5, 36], "set_se": [5, 36], "do_single_epoch_iter": [5, 36], "dataload": [5, 30, 35, 36, 37, 39, 40, 43, 46, 63, 87, 88, 130], "made": 5, "trivial": 5, "usag": [5, 10, 38, 57, 103, 118, 124, 125, 128, 129], "random_train_data_load": 5, "arang": 5, "print_train_data": 5, "tolist": [5, 11, 13, 40], "56": 5, "40": [5, 57, 74], "epoch_length": [5, 36, 40, 46, 63], "2nd": 5, "rng_state": 5, "31": [5, 40], "18": [5, 40, 65], "16": [5, 8, 33, 40, 88, 113, 119], "10": [5, 10, 33, 40, 43, 50, 53, 57, 58, 60, 63, 65, 66, 73, 74, 75, 79, 81, 82, 83, 89, 90, 92, 101, 103, 105, 113, 126, 127, 128, 130, 131], "33": [5, 40], "36": 5, "37": 5, "19": [5, 40, 43, 88], "9": [5, 14, 15, 16, 17, 40, 43, 58, 59, 65, 68, 70, 71, 74, 75, 78, 79, 80, 83, 85, 93, 102, 115, 126, 127, 130], "20": [5, 33, 40, 74, 82, 83, 122, 125, 128, 131], "26": [5, 40], "29": [5, 40, 43], "35": [5, 103], "38": 5, "34": [5, 40, 90], "22": [5, 40, 88], "17": [5, 10, 40, 87, 90, 103], "25": [5, 20, 21, 23, 25, 28, 40, 43, 67, 83, 128], "21": [5, 8, 40, 74, 131], "24": [5, 10, 40, 43, 103], "15": [5, 40, 81, 83, 128], "39": 5, "28": [5, 40], "27": [5, 40], "sampl": [5, 30, 34, 35, 47, 48, 49, 50, 51, 52, 94, 104, 112, 121, 122, 126, 127], "exactli": [5, 36], "simul": [5, 66, 67, 70, 72, 73, 75, 76, 82], "previou": [5, 40, 63], "skip": [5, 59, 61], "correspond": [5, 10, 57, 59, 64, 65, 67, 72, 77, 85, 91, 92, 112, 118], "after": [5, 34, 35, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 63, 64, 65, 75, 76, 77, 84, 85, 87, 88, 90, 91, 92, 118, 130], "datapoint": 5, "augment": 5, "middl": [5, 69, 71], "thu": 5, "remain": [5, 74, 90], "until": [5, 40, 74], "differ": [5, 9, 11, 30, 40, 56, 76, 101, 118, 124, 125, 130], "issu": [5, 8, 9, 11, 12, 13, 29, 40, 100], "period": [5, 57, 58, 83, 118, 124, 125], "dure": [5, 8, 9, 11, 12, 13, 40, 43, 53, 57, 58, 59, 61, 63, 64, 65, 66, 67, 70, 72, 73, 75, 77, 78, 79, 80, 82, 83, 85, 91, 92, 118, 122, 124, 125, 130], "random_train_data_gener": 5, "yield": 5, "randint": [5, 130], "iteration_complet": [5, 10, 40, 43, 54, 57, 59, 61, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 103, 118, 124, 130], "user_handl": 5, "77": [5, 57, 128], "randomli": 5, "intend": 5, "alter": 5, "produc": [5, 30, 36, 59, 64, 65, 77, 85, 91, 92], "keep_random_st": 5, "numpi": [5, 38, 82, 128, 131], "therefor": [5, 130], "deal": 5, "describ": 5, "notcomputableerror": [6, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 129, 130], "cannot": [6, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 63, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130], "output_transform": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 40, 47, 48, 49, 50, 51, 52, 55, 59, 63, 64, 65, 77, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130], "lambda": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 40, 47, 48, 49, 50, 51, 52, 57, 58, 59, 61, 63, 64, 65, 77, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130], "check_compute_fn": [8, 9, 11, 12, 13, 100], "accumul": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 35, 49, 50, 51, 52, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130], "predict": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 47, 48, 84, 90, 93, 97, 99, 100, 101, 102, 105, 108, 109, 111, 112, 114, 122, 124, 126, 127], "ground": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 97, 109, 111, 112, 114, 122], "truth": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 112, 122], "sklearn": [8, 9, 11, 12, 13, 19, 96], "average_precision_scor": 8, "transform": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 47, 48, 49, 50, 51, 52, 57, 58, 59, 63, 64, 65, 77, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130], "process_funct": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 46, 84, 86, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 130], "form": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 49, 50, 51, 52, 65, 68, 78, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 130], "expect": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 47, 48, 58, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127], "you": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 40, 47, 48, 65, 77, 86, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 130], "want": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 86, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127], "warn": [8, 9, 11, 12, 13, 57, 61, 100, 131], "storag": [8, 9, 12, 13, 24, 25, 26, 57, 58, 59, 96, 100], "compris": [8, 11, 12, 13], "y_pred": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 40, 42, 47, 48, 49, 50, 51, 52, 93, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130], "either": [8, 11, 12, 13, 90, 91], "probabl": [8, 11, 12, 13, 99, 105, 126], "estim": [8, 11, 12, 13], "confid": [8, 11, 12, 13], "activ": [8, 11, 12, 13, 57, 124], "shown": [8, 11, 12, 13], "below": [8, 11, 12, 13, 40, 43, 89, 93, 100, 102, 108, 124, 126, 127, 128, 130], "activated_output_transform": 8, "softmax": 8, "avg_precis": [8, 11, 12, 13], "79": [8, 10], "70": 8, "46": [8, 131], "54": 8, "84": [8, 128], "y_true": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 93, 96, 98, 99, 100, 101, 102, 106, 107, 108, 112, 118, 122, 123, 125, 126, 127, 130], "average_precis": 8, "9166": 8, "weight": [9, 40, 55, 57, 59, 61, 65, 85, 91, 92, 95, 96, 102, 126, 127], "cohen": 9, "kappa": 9, "wieght": 9, "quadrat": 9, "cohen_kappa_scor": 9, "whether": [9, 41, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 112, 118], "simpli": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 90, 97, 99, 109, 110, 111, 113, 114, 119, 120], "format": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 90, 97, 99, 109, 110, 111, 113, 114, 119, 120, 122, 124, 130, 131], "output_tranform": [9, 94, 97, 99, 104, 109, 110, 111, 113, 114, 119, 120], "ck": 9, "4285": 9, "get_cohen_kappa_fn": 9, "scikit": [9, 14, 19, 96, 126, 127], "memori": [10, 18, 24, 25, 26, 84, 100, 131], "percentag": [10, 21, 25, 90], "report": [10, 59, 96], "measur": [10, 89, 119, 126, 127, 130], "mem": 10, "tqdm": [10, 90, 103, 128], "progressbar": [10, 35, 90, 103], "persist": [10, 90, 103], "50": [10, 43, 66, 73, 90, 103, 128], "59": 10, "00": [10, 103, 131], "tb_logger": [10, 85], "log_handl": [10, 55, 59, 64, 65, 77, 85, 91, 92], "outputhandl": [10, 55, 59, 64, 65, 77, 85, 91, 92], "event_nam": [10, 40, 45, 46, 55, 57, 58, 59, 64, 65, 77, 85, 90, 91, 92, 103], "On": [10, 103, 124, 125], "under": [10, 12, 84, 103, 124, 125], "which": [10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 34, 40, 41, 43, 47, 48, 53, 55, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 71, 77, 82, 85, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130], "valid": [10, 40, 55, 57, 59, 60, 61, 64, 65, 77, 85, 90, 91, 92, 95, 103, 115, 116, 117, 118, 119, 124, 125, 130], "epochwis": [10, 103, 118, 124, 125], "usage_nam": [10, 103, 124, 125, 130], "batchwis": [10, 103, 118, 124, 125], "eventenum": [10, 40, 43], "mymetr": [10, 103, 118, 124, 125], "is_attach": [10, 103, 118, 124, 125], "helper": [10, 30, 31, 32, 38, 39, 55, 57, 59, 62, 64, 65, 72, 76, 77, 85, 91, 92, 94, 103, 104, 121, 124, 129, 131], "put": [10, 103, 124], "explicitli": [10, 103, 124], "sent": [10, 103, 124], "result": [10, 18, 41, 63, 87, 88, 100, 101, 103, 124, 125, 130], "actual": [10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 35, 41, 58, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127], "quantiti": [10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130], "interest": [10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130], "shallow": [10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125], "flatten": [10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125], "reset": [10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 40, 57, 60, 63, 84, 89, 93, 95, 97, 99, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 129, 131], "onc": [10, 40, 41, 43, 80, 82, 93, 95, 97, 99, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 127, 130], "recal": [11, 96, 102, 115, 116, 117, 122, 125, 130], "pair": [11, 57], "threshold": [11, 13, 75, 93, 102, 126, 127, 128], "binari": [11, 13, 93, 102, 122, 126, 127], "classif": [11, 13, 65, 96, 99, 100, 122], "precision_recall_curv": 11, "sigmoid_output_transform": [11, 12, 13], "sigmoid": [11, 12, 13, 122], "0474": [11, 12, 13], "5987": [11, 12, 13], "7109": [11, 12, 13], "9997": [11, 12, 13], "prec_recall_curv": 11, "round": [11, 13, 93, 102, 122, 126, 127], "6667": [11, 98, 102], "area": 12, "characterist": [12, 13], "curv": [12, 63], "roc": [12, 13], "auc": 12, "roc_auc_scor": 12, "roc_curv": [12, 13], "6666": [12, 93, 96], "roc_auc": 13, "fpr": 13, "tpr": 13, "333": 13, "inf": 13, "711": 13, "047": 13, "calcul": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 93, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 122, 123, 126, 127], "canberra": 14, "text": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 59, 61, 93, 95, 96, 97, 101, 102, 105, 106, 107, 109, 111, 113, 114, 126, 127], "cm": [14, 98, 106, 107, 122, 123, 130], "sum_": [14, 15, 16, 17, 18, 19, 21, 22, 23, 27, 28, 95, 97, 99, 105, 109, 111, 114, 126, 127], "j": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 106, 107, 112, 113], "frac": [14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 93, 97, 99, 102, 105, 106, 107, 109, 111, 113, 114, 126, 127], "a_j": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "p_j": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "distanc": [14, 19, 28, 101, 110, 113], "__init__": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 79, 101, 124, 130], "8000": 14, "ab": [14, 63, 75, 128], "denomin": 14, "fraction": [15, 16], "absolut": [15, 17, 18, 20, 21, 24, 25, 26, 73, 82, 109], "fae": 15, "fractional_abs_error": 15, "bia": [16, 23, 59, 65, 85], "fb": 16, "fractional_bia": 16, "4000": [16, 102], "geometr": [17, 18, 104, 121], "gmae": 17, "exp": [17, 18, 63, 95, 99, 105], "ln": [17, 18], "2723": 17, "rel": [18, 21, 26, 75], "gmrae": 18, "math": 18, "target": [18, 24, 25, 26, 40, 45, 84, 97, 100, 108, 109, 110, 111, 113, 114, 119, 120, 122, 124, 126], "potenti": [18, 24, 25, 26, 84, 100], "ram": [18, 24, 25, 26, 84, 100], "gmare": 18, "75": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 100, 109, 110, 111, 113, 114, 119, 120, 126, 127, 128], "manhattan": 19, "md": [19, 24, 25, 26], "compat": [19, 30, 126, 127], "maximum": [20, 54, 113], "maxa": 20, "max_": [20, 113], "left": [20, 21, 24, 25, 26, 61, 95, 102, 113], "lvert": [20, 106, 107, 109], "rvert": [20, 106, 107, 109], "right": [20, 21, 24, 25, 26, 61, 95, 102, 113], "mae": [20, 24, 109], "mare": 21, "mape": [21, 25], "refer": [21, 22, 23, 59, 63, 65, 85, 92, 95, 101, 105, 115, 116, 117], "me": 22, "625": [22, 24], "normal": [23, 76, 112, 119, 122, 130], "mnb": 23, "median": [24, 25, 26], "mdae": 24, "float32": [24, 25, 26, 27, 100, 119], "mdape": 25, "cdot": [25, 61, 95, 97], "mdrae": 26, "mrae": 26, "r": [27, 95, 102, 115, 116, 117, 125], "squar": [27, 101, 111, 113, 114], "coeffici": [27, 98], "determin": [27, 40, 59, 65, 85, 118, 122], "r2": 27, "8035": 27, "wave": [28, 68], "hedg": 28, "whd": 28, "auto": [29, 30, 31, 32, 129], "num_replica": 29, "proxi": 29, "http": [29, 35, 40, 63, 65, 78, 80, 83, 91, 95, 124], "github": [29, 35, 40, 63, 91], "com": [29, 40, 63, 91], "23430": 29, "issuecom": 29, "562350407": 29, "assum": [29, 96, 130], "constant": [29, 61], "follow": [30, 31, 40, 42, 46, 57, 61, 93, 94, 101, 102, 104, 112, 118, 119, 121, 122, 124, 126, 127, 130], "scale": [30, 35, 50, 63], "equal": [30, 57, 58, 60, 74, 89, 122, 131], "worker": [30, 91, 131], "nproc": 30, "anoth": [30, 57, 58, 59, 61, 62, 64, 65, 73, 77, 82, 85, 91, 92, 118, 124, 125], "distributedproxysampl": 30, "pin_memori": [30, 130], "custom": [30, 34, 35, 40, 42, 43, 47, 48, 49, 50, 51, 52, 88, 90, 124, 129], "iterabledataset": 30, "mpdeviceload": 30, "_mpdeviceload": 30, "distribt": [30, 31], "train_dataset": 30, "drop_last": 30, "sync_bn": 31, "send": [31, 35, 40, 91], "distributeddataparallel": [31, 35, 57, 61, 130], "dataparallel": [31, 57, 61], "variabl": [31, 65, 91, 94, 104, 121, 130], "convert_sync_batchnorm": 31, "nvidia": [31, 35], "apex": [31, 35, 51], "batchnorm": 31, "convers": 31, "amp": [31, 34, 35, 48, 50], "opt_level": 31, "goal": 32, "distributedoptim": 32, "launcher": [33, 129, 131], "spawn_kwarg": 33, "child": 33, "standalon": [33, 59], "script": 33, "horovodrun": 33, "total": [33, 40, 46, 87, 88, 89], "machin": 33, "mandatori": 33, "tcp": 33, "ip": 33, "address": 33, "port": [33, 91], "np": [33, 73, 82, 128], "3344": 33, "h": [33, 99, 113], "hostname1": 33, "hostname2": 33, "both": [33, 112, 126, 127], "some_fil": 33, "23456": 33, "15000": 33, "func": [33, 38, 40, 130, 131], "posit": [33, 77, 85, 92, 93, 95, 102, 104, 112, 126, 127, 130], "model_transform": [34, 35, 47, 48, 49, 50, 51, 52], "amp_mod": [34, 35], "model_fn": [34, 35, 47, 48, 49, 50, 51, 52], "factori": [34, 35, 47, 48, 49, 50, 51, 52], "convert": [34, 35, 47, 48, 49, 50, 51, 52, 101, 105, 131], "assign": [34, 35, 47, 48, 49, 50, 51, 52, 101, 105, 122], "fit": [34, 47, 48], "cast": [34, 35], "float16": [34, 35, 119], "infer": [34, 47, 48, 112], "batch_pr": [34, 47, 48], "mix": [34, 35, 43], "determinist": [35, 36, 37, 38, 39, 129], "scaler": [35, 50], "gradient_accumulation_step": [35, 49, 50, 51, 52], "item": [35, 40, 49, 50, 51, 52, 57, 100, 118, 125, 130], "gradscal": [35, 50], "convert_tensor": [35, 129, 131], "tqdm_logger": 35, "prepare_batch_fn": 35, "directli": [35, 57, 90, 130], "output_transform_fn": 35, "behavior": 35, "pbar": [35, 90], "attribut": [35, 40, 43, 46, 57, 58, 59, 61, 64, 65, 68, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 124, 130], "beforehand": 35, "finish": 35, "wrapper": [35, 41, 70, 75, 92, 101], "io": 35, "html": [35, 78, 80, 83, 95], "deriv": [36, 40, 56], "dataflow": [36, 38, 87, 88, 129], "seed_offset": 36, "resum": [36, 40, 61, 89, 129], "setup_saved_rng_st": 36, "replac": [36, 39, 57, 58, 60, 90, 124], "setup_sampl": 36, "benchmark": 36, "restart": [36, 40], "handl": [36, 40, 45, 57, 61, 95, 130], "state_dict_user_kei": [36, 40], "append": [36, 40, 84], "alpha": [36, 40, 59, 64, 65, 77, 85, 90, 91, 92, 115, 116, 117, 118], "beta": [36, 40, 59, 64, 65, 77, 85, 90, 91, 92, 96, 102, 125, 130], "init_user_valu": [36, 40], "save_engin": [36, 40], "batch_sampl": 37, "start_iter": 37, "batchsampl": [37, 39], "update_dataload": 37, "rewind": 37, "setup_batch_indic": 37, "intact": 38, "new_batch_sampl": 39, "emit": 40, "goe": [40, 67, 68, 69, 71], "last_event_nam": 40, "trigger": [40, 41, 43, 82, 87, 88, 90, 130], "v0": [40, 43, 58, 77], "interrupt": [40, 43], "featur": [40, 101, 105, 130], "behav": 40, "certain": [40, 130], "corner": 40, "compar": [40, 101], "interrupt_resume_en": 40, "basic": 40, "criterion": [40, 42, 108], "zero_grad": 40, "backward": [40, 42, 126, 127], "update_model": 40, "log_train": 40, "batch_loss": 40, "param_group": [40, 59, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 85, 91, 92], "10874069479016124": 40, "1700": 40, "4217900575859437": 40, "accuraci": [40, 57, 59, 64, 65, 75, 77, 85, 90, 91, 92, 108, 118, 120, 124, 126, 127, 130], "predict_on_batch": 40, "eval": [40, 61, 101], "no_grad": [40, 101], "val_acc": [40, 56], "val_dataload": 40, "imag": [40, 99, 101, 105, 113, 119], "std": [40, 87, 88], "compute_mean_std": 40, "reshap": 40, "dtype": [40, 94, 95, 98, 102, 104, 106, 107, 113, 119, 126, 127], "float64": [40, 94, 95, 98, 102, 104, 106, 107, 119, 126, 127], "mean2": 40, "compute_engin": 40, "img_mean": 40, "img_mean2": 40, "sqrt": [40, 101, 114], "len": [40, 108], "500": [40, 59, 64, 65, 77, 85, 91, 92], "fire": [40, 43], "register_ev": [40, 42, 55], "invok": 40, "No": 40, "restrict": [40, 100], "signatur": [40, 121], "bound": [40, 63, 68, 69, 71], "removableeventhandl": [40, 55, 90], "exception_rais": [40, 43], "print_epoch": [40, 45], "events_list": 40, "execute_someth": 40, "thing": 40, "relat": 40, "becom": [40, 43], "flexibl": [40, 43], "allow": [40, 43, 99], "fire_ev": [40, 42], "thei": [40, 108, 112, 119], "been": [40, 58, 59, 90], "regist": [40, 45, 59, 62, 64, 65, 77, 85, 89, 91, 92], "exchang": 40, "dynam": 40, "among": 40, "has_event_handl": 40, "check": [40, 86, 124, 125, 130], "search": [40, 63], "signal": [40, 113], "check_input_data": 40, "call_interrupt": 40, "4rd": 40, "500th": 40, "499": 40, "shortcut": [40, 55], "event_to_attr": 40, "let": [40, 57, 108, 113, 124], "point": 40, "open": [40, 90], "door": 40, "loop": 40, "even": [40, 43], "being": [40, 94, 104, 105], "customev": [40, 43], "foo_ev": [40, 43], "bar_ev": [40, 43], "bwd_event": 40, "opt_ev": 40, "trigger_custom_ev": 40, "do_foo_op": 40, "do_bar_op": 40, "enum": [40, 41, 45], "time_iteration_start": 40, "time_iteration_complet": 40, "tbptt_event_to_attr": 40, "time_iter": 40, "access": [40, 59, 64, 65, 77, 85, 91, 92, 124], "remove_event_handl": 40, "max_it": [40, 46], "At": [40, 57], "timer": [40, 54], "time": [40, 46, 54, 57, 59, 63, 64, 65, 77, 85, 87, 88, 89, 91, 92, 129, 131], "alreadi": [40, 57, 59, 61, 78, 79, 80, 81, 82, 83, 90], "kept": [40, 57, 58], "NOT": 40, "repeat": [40, 67], "again": [40, 61], "taken": [40, 67, 122, 131], "account": [40, 78, 79, 80, 81, 82, 83], "count": [40, 60, 112, 126, 127], "stopiter": 40, "preprocess": 40, "iteration_start": [40, 43, 44, 59, 64, 65, 67, 68, 70, 71, 72, 74, 76, 77, 85, 87, 89, 91, 92, 130], "latter": [40, 108, 118, 124], "usual": [40, 68, 69, 71, 108], "switch_batch": 40, "preprocess_batch": 40, "begin": 40, "set_data": 40, "next": [40, 43, 67, 68, 69, 71, 74, 75, 81], "processing_funct": 40, "newli": [40, 73, 82], "modifi": [40, 95], "switch": 40, "data1": [40, 57], "data2": 40, "switch_iter": 40, "5000": [40, 94, 102, 106, 107, 126, 127], "switch_dataload": 40, "termin": [40, 43, 54], "2669": 40, "terminate_epoch": [40, 43], "terminate_single_epoch": [40, 43], "epoch_start": [40, 43, 84, 87, 130], "event_filt": [41, 43], "touch": 41, "boolean": 41, "alwai": [41, 57], "static": [41, 57, 87, 88, 122], "before_and_after_event_filt": 41, "default_event_filt": 41, "every_before_and_after_event_filt": 41, "every_event_filt": 41, "member": [41, 126], "once_event_filt": 41, "backpropev": 42, "backward_start": 42, "backward_complet": 42, "optim_step_complet": 42, "function_before_backprop": 42, "built": [43, 108], "get_batch_start": 43, "get_batch_complet": 43, "dataloader_stop_iter": 43, "encount": [43, 122], "tabl": [43, 118, 126], "illustr": [43, 130], "variou": [43, 55, 128, 130], "event_complet": [43, 59], "custom_event_filt": 43, "call_on_special_ev": 43, "someth": [43, 44, 84, 125], "call_everi": 43, "10th": [43, 74], "call_onc": 43, "50th": [43, 103], "call_befor": 43, "call_every_itr_before_aft": 43, "depend": [43, 101, 119, 125], "combin": [43, 130], "call_on_ev": [43, 44], "stack": 44, "__or__": 44, "weakref": 45, "statement": [45, 55], "protocol": 45, "callableeventwithfilt": [45, 46, 55, 61, 82, 90, 130], "eventslist": [45, 55, 61, 82], "unregist": 45, "get_event_attrib_valu": [46, 59, 64, 65, 77, 85, 91, 92], "update_fn": [49, 50, 51, 52, 65, 85, 91], "dirnam": [53, 58, 59], "atom": [53, 58], "require_empti": [53, 58, 92], "save_on_rank": [53, 57, 58], "destin": [53, 58], "guarante": [53, 58, 90], "damag": [53, 58], "doesnt": 53, "limit_sec": 54, "28800": 54, "session": [54, 59], "limit": [54, 130], "gracefulli": 54, "exce": 54, "second": [54, 87, 89, 103, 131], "hour": 54, "basehandl": 55, "forward": [55, 101], "attach_opt_params_handl": [55, 59, 64, 65, 77, 85, 90, 91, 92], "optimizerparamshandl": [55, 59, 64, 65, 77, 85, 91, 92], "miss": 55, "attach_output_handl": [55, 59, 64, 65, 77, 85, 91, 92], "baseoptimizerparamshandl": 55, "param_nam": [55, 59, 64, 65, 66, 67, 68, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 91, 92, 128], "baseoutputhandl": 55, "global_step_transform": [55, 57, 58, 59, 62, 64, 65, 77, 85, 91, 92], "state_attribut": [55, 59, 64, 65, 77, 85, 90, 91, 92], "baseweightshandl": 55, "whitelist": [55, 59, 65, 85], "baseweightsscalarhandl": 55, "norm": [55, 59, 65, 85, 91, 110], "scalar": [55, 59, 65, 66, 67, 74, 75, 78, 79, 80, 81, 83, 85, 90, 91, 100, 130], "__call__": [56, 79], "overridden": [56, 59], "treat": 56, "slightli": 56, "stuck": [56, 57], "abstract": [56, 66, 69, 73, 82, 124], "metadata": 56, "addition": 56, "basenam": 56, "epoch_checkpoint": 56, "score_nam": [56, 57, 58, 59, 65, 92], "prioriti": [56, 57], "higher": [56, 60], "6554435": 56, "filename_prefix": [57, 58, 59, 65, 92], "score_funct": [57, 58, 59, 60, 65, 92], "filename_pattern": [57, 58], "include_self": [57, 58], "greater_or_equ": [57, 58], "cloud": [57, 92], "write": 57, "avoid": [57, 91, 97, 110, 131], "alon": 57, "get_default_score_fn": 57, "older": [57, 58], "desir": [57, 58, 59, 64, 65, 77, 85, 91, 92], "global_step": [57, 58, 59, 64, 65, 77, 85, 91, 92], "global_step_from_engin": [57, 58, 59, 64, 65, 77, 85, 91, 92], "pattern": [57, 58], "render": [57, 58, 90], "would": [57, 58, 75, 125, 130], "includ": [57, 58, 59, 65, 85, 96], "latest": [57, 58], "instanti": [57, 58], "structur": [57, 119], "suffix": 57, "ext": [57, 131], "constructor": 57, "compos": 57, "neg_val_loss": 57, "_neg_val_loss": 57, "1234": 57, "templat": 57, "30000": 57, "94": 57, "collid": 57, "overwritten": 57, "newer": 57, "expos": 57, "last_checkpoint": [57, 58], "checkpoint_12345": 57, "friendli": 57, "zeroredundancyoptim": 57, "wrong": [57, 130], "checkpoint_it": 57, "checkpoint_": 57, "gst": 57, "checkpoint_7000": 57, "checkpoint_8000": 57, "checkpoint_5": 57, "checkpoint_6": 57, "best_model_9_accuraci": 57, "best_model_10_accuraci": 57, "78": [57, 128], "customis": 57, "alia": 57, "field": 57, "best_acc_scor": 57, "best_model_handl": 57, "val_accuraci": 57, "neg_loss_scor": 57, "val_neg_loss": 57, "filepath": [57, 131], "model_state_dict": 57, "opt_state_dict": 57, "strict": 57, "enabl": [57, 95], "part": [57, 63], "pretrain": [57, 101, 105], "transfer": 57, "tempfil": 57, "pathlib": 57, "temporarydirectori": 57, "tmpdirnam": 57, "myprefix": [57, 58], "1e": [57, 66, 73, 97, 110, 125, 128], "randn": 57, "checkpoint_fp": 57, "myprefix_checkpoint_40": 57, "obj": 57, "reload_object": 57, "load_kwarg": 57, "filename_compon": 57, "compon": 57, "global_st": 57, "independ": [57, 73, 82], "fold": 57, "data0": 57, "setup_filename_pattern": 57, "with_prefix": 57, "with_scor": 57, "with_score_nam": 57, "with_global_step": 57, "least": [57, 86, 130], "consid": [58, 60, 99, 125, 126, 127], "show": [58, 61, 63, 91, 96, 108, 124, 130], "further": 58, "There": [58, 61], "counter": [58, 60, 89, 130], "action": 58, "step_numb": 58, "parent": 58, "pariti": 58, "o": [58, 65], "mymodel": 58, "sort": 58, "listdir": 58, "myprefix_mymodel_20": 58, "myprefix_mymodel_30": 58, "plot": [59, 63, 64, 65, 66, 73, 77, 82, 84, 85, 90, 91, 92, 122, 128], "upload": 59, "solut": 59, "choic": 59, "server": [59, 65, 91], "s3": 59, "bucket": 59, "pip": [59, 63, 64, 65, 66, 77, 85, 91, 92], "init": [59, 92], "project_nam": [59, 65], "integr": [59, 65, 92], "task_nam": 59, "cnn": [59, 65, 92], "nll": [59, 60, 64, 65, 77, 85, 90, 91, 92], "train_evalu": [59, 64, 65, 77, 84, 85, 91, 92], "weightsscalarhandl": [59, 65, 85, 91], "classmethod": [59, 66, 67, 70, 72, 73, 75, 82], "bypass_mod": 59, "bypass": 59, "github_act": 59, "unless": 59, "set_bypass_mod": 59, "doc": [59, 64, 65, 78, 80, 83, 85, 90, 130], "offlin": 59, "outsid": 59, "commun": 59, "get_task": 59, "equival": [59, 64, 65, 77, 85, 91, 92, 118, 126, 127], "current_task": 59, "Will": 59, "folder": 59, "clearmlsav": 59, "output_uri": 59, "artifact": 59, "runtim": 59, "locat": 59, "123": [59, 90], "acc": 59, "validation_evalu": [59, 65], "get_local_copi": 59, "download": [59, 65], "gradshisthandl": [59, 85], "histogram": [59, 85], "titl": [59, 64, 65, 77, 85, 91, 92, 128], "submodul": [59, 65, 85], "along": [59, 64, 65, 77, 85, 90, 91, 92], "fulli": [59, 65, 85, 125], "qualifi": [59, 60, 65, 85], "has_shape_2_1": [59, 85], "p": [59, 65, 85, 95, 102, 105, 110, 115, 116, 117, 125], "gradsscalarhandl": [59, 65, 85, 91], "upon": [59, 65, 85], "ones": [59, 65, 85, 101], "permit": [59, 65, 85], "Then": [59, 61, 65, 67, 74, 75, 82, 85], "layer": [59, 65, 85], "is_in_fc_lay": [59, 65, 85], "prepar": [59, 64, 65, 77, 85, 91, 92], "loss1": [59, 64, 65, 77, 85, 91, 92], "another_loss": [59, 64, 65, 77, 85, 91, 92], "loss2": [59, 64, 65, 77, 85, 91, 92], "label": [59, 64, 65, 73, 77, 82, 85, 91, 92, 96, 112, 120, 122, 126, 127, 128], "validation_set": [59, 64, 65, 77, 85, 91, 92], "weightshisthandl": [59, 85], "conv": [59, 85], "weight_selector": [59, 85], "has_bias_in_nam": [59, 65, 85], "custom_event_nam": [59, 62, 64, 65, 77, 85, 91, 92], "early_stop": 60, "min_delta": 60, "cumulative_delta": 60, "minimum": [60, 63, 113], "less": [60, 91], "val_loss": 60, "best_scor": 60, "ema_handl": 61, "momentum": [61, 128], "0002": 61, "momentum_warmup": 61, "warmup_it": 61, "handle_buff": 61, "exponenti": [61, 63, 78], "ema": 61, "smooth": [61, 63, 95], "theta_": 61, "t": [61, 89, 95, 96, 118, 124], "onlin": [61, 101, 130], "th": [61, 72, 99, 112, 118, 124, 125], "retriev": [61, 82, 118], "ema_momentum": 61, "warmup": 61, "phase": [61, 76], "buffer": 61, "three": [61, 75, 130], "ema_train": 61, "ema_model": 61, "track": [61, 64, 65, 77], "recommend": [61, 90], "build": [61, 96], "train_step_fn": 61, "resume_from": 61, "ckpt_handler": 61, "print_ema_momentum": 61, "val_step_fn": 61, "get_val_step_fn": 61, "run_valid": 61, "val_data_load": 61, "warm": [61, 68, 69, 71, 76], "linearli": [61, 67, 68, 69, 71, 74, 81], "002": 61, "afterward": 61, "step_fn": 61, "build_gener": 61, "discrimin": 61, "build_discrimin": 61, "gen_handl": 61, "disc_handl": 61, "get_step_fn": 61, "gen_ema_momentum": 61, "dis_ema_momentum": 61, "disc_ema_momentum": 61, "warn_if_exist": 61, "suppress": 61, "messag": [61, 90, 131], "choos": 61, "uniqu": 61, "thrown": 61, "lr_finder": 63, "finder": [63, 129], "boundari": 63, "manner": [63, 118], "valuabl": 63, "well": [63, 125, 126, 127], "network": [63, 68, 122], "what": [63, 90], "trainer_with_lr_find": 63, "get_result": [63, 87, 88], "matplotlib": [63, 66, 82, 128], "suggest": [63, 68], "lr_suggest": 63, "exit": 63, "cyclic": [63, 68, 69, 71, 128], "neural": [63, 68, 129], "arxiv": 63, "org": [63, 65, 78, 80, 83, 95, 124], "1506": 63, "01186": 63, "fastai": 63, "lr_find": 63, "apply_suggested_lr": 63, "num_it": 63, "start_lr": 63, "end_lr": 63, "step_mod": 63, "smooth_f": 63, "05": [63, 71, 74, 75, 76, 120], "diverge_th": 63, "lower": 63, "upper": 63, "factor": [63, 75, 78, 80, 83, 102, 118, 128], "best_loss": 63, "find": [63, 101], "numer": 63, "skip_start": 63, "skip_end": 63, "log_lr": 63, "display_suggest": 63, "ax": 63, "trim": 63, "logarithm": 63, "red": 63, "dot": 63, "pre": 63, "plt": [63, 66, 73, 82, 128], "subplot": [63, 128], "figur": [63, 66, 128], "savefig": 63, "jpg": 63, "tracking_uri": 64, "client": [64, 77], "uri": 64, "log_param": 64, "__class__": [64, 77], "__name__": [64, 77], "__version__": [64, 77], "get_device_nam": [64, 77], "mlflow_tracking_uri": 64, "api_token": 65, "anonym": 65, "npt_logger": 65, "experiment_nam": 65, "param": [65, 66, 67, 68, 71, 72, 74, 75, 78, 79, 80, 81, 83], "minst": [65, 92], "project": [65, 92], "api": [65, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129], "token": [65, 103, 115, 116, 117], "ai": [65, 129], "menu": 65, "neptune_api_token": 65, "secur": 65, "workspac": 65, "tom": 65, "neptune_project": 65, "init_run": 65, "leav": 65, "out": [65, 122, 130], "explor": 65, "app": 65, "neptunesav": 65, "validation_accuraci": [65, 92], "create_supervised_evalu": [65, 84, 108, 124, 130], "neptuneserv": 65, "close": [65, 77, 78, 85, 90, 91, 92], "them": [65, 86, 126, 127, 130], "ui": 65, "pytor1": 65, "chart": 65, "neptuneml": 65, "param_schedul": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83], "save_histori": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83], "param_histori": [66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83], "get_param": [66, 67, 68, 70, 71, 72, 74, 75, 78, 79, 80, 81, 83], "plot_valu": 66, "num_ev": [66, 67, 70, 72, 73, 75, 82, 128], "scheduler_kwarg": [66, 73, 75, 82], "line": 66, "line2d": 66, "pylab": [66, 128], "figsiz": [66, 128], "linearcyclicalschedul": [66, 67, 73], "start_valu": [66, 68, 69, 71, 73, 128], "end_valu": [66, 68, 69, 71, 73, 128], "cycle_s": [66, 68, 69, 71, 73, 128], "simulate_valu": [66, 67, 70, 72, 73, 75, 82, 128], "event_index": [66, 67, 70, 72, 73, 75, 79, 82], "durat": [67, 68, 69, 71, 76, 128], "concat": [67, 128], "default_train": [67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 118], "scheduler_1": [67, 68, 72, 128], "scheduler_2": [67, 68, 72, 128], "cosineannealingschedul": [67, 72], "anneal": [67, 68, 128], "cycl": [67, 68, 69, 71, 72], "indefinit": 67, "combined_schedul": 67, "print_lr": [67, 68, 70, 71, 72, 74, 76], "8828": 67, "6000": 67, "3171": 67, "value_0": 67, "value_1": 67, "cycle_mult": [68, 69, 71, 128], "start_value_mult": [68, 69, 71, 128], "end_value_mult": [68, 69, 71, 128], "warmup_dur": [68, 69, 71, 76], "param_group_index": [68, 69, 71, 72, 73, 74, 75], "half": [68, 71], "cosin": [68, 97, 128], "smith17": 68, "ratio": [68, 69, 71, 113], "iteration_": [68, 69, 71], "cosineann": [68, 72], "1464": [68, 72], "4999": [68, 72, 96], "8535": [68, 72], "001": [68, 70, 71, 72, 128], "01464": [68, 72], "04999": [68, 72], "08535": [68, 72], "smith": 68, "lesli": 68, "vision": 68, "wacv": 68, "2017": [68, 101], "ieee": 68, "winter": 68, "confer": 68, "use_legaci": 70, "steplr": [70, 83, 128], "torch_lr_schedul": [70, 76], "step_siz": [70, 82, 83, 128], "gamma": [70, 76, 78, 79, 80, 82, 83, 128], "010": 70, "monoton": 71, "kwagr": 71, "adjust": [71, 119], "back": [71, 85], "descend": 71, "ascend": 71, "togeth": [71, 130], "scheduler1": [71, 74], "scheduler2": [71, 74], "histori": [72, 75, 84, 100, 130], "scheduler_0_valu": 72, "scheduler_1_valu": 72, "scheduler_i_valu": 72, "whatev": [73, 82, 92], "lr_valu": [73, 128], "arrai": [73, 82, 128], "xlabel": [73, 82, 128], "ylabel": [73, 82, 128], "legend": [73, 82, 91, 128], "milestones_valu": [74, 81], "piecewis": [74, 81], "mileston": [74, 80, 81], "45": 74, "decreas": [74, 75], "20th": 74, "jump": 74, "21st": 74, "30th": 74, "till": 74, "third": [74, 130], "fifth": 74, "milestones_values1": 74, "08": [74, 97], "02": [74, 131], "milestones_values2": 74, "09": 74, "reducelronplateau": 75, "whose": [75, 126], "monitor": 75, "paramat": 75, "unit": [75, 122], "most": [75, 130], "multipli": 75, "threshold_mod": [75, 128], "metric_valu": [75, 128], "set_metric_v": 75, "trigger_ev": 75, "init_lr": [75, 128], "warmup_start_valu": 76, "warmup_end_valu": 76, "output_simulated_valu": 76, "fill": 76, "concatschedul": 76, "exponentiallr": [76, 78, 128], "98": [76, 118, 128], "098": 76, "09604": 76, "09411": 76, "09223": 76, "09039": 76, "plx_logger": 77, "log_input": 77, "state_param_schedul": [78, 79, 80, 81, 82, 83], "initial_valu": [78, 79, 80, 82, 83], "create_new": [78, 79, 80, 81, 82, 83], "decai": [78, 80, 83, 118], "stabl": [78, 80, 83], "81": [78, 79, 80, 83, 128], "729": [78, 79, 80, 83], "6561": [78, 79, 80, 83], "print_param": [78, 79, 80, 81, 83], "7290": [78, 79, 80, 83], "lambda_obj": 79, "lambdast": 79, "self": [79, 84, 101, 124, 130], "event_endex": 79, "5904": [79, 83], "5314": 79, "4782": 79, "4304": 79, "reach": 80, "multisteplr": 80, "96": 81, "92": 81, "88": 81, "8400": 81, "76": 81, "72": 81, "68": 81, "64": [81, 90], "pyplot": [82, 128], "step_state_param_valu": 82, "stepstateschedul": 82, "step_scheduled_param": 82, "99": 82, "visual": [84, 128], "purpos": [84, 130], "eo": 84, "create_supervised_train": [84, 90], "log_training_result": [84, 88], "y_pred0": 84, "y0": 84, "y_pred1": 84, "y1": 84, "log_dir": 85, "tb_log": 85, "favor": [85, 118], "tensorboardx": [85, 128], "fall": 85, "summarywrit": 85, "v1": 85, "terminate_on_nan": 86, "nan": [86, 104], "infinit": 86, "time_profil": [87, 88], "profil": [87, 88, 129], "train_updat": [87, 88], "log_intermediate_result": [87, 88], "print_result": [87, 88], "write_result": [87, 88], "path_to_dir": [87, 88], "csv": [87, 88], "aggreg": [87, 88, 104], "stat": [87, 126, 127], "157": 87, "46292": 87, "01452": 87, "1501": 87, "26905": 87, "07730": 87, "01258": 87, "11384": 87, "00008": 87, "1935": 87, "28461": 87, "1551": 87, "00300": 87, "02693": 87, "82721": 87, "00000": 87, "00006": 87, "piecewiselinear": 87, "03482": 87, "00001": 87, "188": 87, "00018": 87, "679": 87, "00002": 87, "20037": 87, "866": 87, "00089": 87, "1943": 87, "00010": 87, "00003": [87, 88], "empty_cuda_cach": 87, "log_elapsed_tim": [87, 88], "57860": 87, "11529": 87, "14977": 87, "12893": 87, "00790": 87, "yet": 87, "unaggreg": [87, 88], "awesome_filenam": [87, 88], "processing_stat": [87, 88], "dataflow_stat": [87, 88], "event_start": 87, "252387": [87, 88], "125676": [87, 88], "00029": [87, 88], "252342": [87, 88], "125123": [87, 88], "43245": 88, "log_validation_result": 88, "55271": 88, "log_tim": 88, "00049": 88, "00106": 88, "log_training_loss": 88, "059": 88, "04571": 88, "took": 88, "29543": 88, "00393": 88, "1875": 88, "00784": 88, "00602": 88, "00034": 88, "24365": 88, "00533": 88, "1874": 88, "01129": 88, "937": 88, "00866": 88, "00113": 88, "divid": 89, "elaps": [89, 90], "step_count": 89, "increment": 89, "forget": 89, "sleep": 89, "idl": 89, "003073937026784": 89, "2003182829997968": 89, "paus": 89, "10016545779653825": 89, "training_update_funct": 89, "callback": 89, "bar_format": 90, "desc": 90, "n_fmt": 90, "total_fmt": 90, "0f": 90, "postfix": 90, "tqdm_kwarg": 90, "l_bar": 90, "r_bar": 90, "rate_fmt": 90, "descript": [90, 118], "simpl": [90, 130], "128": 90, "06": [90, 110], "stderr": [90, 131], "log_fil": 90, "w": [90, 95, 113], "log_messag": 90, "stdout": 90, "tqdm_notebook": 90, "ipywidget": 90, "due": 90, "bug": 90, "closing_event_nam": 90, "select": [90, 113], "entri": 90, "advanc": 90, "0d": 90, "1d": [90, 94, 104, 121], "intention": 90, "preserv": 90, "wish": 90, "show_legend": 91, "vd_logger": 91, "vb_logger": 91, "raise_except": 91, "git": 91, "fossasia": 91, "url": 91, "visdom_server_url": 91, "visdom_port": 91, "concurr": 91, "futur": 91, "threadpoolexecutor": 91, "post": 91, "thread": [91, 92], "usernam": 91, "password": 91, "visdom_usernam": 91, "visdom_password": 91, "frequent": 91, "slow": 91, "down": 91, "situat": 91, "seper": 92, "entiti": 92, "bias": 92, "graph": 92, "watch": 92, "dir": 92, "model_checkpoint": 92, "is_multilabel": [93, 96, 126, 127], "multiclass": [93, 96, 102, 126, 127], "multilabel": [93, 96, 126, 127], "tp": [93, 126, 127], "tn": 93, "fp": [93, 126], "num_categori": [93, 96, 102, 126, 127], "greater": 93, "visit": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127], "0266": [93, 96, 102, 126, 127], "1719": [93, 96, 102, 126, 127], "3055": [93, 96, 102, 126, 127], "6886": [93, 96, 102, 126, 127], "3978": [93, 96, 102, 126, 127], "8176": [93, 96, 102, 126, 127], "9230": [93, 96, 102, 126, 127], "0197": [93, 96, 102, 126, 127], "8395": [93, 96, 102, 126, 127], "1785": [93, 96, 102, 126, 127], "2670": [93, 96, 102, 126, 127], "6084": [93, 96, 102, 126, 127], "8448": [93, 96, 102, 126, 127], "7177": [93, 96, 102, 126, 127], "7288": [93, 96, 102, 126, 127], "7748": [93, 96, 102], "9542": [93, 96, 102], "8573": [93, 96, 102], "element": [93, 102, 126, 127], "thresholded_output_transform": [93, 102, 126, 127], "65": [93, 102, 126, 127], "arithmet": [94, 121, 129], "rule": [94, 104, 121], "nd": [94, 104, 121], "seen": [94, 104, 122], "avg": [94, 96, 104], "er": [94, 104], "ngram": [95, 117], "no_smooth": 95, "macro": [95, 96, 126, 127], "b_": 95, "w_": 95, "p_": [95, 99], "gram": 95, "sentenc": 95, "breveti": 95, "penalti": 95, "papineni": 95, "et": [95, 101, 105], "al": [95, 101, 105], "2002": 95, "review": 95, "techniqu": 95, "chen": 95, "2014": 95, "hypothes": 95, "corpu": 95, "remark": [95, 101], "inspir": [95, 101], "nltk": 95, "smooth1": 95, "nltk_smooth2": 95, "smooth2": 95, "micro": [95, 126, 127], "www": 95, "_modul": 95, "translat": 95, "bleu_scor": 95, "nlp": 95, "m": [95, 112, 115, 116, 117, 130], "cat": [95, 115, 116, 117], "mat": [95, 115, 116, 117], "split": [95, 115, 116, 117], "_y": 95, "0393": 95, "output_dict": 96, "resembl": 96, "classification_report": 96, "underli": 96, "doesn": [96, 118], "harmon": [96, 102, 121], "metricslambda": [96, 98, 102, 106, 107, 123, 130], "cr": 96, "dict_kei": 96, "f1": [96, 125, 130], "3333": [96, 126], "3999": 96, "6111": 96, "5222": [96, 102], "2333": 96, "ep": [97, 110], "similar": [97, 119, 130], "_similar": 97, "x_i": 97, "y_i": 97, "_2": 97, "epsilon": 97, "y_": [97, 109, 111, 114], "x_": [97, 109, 111, 114], "small": [97, 110], "divis": [97, 110], "cosine_similar": 97, "pred": [97, 109, 110, 111, 113, 114, 119, 120], "5080491304397583": 97, "ignore_index": [98, 106, 107, 123], "dice": 98, "confusionmatrix": [98, 106, 107, 123, 130], "confus": [98, 106, 107, 112, 122, 123], "matrix": [98, 101, 106, 107, 112, 122, 123, 130], "background": [98, 106, 107, 122, 123, 130], "num_class": [98, 106, 107, 112, 122, 123, 130, 131], "0000": [98, 99, 106, 107, 126, 127], "quad": 99, "z_": 99, "unnorm": 99, "logit": [99, 122], "segment": 99, "6931": 99, "0986": 99, "3863": 99, "6094": 99, "3026": 99, "8902875582377116": 99, "compute_fn": 100, "entir": [100, 130], "n_target": 100, "datatyp": 100, "might": [100, 119], "mse_fn": 100, "y_target": 100, "type_a": 100, "mse": [100, 111, 113], "5729": 100, "epochmetricwarn": 100, "disabl": 100, "num_featur": [101, 105], "feature_extractor": [101, 105], "frechet": 101, "incept": [101, 105], "mu_": 101, "tr": 101, "sigma_": 101, "sigma_1": 101, "sigma_2": 101, "mu_1": 101, "covari": 101, "mu_2": 101, "heusel": 101, "faster": 101, "approach": 101, "mathiasen": 101, "2020": [101, 131], "pytorch_fid": 101, "torchvis": [101, 105], "scipi": 101, "root": [101, 114], "vector": [101, 120, 122, 130], "2048": 101, "extract": 101, "neither": [101, 105], "nor": [101, 105], "imagenet": [101, 105], "ident": [101, 105], "implicitli": [101, 105], "mention": [101, 105], "inceptionv3": 101, "wrapperinceptionv3": 101, "fid_incv3": 101, "super": [101, 124, 130], "block_idx": 101, "block_index_by_dim": 101, "wrapper_model": 101, "pytorch_fid_metr": 101, "f_": 102, "real": [102, 105], "unweight": [102, 126, 127], "7499": 102, "wps_metric": 103, "ntoken": 103, "wp": 103, "400": 103, "prod": 104, "8171": 104, "2134": 104, "d_": 105, "kl": 105, "hat": 105, "condit": [105, 130], "margin": 105, "diverg": 105, "barratt": 105, "299": 105, "intersect": [106, 123], "cap": [106, 107], "cup": [106, 107], "jaccard": 107, "iou": [107, 130], "jac": 107, "observ": 108, "extra": 108, "required_output_kei": [108, 118, 121, 124], "criterion_kwarg": 108, "standard": [108, 119, 124, 131], "nllloss": 108, "3499999": 108, "9375": [109, 125], "pairwisedist": 110, "pairwis": 110, "degre": 110, "mpd": 110, "5955": 110, "828125": 111, "denot": 112, "uint8": [112, 131], "int8": 112, "int16": 112, "int32": 112, "int64": 112, "mlcm": 112, "data_rang": [113, 119], "peak": 113, "nois": 113, "log_": 113, "8671405": 113, "grayscal": 113, "rgb": 113, "But": 113, "ycbcr": 113, "yuv": 113, "channel": 113, "And": [113, 130], "get_y_channel": 113, "219": 113, "7027966": 113, "rmse": 114, "956559480312316": 114, "variant": 115, "multiref": [115, 116, 117], "lin": [115, 116, 117], "2004": [115, 116, 117], "candid": [115, 116, 117], "roug": [116, 117], "longest": 116, "co": 117, "epoch_bound": 118, "hold": 118, "deprac": 118, "singleepochrunningbatchwis": 118, "runningbatchwis": 118, "running_avg_accuraci": 118, "log_running_avg_metr": 118, "zip": 118, "98039": 118, "98079": 118, "96117": 118, "96195": 118, "020000": 118, "019600": 118, "039208": 118, "038423": 118, "057655": 118, "insert": 118, "metricusag": [118, 124, 125], "former": 118, "runningepochwis": 118, "much": 118, "sens": [118, 126, 127], "detach": [118, 124, 125, 130], "conjunct": [118, 124, 125], "sever": [118, 124, 125], "expens": [118, 124, 125], "epoch_wis": [118, 124, 125], "batch_wis": [118, 124, 125], "kernel_s": 119, "sigma": 119, "k1": 119, "k2": 119, "03": 119, "gaussian": 119, "bfloat16": 119, "typic": 119, "255": [119, 122], "kernel": 119, "deviat": 119, "uniform": 119, "un": 119, "9218971": 119, "k": [120, 126, 127], "categor": 120, "one_hot_to_binary_output_transform": 120, "argmax": [120, 122, 130], "hot": [120, 122, 131], "top_k_accuraci": 120, "public": [121, 124], "num_exampl": 121, "confusion_matrix": 122, "schema": 122, "diagon": 122, "column": 122, "row": 122, "were": [122, 126, 127], "correctli": 122, "horizont": 122, "vertic": 122, "neglect": 122, "binary_one_hot_output_transform": 122, "to_onehot": [122, 129, 131], "24999": 123, "discuss": 124, "91221": 124, "custommetr": 124, "re": [124, 130], "becam": 124, "written": [124, 125, 131], "major": 124, "pick": 124, "proper": 124, "_state_dict_all_req_kei": 124, "metrics_lambda": 125, "obtain": 125, "recurs": 125, "partial": [125, 130], "fed": 125, "fbeta": 125, "f2": 125, "f3": 125, "f4": 125, "8571": 125, "9677": 125, "9807": 125, "too": 125, "ap": 125, "_baseprecisionrecal": [126, 127], "multicalss": [126, 127], "altogeth": [126, 127], "tp_k": [126, 127], "fp_k": 126, "v": [126, 127], "rest": [126, 127], "basi": [126, 127], "tp_n": [126, 127], "fp_n": 126, "incompat": [126, 127], "imbal": [126, 127], "precision_k": 126, "p_k": [126, 127], "weighted_metr": 126, "two_class_metr": [126, 127], "6666666666666666": [126, 127], "7500": [126, 127], "macro_metr": [126, 127], "27777777777777773": 126, "3333333333333333": [126, 127, 130], "num_label": 126, "micro_metr": [126, 127], "samples_metr": [126, 127], "2000": 126, "2222222222222222": 126, "2333333333333333": 126, "175": 126, "stand": 126, "consist": 126, "fn_k": 127, "fn_n": 127, "recall_k": 127, "comprehens": 128, "cyclegan": 128, "efficientnet": 128, "section": 128, "lr_values_1": 128, "2e": 128, "lr_values_2": 128, "lr_values_3": 128, "lr_values_4": 128, "141": 128, "ylim": 128, "142": 128, "143": 128, "144": 128, "131": 128, "132": 128, "133": 128, "150": 128, "cosineannealinglr": 128, "lr_scheduler_1": 128, "lr_scheduler_2": 128, "lr_scheduler_3": 128, "t_max": 128, "eta_min": 128, "121": 128, "122": 128, "82": 128, "83": 128, "80": 128, "suptitl": 128, "xtick": 128, "high": 129, "flexibli": 129, "our": 129, "apply_to_tensor": [129, 131], "apply_to_typ": [129, 131], "hash_checkpoint": [129, 131], "setup_logg": [129, 131], "truncat": 129, "backpropag": 129, "throught": 129, "fashion": 130, "practic": 130, "respons": 130, "care": 130, "metrics_group": 130, "As": 130, "functool": 130, "ot_func": 130, "snippet": 130, "device_id": 130, "output_devic": 130, "test_sampl": 130, "test_dataset": 130, "test_load": 130, "becaus": 130, "parti": 130, "dill": 130, "overcom": 130, "give": 130, "fine": 130, "grain": 130, "metric1": 130, "metric2": 130, "pow": 130, "unaverag": 130, "iou_metr": 130, "iou_no_bg_metr": 130, "mean_iou_no_bg_metr": 130, "12345": 130, "These": 130, "customaccuraci": 130, "ignored_class": 130, "_num_correct": 130, "_num_exampl": 130, "_devic": 130, "mask": 130, "eq": 130, "view": 130, "necessari": 130, "notic": 130, "differenti": 130, "inter": 130, "four": 130, "accompani": 130, "reinit": 130, "attr": 130, "abil": 130, "byte": 131, "input_typ": 131, "relev": 131, "pin": 131, "checkpoint_path": 131, "output_dir": 131, "hash": 131, "check_hash": 131, "hub": 131, "load_state_dict_from_url": 131, "digit": 131, "sha256": 131, "manual_seed_al": 131, "set_rng_stat": 131, "stream": 131, "asctim": 131, "levelnam": 131, "distributed_rank": 131, "critic": 131, "debug": 131, "textio": 131, "sy": 131, "readabl": 131, "07": 131, "356": 131, "358": 131, "my": 131, "torchscript": 131}, "objects": {"": [[129, 0, 0, "-", "ignite"]], "ignite": [[129, 0, 0, "-", "contrib"], [131, 0, 0, "-", "utils"]], "ignite.contrib.engines": [[0, 0, 0, "-", "common"], [0, 0, 0, "-", "tbptt"]], "ignite.contrib.engines.common": [[0, 1, 1, "", "add_early_stopping_by_val_score"], [0, 1, 1, "", "gen_save_best_models_by_val_score"], [0, 1, 1, "", "save_best_model_by_val_score"], [0, 1, 1, "", "setup_any_logging"], [0, 1, 1, "", "setup_clearml_logging"], [0, 1, 1, "", "setup_common_distrib_training_handlers"], [0, 1, 1, "", "setup_common_training_handlers"], [0, 1, 1, "", "setup_mlflow_logging"], [0, 1, 1, "", "setup_neptune_logging"], [0, 1, 1, "", "setup_plx_logging"], [0, 1, 1, "", "setup_tb_logging"], [0, 1, 1, "", "setup_trains_logging"], [0, 1, 1, "", "setup_visdom_logging"], [0, 1, 1, "", "setup_wandb_logging"]], "ignite.contrib.engines.tbptt": [[0, 2, 1, "", "Tbptt_Events"], [0, 1, 1, "", "create_supervised_tbptt_trainer"]], "ignite.contrib.metrics": [[8, 2, 1, "", "AveragePrecision"], [9, 2, 1, "", "CohenKappa"], [10, 2, 1, "", "GpuInfo"], [11, 2, 1, "", "PrecisionRecallCurve"], [12, 2, 1, "", "ROC_AUC"], [13, 2, 1, "", "RocCurve"], [2, 0, 0, "-", "regression"]], "ignite.contrib.metrics.CohenKappa": [[9, 3, 1, "", "get_cohen_kappa_fn"]], "ignite.contrib.metrics.GpuInfo": [[10, 3, 1, "", "attach"], [10, 3, 1, "", "completed"], [10, 3, 1, "", "compute"], [10, 3, 1, "", "reset"], [10, 3, 1, "", "update"]], "ignite.contrib.metrics.PrecisionRecallCurve": [[11, 3, 1, "", "compute"]], "ignite.contrib.metrics.RocCurve": [[13, 3, 1, "", "compute"]], "ignite.contrib.metrics.regression": [[14, 2, 1, "", "CanberraMetric"], [15, 2, 1, "", "FractionalAbsoluteError"], [16, 2, 1, "", "FractionalBias"], [17, 2, 1, "", "GeometricMeanAbsoluteError"], [18, 2, 1, "", "GeometricMeanRelativeAbsoluteError"], [19, 2, 1, "", "ManhattanDistance"], [20, 2, 1, "", "MaximumAbsoluteError"], [21, 2, 1, "", "MeanAbsoluteRelativeError"], [22, 2, 1, "", "MeanError"], [23, 2, 1, "", "MeanNormalizedBias"], [24, 2, 1, "", "MedianAbsoluteError"], [25, 2, 1, "", "MedianAbsolutePercentageError"], [26, 2, 1, "", "MedianRelativeAbsoluteError"], [27, 2, 1, "", "R2Score"], [28, 2, 1, "", "WaveHedgesDistance"]], "ignite.contrib.metrics.regression.CanberraMetric": [[14, 3, 1, "", "compute"], [14, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.FractionalAbsoluteError": [[15, 3, 1, "", "compute"], [15, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.FractionalBias": [[16, 3, 1, "", "compute"], [16, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError": [[17, 3, 1, "", "compute"], [17, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError": [[18, 3, 1, "", "compute"], [18, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.ManhattanDistance": [[19, 3, 1, "", "compute"], [19, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MaximumAbsoluteError": [[20, 3, 1, "", "compute"], [20, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError": [[21, 3, 1, "", "compute"], [21, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanError": [[22, 3, 1, "", "compute"], [22, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanNormalizedBias": [[23, 3, 1, "", "compute"], [23, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.R2Score": [[27, 3, 1, "", "compute"], [27, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.WaveHedgesDistance": [[28, 3, 1, "", "compute"], [28, 3, 1, "", "reset"]], "ignite.distributed.auto": [[29, 2, 1, "", "DistributedProxySampler"], [30, 1, 1, "", "auto_dataloader"], [31, 1, 1, "", "auto_model"], [32, 1, 1, "", "auto_optim"]], "ignite.distributed.launcher": [[33, 2, 1, "", "Parallel"]], "ignite.distributed.launcher.Parallel": [[33, 3, 1, "", "run"]], "ignite.distributed": [[4, 0, 0, "-", "utils"]], "ignite.distributed.utils": [[4, 1, 1, "", "all_gather"], [4, 1, 1, "", "all_reduce"], [4, 1, 1, "", "available_backends"], [4, 1, 1, "", "backend"], [4, 1, 1, "", "barrier"], [4, 1, 1, "", "broadcast"], [4, 1, 1, "", "device"], [4, 1, 1, "", "finalize"], [4, 1, 1, "", "get_local_rank"], [4, 1, 1, "", "get_nnodes"], [4, 1, 1, "", "get_node_rank"], [4, 1, 1, "", "get_nproc_per_node"], [4, 1, 1, "", "get_rank"], [4, 1, 1, "", "get_world_size"], [4, 4, 1, "", "has_native_dist_support"], [4, 4, 1, "", "has_xla_support"], [4, 1, 1, "", "hostname"], [4, 1, 1, "", "initialize"], [4, 1, 1, "", "model_name"], [4, 1, 1, "", "new_group"], [4, 1, 1, "", "one_rank_first"], [4, 1, 1, "", "one_rank_only"], [4, 1, 1, "", "set_local_rank"], [4, 1, 1, "", "show_config"], [4, 1, 1, "", "spawn"], [4, 1, 1, "", "sync"]], "ignite.engine": [[34, 1, 1, "", "create_supervised_evaluator"], [35, 1, 1, "", "create_supervised_trainer"], [47, 1, 1, "", "supervised_evaluation_step"], [48, 1, 1, "", "supervised_evaluation_step_amp"], [49, 1, 1, "", "supervised_training_step"], [50, 1, 1, "", "supervised_training_step_amp"], [51, 1, 1, "", "supervised_training_step_apex"], [52, 1, 1, "", "supervised_training_step_tpu"]], "ignite.engine.deterministic": [[36, 2, 1, "", "DeterministicEngine"], [37, 2, 1, "", "ReproducibleBatchSampler"], [38, 1, 1, "", "keep_random_state"], [39, 1, 1, "", "update_dataloader"]], "ignite.engine.deterministic.DeterministicEngine": [[36, 3, 1, "", "state_dict"]], "ignite.engine.deterministic.ReproducibleBatchSampler": [[37, 3, 1, "", "setup_batch_indices"]], "ignite.engine.engine": [[40, 2, 1, "", "Engine"]], "ignite.engine.engine.Engine": [[40, 3, 1, "", "add_event_handler"], [40, 3, 1, "", "fire_event"], [40, 3, 1, "", "has_event_handler"], [40, 3, 1, "", "interrupt"], [40, 4, 1, "", "last_event_name"], [40, 3, 1, "", "load_state_dict"], [40, 3, 1, "", "on"], [40, 3, 1, "", "register_events"], [40, 3, 1, "", "remove_event_handler"], [40, 3, 1, "", "run"], [40, 3, 1, "", "set_data"], [40, 4, 1, "", "state"], [40, 3, 1, "", "state_dict"], [40, 3, 1, "", "terminate"], [40, 3, 1, "", "terminate_epoch"]], "ignite.engine.events": [[41, 2, 1, "", "CallableEventWithFilter"], [42, 2, 1, "", "EventEnum"], [43, 2, 1, "", "Events"], [44, 2, 1, "", "EventsList"], [45, 2, 1, "", "RemovableEventHandle"], [46, 2, 1, "", "State"]], "ignite.engine.events.CallableEventWithFilter": [[41, 3, 1, "", "before_and_after_event_filter"], [41, 3, 1, "", "default_event_filter"], [41, 3, 1, "", "every_before_and_after_event_filter"], [41, 3, 1, "", "every_event_filter"], [41, 4, 1, "", "name"], [41, 3, 1, "", "once_event_filter"], [41, 4, 1, "", "value"]], "ignite.engine.events.Events": [[43, 4, 1, "", "COMPLETED"], [43, 4, 1, "", "DATALOADER_STOP_ITERATION"], [43, 4, 1, "", "EPOCH_COMPLETED"], [43, 4, 1, "", "EPOCH_STARTED"], [43, 4, 1, "", "EXCEPTION_RAISED"], [43, 4, 1, "", "GET_BATCH_COMPLETED"], [43, 4, 1, "", "GET_BATCH_STARTED"], [43, 4, 1, "", "INTERRUPT"], [43, 4, 1, "", "ITERATION_COMPLETED"], [43, 4, 1, "", "ITERATION_STARTED"], [43, 4, 1, "", "STARTED"], [43, 4, 1, "", "TERMINATE"], [43, 4, 1, "", "TERMINATE_SINGLE_EPOCH"]], "ignite.engine.events.RemovableEventHandle": [[45, 3, 1, "", "remove"]], "ignite.engine.events.State": [[46, 3, 1, "", "get_event_attrib_value"]], "ignite.exceptions": [[6, 2, 1, "", "NotComputableError"]], "ignite.handlers": [[53, 2, 1, "", "DiskSaver"], [54, 2, 1, "", "TimeLimit"], [55, 0, 0, "-", "base_logger"], [59, 0, 0, "-", "clearml_logger"], [62, 1, 1, "", "global_step_from_engine"], [64, 0, 0, "-", "mlflow_logger"], [65, 0, 0, "-", "neptune_logger"], [77, 0, 0, "-", "polyaxon_logger"], [85, 0, 0, "-", "tensorboard_logger"], [90, 0, 0, "-", "tqdm_logger"], [91, 0, 0, "-", "visdom_logger"], [92, 0, 0, "-", "wandb_logger"]], "ignite.handlers.DiskSaver": [[53, 3, 1, "", "remove"]], "ignite.handlers.base_logger": [[55, 2, 1, "", "BaseHandler"], [55, 2, 1, "", "BaseLogger"], [55, 2, 1, "", "BaseOptimizerParamsHandler"], [55, 2, 1, "", "BaseOutputHandler"], [55, 2, 1, "", "BaseWeightsHandler"], [55, 2, 1, "", "BaseWeightsScalarHandler"]], "ignite.handlers.base_logger.BaseLogger": [[55, 3, 1, "", "attach"], [55, 3, 1, "", "attach_opt_params_handler"], [55, 3, 1, "", "attach_output_handler"]], "ignite.handlers.checkpoint": [[56, 2, 1, "", "BaseSaveHandler"], [57, 2, 1, "", "Checkpoint"], [58, 2, 1, "", "ModelCheckpoint"]], "ignite.handlers.checkpoint.BaseSaveHandler": [[56, 3, 1, "", "__call__"], [56, 3, 1, "", "remove"]], "ignite.handlers.checkpoint.Checkpoint": [[57, 2, 1, "", "Item"], [57, 3, 1, "", "get_default_score_fn"], [57, 3, 1, "", "load_objects"], [57, 3, 1, "", "load_state_dict"], [57, 3, 1, "", "reload_objects"], [57, 3, 1, "", "reset"], [57, 3, 1, "", "setup_filename_pattern"], [57, 3, 1, "", "state_dict"]], "ignite.handlers.checkpoint.Checkpoint.Item": [[57, 4, 1, "", "filename"], [57, 4, 1, "", "priority"]], "ignite.handlers.clearml_logger": [[59, 2, 1, "", "ClearMLLogger"], [59, 2, 1, "", "ClearMLSaver"], [59, 2, 1, "", "GradsHistHandler"], [59, 2, 1, "", "GradsScalarHandler"], [59, 2, 1, "", "OptimizerParamsHandler"], [59, 2, 1, "", "OutputHandler"], [59, 2, 1, "", "WeightsHistHandler"], [59, 2, 1, "", "WeightsScalarHandler"], [59, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.clearml_logger.ClearMLLogger": [[59, 3, 1, "", "bypass_mode"], [59, 3, 1, "", "get_task"], [59, 3, 1, "", "set_bypass_mode"]], "ignite.handlers.clearml_logger.ClearMLSaver": [[59, 3, 1, "", "get_local_copy"], [59, 3, 1, "", "remove"]], "ignite.handlers.early_stopping": [[60, 2, 1, "", "EarlyStopping"]], "ignite.handlers.early_stopping.EarlyStopping": [[60, 3, 1, "", "load_state_dict"], [60, 3, 1, "", "state_dict"]], "ignite.handlers.ema_handler": [[61, 2, 1, "", "EMAHandler"]], "ignite.handlers.ema_handler.EMAHandler": [[61, 3, 1, "", "attach"], [61, 4, 1, "", "ema_model"], [61, 4, 1, "", "handle_buffers"], [61, 4, 1, "", "model"], [61, 4, 1, "", "momentum"]], "ignite.handlers.lr_finder": [[63, 2, 1, "", "FastaiLRFinder"]], "ignite.handlers.lr_finder.FastaiLRFinder": [[63, 3, 1, "", "apply_suggested_lr"], [63, 3, 1, "", "attach"], [63, 3, 1, "", "get_results"], [63, 3, 1, "", "lr_suggestion"], [63, 3, 1, "", "plot"]], "ignite.handlers.mlflow_logger": [[64, 2, 1, "", "MLflowLogger"], [64, 2, 1, "", "OptimizerParamsHandler"], [64, 2, 1, "", "OutputHandler"], [64, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.neptune_logger": [[65, 2, 1, "", "GradsScalarHandler"], [65, 2, 1, "", "NeptuneLogger"], [65, 2, 1, "", "NeptuneSaver"], [65, 2, 1, "", "OptimizerParamsHandler"], [65, 2, 1, "", "OutputHandler"], [65, 2, 1, "", "WeightsScalarHandler"], [65, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.neptune_logger.NeptuneSaver": [[65, 3, 1, "", "remove"]], "ignite.handlers.param_scheduler": [[66, 2, 1, "", "BaseParamScheduler"], [67, 2, 1, "", "ConcatScheduler"], [68, 2, 1, "", "CosineAnnealingScheduler"], [69, 2, 1, "", "CyclicalScheduler"], [70, 2, 1, "", "LRScheduler"], [71, 2, 1, "", "LinearCyclicalScheduler"], [72, 2, 1, "", "ParamGroupScheduler"], [73, 2, 1, "", "ParamScheduler"], [74, 2, 1, "", "PiecewiseLinear"], [75, 2, 1, "", "ReduceLROnPlateauScheduler"], [76, 1, 1, "", "create_lr_scheduler_with_warmup"]], "ignite.handlers.param_scheduler.BaseParamScheduler": [[66, 3, 1, "", "get_param"], [66, 3, 1, "", "load_state_dict"], [66, 3, 1, "", "plot_values"], [66, 3, 1, "", "simulate_values"], [66, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ConcatScheduler": [[67, 3, 1, "", "get_param"], [67, 3, 1, "", "load_state_dict"], [67, 3, 1, "", "simulate_values"], [67, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.CosineAnnealingScheduler": [[68, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.LRScheduler": [[70, 3, 1, "", "get_param"], [70, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[71, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ParamGroupScheduler": [[72, 3, 1, "", "get_param"], [72, 3, 1, "", "load_state_dict"], [72, 3, 1, "", "simulate_values"], [72, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ParamScheduler": [[73, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.PiecewiseLinear": [[74, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[75, 3, 1, "", "get_param"], [75, 3, 1, "", "simulate_values"]], "ignite.handlers.polyaxon_logger": [[77, 2, 1, "", "OptimizerParamsHandler"], [77, 2, 1, "", "OutputHandler"], [77, 2, 1, "", "PolyaxonLogger"], [77, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.state_param_scheduler": [[78, 2, 1, "", "ExpStateScheduler"], [79, 2, 1, "", "LambdaStateScheduler"], [80, 2, 1, "", "MultiStepStateScheduler"], [81, 2, 1, "", "PiecewiseLinearStateScheduler"], [82, 2, 1, "", "StateParamScheduler"], [83, 2, 1, "", "StepStateScheduler"]], "ignite.handlers.state_param_scheduler.ExpStateScheduler": [[78, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.LambdaStateScheduler": [[79, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.MultiStepStateScheduler": [[80, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler": [[81, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.StateParamScheduler": [[82, 3, 1, "", "attach"], [82, 3, 1, "", "simulate_values"]], "ignite.handlers.state_param_scheduler.StepStateScheduler": [[83, 3, 1, "", "get_param"]], "ignite.handlers.stores": [[84, 2, 1, "", "EpochOutputStore"]], "ignite.handlers.stores.EpochOutputStore": [[84, 3, 1, "", "attach"], [84, 4, 1, "", "data"], [84, 3, 1, "", "reset"], [84, 3, 1, "", "store"], [84, 3, 1, "", "update"]], "ignite.handlers.tensorboard_logger": [[85, 2, 1, "", "GradsHistHandler"], [85, 2, 1, "", "GradsScalarHandler"], [85, 2, 1, "", "OptimizerParamsHandler"], [85, 2, 1, "", "OutputHandler"], [85, 2, 1, "", "TensorboardLogger"], [85, 2, 1, "", "WeightsHistHandler"], [85, 2, 1, "", "WeightsScalarHandler"], [85, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.terminate_on_nan": [[86, 2, 1, "", "TerminateOnNan"]], "ignite.handlers.time_profilers": [[87, 2, 1, "", "BasicTimeProfiler"], [88, 2, 1, "", "HandlersTimeProfiler"]], "ignite.handlers.time_profilers.BasicTimeProfiler": [[87, 3, 1, "", "attach"], [87, 3, 1, "", "get_results"], [87, 3, 1, "", "print_results"], [87, 3, 1, "", "write_results"]], "ignite.handlers.time_profilers.HandlersTimeProfiler": [[88, 3, 1, "", "attach"], [88, 3, 1, "", "get_results"], [88, 3, 1, "", "print_results"], [88, 3, 1, "", "write_results"]], "ignite.handlers.timing": [[89, 2, 1, "", "Timer"]], "ignite.handlers.timing.Timer": [[89, 3, 1, "", "attach"], [89, 3, 1, "", "pause"], [89, 3, 1, "", "reset"], [89, 3, 1, "", "resume"], [89, 4, 1, "", "running"], [89, 3, 1, "", "step"], [89, 4, 1, "", "step_count"], [89, 4, 1, "", "total"], [89, 3, 1, "", "value"]], "ignite.handlers.tqdm_logger": [[90, 2, 1, "", "ProgressBar"]], "ignite.handlers.tqdm_logger.ProgressBar": [[90, 3, 1, "", "attach"], [90, 3, 1, "", "attach_opt_params_handler"], [90, 3, 1, "", "log_message"]], "ignite.handlers.visdom_logger": [[91, 2, 1, "", "GradsScalarHandler"], [91, 2, 1, "", "OptimizerParamsHandler"], [91, 2, 1, "", "OutputHandler"], [91, 2, 1, "", "VisdomLogger"], [91, 2, 1, "", "WeightsScalarHandler"], [91, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.wandb_logger": [[92, 2, 1, "", "OptimizerParamsHandler"], [92, 2, 1, "", "OutputHandler"], [92, 2, 1, "", "WandBLogger"], [92, 1, 1, "", "global_step_from_engine"]], "ignite.metrics": [[93, 2, 1, "", "Accuracy"], [94, 2, 1, "", "Average"], [95, 2, 1, "", "Bleu"], [96, 1, 1, "", "ClassificationReport"], [97, 2, 1, "", "CosineSimilarity"], [98, 1, 1, "", "DiceCoefficient"], [99, 2, 1, "", "Entropy"], [100, 2, 1, "", "EpochMetric"], [101, 2, 1, "", "FID"], [102, 1, 1, "", "Fbeta"], [103, 2, 1, "", "Frequency"], [104, 2, 1, "", "GeometricAverage"], [105, 2, 1, "", "InceptionScore"], [106, 1, 1, "", "IoU"], [107, 1, 1, "", "JaccardIndex"], [108, 2, 1, "", "Loss"], [109, 2, 1, "", "MeanAbsoluteError"], [110, 2, 1, "", "MeanPairwiseDistance"], [111, 2, 1, "", "MeanSquaredError"], [112, 2, 1, "", "MultiLabelConfusionMatrix"], [113, 2, 1, "", "PSNR"], [114, 2, 1, "", "RootMeanSquaredError"], [115, 2, 1, "", "Rouge"], [116, 2, 1, "", "RougeL"], [117, 2, 1, "", "RougeN"], [118, 2, 1, "", "RunningAverage"], [119, 2, 1, "", "SSIM"], [120, 2, 1, "", "TopKCategoricalAccuracy"], [121, 2, 1, "", "VariableAccumulation"], [123, 1, 1, "", "mIoU"]], "ignite.metrics.Accuracy": [[93, 3, 1, "", "compute"], [93, 3, 1, "", "reset"], [93, 3, 1, "", "update"]], "ignite.metrics.Average": [[94, 3, 1, "", "compute"]], "ignite.metrics.Bleu": [[95, 3, 1, "", "compute"], [95, 3, 1, "", "reset"], [95, 3, 1, "", "update"]], "ignite.metrics.CosineSimilarity": [[97, 3, 1, "", "compute"], [97, 3, 1, "", "reset"], [97, 3, 1, "", "update"]], "ignite.metrics.Entropy": [[99, 3, 1, "", "compute"], [99, 3, 1, "", "reset"], [99, 3, 1, "", "update"]], "ignite.metrics.EpochMetric": [[100, 3, 1, "", "compute"], [100, 3, 1, "", "reset"], [100, 3, 1, "", "update"]], "ignite.metrics.FID": [[101, 3, 1, "", "compute"], [101, 3, 1, "", "reset"], [101, 3, 1, "", "update"]], "ignite.metrics.Frequency": [[103, 3, 1, "", "attach"], [103, 3, 1, "", "completed"], [103, 3, 1, "", "compute"], [103, 3, 1, "", "reset"], [103, 3, 1, "", "update"]], "ignite.metrics.GeometricAverage": [[104, 3, 1, "", "compute"]], "ignite.metrics.InceptionScore": [[105, 3, 1, "", "compute"], [105, 3, 1, "", "reset"], [105, 3, 1, "", "update"]], "ignite.metrics.Loss": [[108, 3, 1, "", "compute"], [108, 4, 1, "", "required_output_keys"], [108, 3, 1, "", "reset"], [108, 3, 1, "", "update"]], "ignite.metrics.MeanAbsoluteError": [[109, 3, 1, "", "compute"], [109, 3, 1, "", "reset"], [109, 3, 1, "", "update"]], "ignite.metrics.MeanPairwiseDistance": [[110, 3, 1, "", "compute"], [110, 3, 1, "", "reset"], [110, 3, 1, "", "update"]], "ignite.metrics.MeanSquaredError": [[111, 3, 1, "", "compute"], [111, 3, 1, "", "reset"], [111, 3, 1, "", "update"]], "ignite.metrics.MultiLabelConfusionMatrix": [[112, 3, 1, "", "compute"], [112, 3, 1, "", "reset"], [112, 3, 1, "", "update"]], "ignite.metrics.PSNR": [[113, 3, 1, "", "compute"], [113, 3, 1, "", "reset"], [113, 3, 1, "", "update"]], "ignite.metrics.RootMeanSquaredError": [[114, 3, 1, "", "compute"]], "ignite.metrics.Rouge": [[115, 3, 1, "", "compute"], [115, 3, 1, "", "reset"], [115, 3, 1, "", "update"]], "ignite.metrics.RunningAverage": [[118, 3, 1, "", "attach"], [118, 3, 1, "", "compute"], [118, 3, 1, "", "detach"], [118, 4, 1, "", "required_output_keys"], [118, 3, 1, "", "reset"], [118, 3, 1, "", "update"]], "ignite.metrics.SSIM": [[119, 3, 1, "", "compute"], [119, 3, 1, "", "reset"], [119, 3, 1, "", "update"]], "ignite.metrics.TopKCategoricalAccuracy": [[120, 3, 1, "", "compute"], [120, 3, 1, "", "reset"], [120, 3, 1, "", "update"]], "ignite.metrics.VariableAccumulation": [[121, 3, 1, "", "compute"], [121, 4, 1, "", "required_output_keys"], [121, 3, 1, "", "reset"], [121, 3, 1, "", "update"]], "ignite.metrics.confusion_matrix": [[122, 2, 1, "", "ConfusionMatrix"]], "ignite.metrics.confusion_matrix.ConfusionMatrix": [[122, 3, 1, "", "compute"], [122, 3, 1, "", "normalize"], [122, 3, 1, "", "reset"], [122, 3, 1, "", "update"]], "ignite.metrics.metric": [[130, 2, 1, "", "BatchFiltered"], [130, 2, 1, "", "BatchWise"], [130, 2, 1, "", "EpochWise"], [124, 2, 1, "", "Metric"], [130, 2, 1, "", "MetricUsage"], [130, 2, 1, "", "RunningBatchWise"], [130, 2, 1, "", "RunningEpochWise"], [130, 2, 1, "", "SingleEpochRunningBatchWise"], [130, 1, 1, "", "reinit__is_reduced"], [130, 1, 1, "", "sync_all_reduce"]], "ignite.metrics.metric.BatchWise": [[130, 4, 1, "", "usage_name"]], "ignite.metrics.metric.EpochWise": [[130, 4, 1, "", "usage_name"]], "ignite.metrics.metric.Metric": [[124, 3, 1, "", "attach"], [124, 3, 1, "", "completed"], [124, 3, 1, "", "compute"], [124, 3, 1, "", "detach"], [124, 3, 1, "", "is_attached"], [124, 3, 1, "", "iteration_completed"], [124, 3, 1, "", "load_state_dict"], [124, 4, 1, "", "required_output_keys"], [124, 3, 1, "", "reset"], [124, 3, 1, "", "started"], [124, 3, 1, "", "state_dict"], [124, 3, 1, "", "update"]], "ignite.metrics.metric.RunningBatchWise": [[130, 4, 1, "", "usage_name"]], "ignite.metrics.metric.RunningEpochWise": [[130, 4, 1, "", "usage_name"]], "ignite.metrics.metric.SingleEpochRunningBatchWise": [[130, 4, 1, "", "usage_name"]], "ignite.metrics.metrics_lambda": [[125, 2, 1, "", "MetricsLambda"]], "ignite.metrics.metrics_lambda.MetricsLambda": [[125, 3, 1, "", "attach"], [125, 3, 1, "", "compute"], [125, 3, 1, "", "detach"], [125, 3, 1, "", "is_attached"], [125, 3, 1, "", "reset"], [125, 3, 1, "", "update"]], "ignite.metrics.precision": [[126, 2, 1, "", "Precision"]], "ignite.metrics.precision.Precision": [[126, 3, 1, "", "update"]], "ignite.metrics.recall": [[127, 2, 1, "", "Recall"]], "ignite.metrics.recall.Recall": [[127, 3, 1, "", "update"]], "ignite.utils": [[131, 1, 1, "", "apply_to_tensor"], [131, 1, 1, "", "apply_to_type"], [131, 1, 1, "", "convert_tensor"], [131, 1, 1, "", "hash_checkpoint"], [131, 1, 1, "", "manual_seed"], [131, 1, 1, "", "setup_logger"], [131, 1, 1, "", "to_onehot"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"ignit": [0, 1, 2, 4, 5, 6, 128, 129, 130, 131], "contrib": [0, 1, 2, 129], "engin": [0, 5, 40, 130], "truncat": 0, "backpropag": 0, "throught": 0, "time": [0, 1], "helper": [0, 4, 5, 130], "method": [0, 5], "setup": 0, "trainer": [0, 5], "evalu": [0, 5], "handler": [1, 128], "paramet": [1, 128], "schedul": [1, 128], "deprec": 1, "lr": 1, "finder": 1, "profil": 1, "logger": [1, 128], "metric": [2, 124, 130], "modul": 2, "regress": 2, "distribut": [4, 130], "launcher": 4, "auto": 4, "util": [4, 131], "event": [5, 43], "determinist": 5, "defin": 5, "supervis": 5, "resum": 5, "train": 5, "dataflow": 5, "synchron": 5, "except": 6, "averageprecis": 8, "cohenkappa": 9, "gpuinfo": 10, "precisionrecallcurv": 11, "roc_auc": 12, "roccurv": 13, "canberrametr": 14, "fractionalabsoluteerror": 15, "fractionalbia": 16, "geometricmeanabsoluteerror": 17, "geometricmeanrelativeabsoluteerror": 18, "manhattandist": 19, "maximumabsoluteerror": 20, "meanabsoluterelativeerror": 21, "meanerror": 22, "meannormalizedbia": 23, "medianabsoluteerror": 24, "medianabsolutepercentageerror": 25, "medianrelativeabsoluteerror": 26, "r2score": 27, "wavehedgesdist": 28, "distributedproxysampl": 29, "auto_dataload": 30, "auto_model": 31, "auto_optim": 32, "parallel": 33, "create_supervised_evalu": 34, "create_supervised_train": 35, "deterministicengin": 36, "reproduciblebatchsampl": 37, "keep_random_st": 38, "update_dataload": 39, "callableeventwithfilt": 41, "eventenum": 42, "eventslist": 44, "removableeventhandl": 45, "state": [46, 128], "supervised_evaluation_step": 47, "supervised_evaluation_step_amp": 48, "supervised_training_step": 49, "supervised_training_step_amp": 50, "supervised_training_step_apex": 51, "supervised_training_step_tpu": 52, "disksav": 53, "timelimit": 54, "base_logg": 55, "basesavehandl": 56, "checkpoint": 57, "modelcheckpoint": 58, "clearml_logg": 59, "earlystop": 60, "emahandl": 61, "global_step_from_engin": 62, "fastailrfind": 63, "mlflow_logg": 64, "neptune_logg": 65, "baseparamschedul": 66, "concatschedul": [67, 128], "cosineannealingschedul": [68, 128], "cyclicalschedul": 69, "lrschedul": [70, 128], "linearcyclicalschedul": [71, 128], "paramgroupschedul": 72, "paramschedul": 73, "piecewiselinear": 74, "reducelronplateauschedul": [75, 128], "create_lr_scheduler_with_warmup": 76, "polyaxon_logg": 77, "expstateschedul": 78, "lambdastateschedul": 79, "multistepstateschedul": 80, "piecewiselinearstateschedul": 81, "stateparamschedul": 82, "stepstateschedul": 83, "epochoutputstor": 84, "tensorboard_logg": 85, "terminateonnan": 86, "basictimeprofil": 87, "handlerstimeprofil": 88, "timer": 89, "tqdm_logger": 90, "visdom_logg": 91, "wandb_logg": 92, "accuraci": 93, "averag": 94, "bleu": 95, "classificationreport": 96, "cosinesimilar": 97, "dicecoeffici": 98, "entropi": 99, "epochmetr": 100, "fid": 101, "fbeta": 102, "frequenc": 103, "geometricaverag": 104, "inceptionscor": 105, "iou": 106, "jaccardindex": 107, "loss": 108, "meanabsoluteerror": 109, "meanpairwisedist": 110, "meansquarederror": 111, "multilabelconfusionmatrix": 112, "psnr": 113, "rootmeansquarederror": 114, "roug": 115, "rougel": 116, "rougen": 117, "runningaverag": 118, "ssim": 119, "topkcategoricalaccuraci": 120, "variableaccumul": 121, "confusionmatrix": 122, "miou": 123, "metricslambda": 125, "precis": 126, "recal": 127, "complet": [128, 130], "list": [128, 130], "gener": 128, "more": 128, "exampl": 128, "param_schedul": 128, "piecewis": 128, "linear": 128, "concaten": 128, "torch": 128, "your": 129, "network": 129, "packag": 129, "refer": 129, "attach": 130, "api": 130, "reset": 130, "updat": 130, "comput": 130, "arithmet": 130, "how": 130, "creat": 130, "custom": 130, "its": 130, "usag": 130, "metricusag": 130, "epochwis": 130, "runningepochwis": 130, "batchwis": 130, "runningbatchwis": 130, "singleepochrunningbatchwis": 130, "batchfilt": 130, "reinit__is_reduc": 130, "sync_all_reduc": 130}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ignite.contrib.engines": [[0, "ignite-contrib-engines"]], "Truncated Backpropagation Throught Time": [[0, "module-ignite.contrib.engines.tbptt"]], "Helper methods to setup trainer/evaluator": [[0, "module-ignite.contrib.engines.common"]], "ignite.contrib.handlers": [[1, "ignite-contrib-handlers"]], "Parameter scheduler [deprecated]": [[1, "parameter-scheduler-deprecated"]], "LR finder [deprecated]": [[1, "lr-finder-deprecated"]], "Time profilers [deprecated]": [[1, "time-profilers-deprecated"]], "Loggers [deprecated]": [[1, "loggers-deprecated"]], "ignite.contrib.metrics": [[2, "ignite-contrib-metrics"]], "Contrib module metrics": [[2, "contrib-module-metrics"]], "Regression metrics": [[2, "module-ignite.contrib.metrics.regression"]], "ignite.distributed": [[4, "ignite-distributed"]], "Distributed launcher and auto helpers": [[4, "distributed-launcher-and-auto-helpers"]], "ignite.distributed.auto": [[4, "ignite-distributed-auto"]], "ignite.distributed.launcher": [[4, "ignite-distributed-launcher"]], "ignite.distributed.utils": [[4, "ignite-distributed-utils"]], "ignite.engine": [[5, "ignite-engine"]], "ignite.engine.engine": [[5, "ignite-engine-engine"]], "ignite.engine.events": [[5, "ignite-engine-events"]], "ignite.engine.deterministic": [[5, "ignite-engine-deterministic"]], "helper methods to define supervised trainer and evaluator": [[5, "helper-methods-to-define-supervised-trainer-and-evaluator"]], "Resuming the training": [[5, "resuming-the-training"]], "Deterministic training": [[5, "deterministic-training"]], "Dataflow synchronization": [[5, "dataflow-synchronization"]], "ignite.exceptions": [[6, "ignite-exceptions"]], "AveragePrecision": [[8, "averageprecision"]], "CohenKappa": [[9, "cohenkappa"]], "GpuInfo": [[10, "gpuinfo"]], "PrecisionRecallCurve": [[11, "precisionrecallcurve"]], "ROC_AUC": [[12, "roc-auc"]], "RocCurve": [[13, "roccurve"]], "CanberraMetric": [[14, "canberrametric"]], "FractionalAbsoluteError": [[15, "fractionalabsoluteerror"]], "FractionalBias": [[16, "fractionalbias"]], "GeometricMeanAbsoluteError": [[17, "geometricmeanabsoluteerror"]], "GeometricMeanRelativeAbsoluteError": [[18, "geometricmeanrelativeabsoluteerror"]], "ManhattanDistance": [[19, "manhattandistance"]], "MaximumAbsoluteError": [[20, "maximumabsoluteerror"]], "MeanAbsoluteRelativeError": [[21, "meanabsoluterelativeerror"]], "MeanError": [[22, "meanerror"]], "MeanNormalizedBias": [[23, "meannormalizedbias"]], "MedianAbsoluteError": [[24, "medianabsoluteerror"]], "MedianAbsolutePercentageError": [[25, "medianabsolutepercentageerror"]], "MedianRelativeAbsoluteError": [[26, "medianrelativeabsoluteerror"]], "R2Score": [[27, "r2score"]], "WaveHedgesDistance": [[28, "wavehedgesdistance"]], "DistributedProxySampler": [[29, "distributedproxysampler"]], "auto_dataloader": [[30, "auto-dataloader"]], "auto_model": [[31, "auto-model"]], "auto_optim": [[32, "auto-optim"]], "Parallel": [[33, "parallel"]], "create_supervised_evaluator": [[34, "create-supervised-evaluator"]], "create_supervised_trainer": [[35, "create-supervised-trainer"]], "DeterministicEngine": [[36, "deterministicengine"]], "ReproducibleBatchSampler": [[37, "reproduciblebatchsampler"]], "keep_random_state": [[38, "keep-random-state"]], "update_dataloader": [[39, "update-dataloader"]], "Engine": [[40, "engine"]], "CallableEventWithFilter": [[41, "callableeventwithfilter"]], "EventEnum": [[42, "eventenum"]], "Events": [[43, "events"]], "EventsList": [[44, "eventslist"]], "RemovableEventHandle": [[45, "removableeventhandle"]], "State": [[46, "state"]], "supervised_evaluation_step": [[47, "supervised-evaluation-step"]], "supervised_evaluation_step_amp": [[48, "supervised-evaluation-step-amp"]], "supervised_training_step": [[49, "supervised-training-step"]], "supervised_training_step_amp": [[50, "supervised-training-step-amp"]], "supervised_training_step_apex": [[51, "supervised-training-step-apex"]], "supervised_training_step_tpu": [[52, "supervised-training-step-tpu"]], "DiskSaver": [[53, "disksaver"]], "TimeLimit": [[54, "timelimit"]], "base_logger": [[55, "module-ignite.handlers.base_logger"]], "BaseSaveHandler": [[56, "basesavehandler"]], "Checkpoint": [[57, "checkpoint"]], "ModelCheckpoint": [[58, "modelcheckpoint"]], "clearml_logger": [[59, "module-ignite.handlers.clearml_logger"]], "EarlyStopping": [[60, "earlystopping"]], "EMAHandler": [[61, "emahandler"]], "global_step_from_engine": [[62, "global-step-from-engine"]], "FastaiLRFinder": [[63, "fastailrfinder"]], "mlflow_logger": [[64, "module-ignite.handlers.mlflow_logger"]], "neptune_logger": [[65, "module-ignite.handlers.neptune_logger"]], "BaseParamScheduler": [[66, "baseparamscheduler"]], "ConcatScheduler": [[67, "concatscheduler"]], "CosineAnnealingScheduler": [[68, "cosineannealingscheduler"]], "CyclicalScheduler": [[69, "cyclicalscheduler"]], "LRScheduler": [[70, "lrscheduler"]], "LinearCyclicalScheduler": [[71, "linearcyclicalscheduler"]], "ParamGroupScheduler": [[72, "paramgroupscheduler"]], "ParamScheduler": [[73, "paramscheduler"]], "PiecewiseLinear": [[74, "piecewiselinear"]], "ReduceLROnPlateauScheduler": [[75, "reducelronplateauscheduler"]], "create_lr_scheduler_with_warmup": [[76, "create-lr-scheduler-with-warmup"]], "polyaxon_logger": [[77, "module-ignite.handlers.polyaxon_logger"]], "ExpStateScheduler": [[78, "expstatescheduler"]], "LambdaStateScheduler": [[79, "lambdastatescheduler"]], "MultiStepStateScheduler": [[80, "multistepstatescheduler"]], "PiecewiseLinearStateScheduler": [[81, "piecewiselinearstatescheduler"]], "StateParamScheduler": [[82, "stateparamscheduler"]], "StepStateScheduler": [[83, "stepstatescheduler"]], "EpochOutputStore": [[84, "epochoutputstore"]], "tensorboard_logger": [[85, "module-ignite.handlers.tensorboard_logger"]], "TerminateOnNan": [[86, "terminateonnan"]], "BasicTimeProfiler": [[87, "basictimeprofiler"]], "HandlersTimeProfiler": [[88, "handlerstimeprofiler"]], "Timer": [[89, "timer"]], "tqdm_logger": [[90, "module-ignite.handlers.tqdm_logger"]], "visdom_logger": [[91, "module-ignite.handlers.visdom_logger"]], "wandb_logger": [[92, "module-ignite.handlers.wandb_logger"]], "Accuracy": [[93, "accuracy"]], "Average": [[94, "average"]], "Bleu": [[95, "bleu"]], "ClassificationReport": [[96, "classificationreport"]], "CosineSimilarity": [[97, "cosinesimilarity"]], "DiceCoefficient": [[98, "dicecoefficient"]], "Entropy": [[99, "entropy"]], "EpochMetric": [[100, "epochmetric"]], "FID": [[101, "fid"]], "Fbeta": [[102, "fbeta"]], "Frequency": [[103, "frequency"]], "GeometricAverage": [[104, "geometricaverage"]], "InceptionScore": [[105, "inceptionscore"]], "IoU": [[106, "iou"]], "JaccardIndex": [[107, "jaccardindex"]], "Loss": [[108, "loss"]], "MeanAbsoluteError": [[109, "meanabsoluteerror"]], "MeanPairwiseDistance": [[110, "meanpairwisedistance"]], "MeanSquaredError": [[111, "meansquarederror"]], "MultiLabelConfusionMatrix": [[112, "multilabelconfusionmatrix"]], "PSNR": [[113, "psnr"]], "RootMeanSquaredError": [[114, "rootmeansquarederror"]], "Rouge": [[115, "rouge"]], "RougeL": [[116, "rougel"]], "RougeN": [[117, "rougen"]], "RunningAverage": [[118, "runningaverage"]], "SSIM": [[119, "ssim"]], "TopKCategoricalAccuracy": [[120, "topkcategoricalaccuracy"]], "VariableAccumulation": [[121, "variableaccumulation"]], "ConfusionMatrix": [[122, "confusionmatrix"]], "mIoU": [[123, "miou"]], "Metric": [[124, "metric"]], "MetricsLambda": [[125, "metricslambda"]], "Precision": [[126, "precision"]], "Recall": [[127, "recall"]], "ignite.handlers": [[128, "ignite-handlers"]], "Complete list of generic handlers": [[128, "complete-list-of-generic-handlers"]], "Loggers": [[128, "loggers"]], "Parameter scheduler": [[128, "parameter-scheduler"]], "State Parameter scheduler": [[128, "state-parameter-scheduler"]], "More on parameter scheduling": [[128, "more-on-parameter-scheduling"]], "Example with CosineAnnealingScheduler": [[128, "example-with-cosineannealingscheduler"]], "Example with ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[128, "example-with-ignite-handlers-param-scheduler-linearcyclicalscheduler"]], "Example with ignite.handlers.param_scheduler.ConcatScheduler": [[128, "example-with-ignite-handlers-param-scheduler-concatscheduler"]], "Piecewise linear scheduler": [[128, "piecewise-linear-scheduler"]], "Example with ignite.handlers.param_scheduler.LRScheduler": [[128, "example-with-ignite-handlers-param-scheduler-lrscheduler"]], "Concatenate with torch schedulers": [[128, "concatenate-with-torch-schedulers"]], "Example with ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[128, "example-with-ignite-handlers-param-scheduler-reducelronplateauscheduler"]], "Ignite Your Networks!": [[129, "ignite-your-networks"]], "Package Reference": [[129, null]], "Contrib Package Reference": [[129, null]], "ignite.metrics": [[130, "ignite-metrics"]], "Attach Engine API": [[130, "attach-engine-api"]], "Reset, Update, Compute API": [[130, "reset-update-compute-api"]], "Metric arithmetics": [[130, "metric-arithmetics"]], "How to create a custom metric": [[130, "how-to-create-a-custom-metric"]], "Metrics and its usages": [[130, "metrics-and-its-usages"]], "Complete list of usages": [[130, "complete-list-of-usages"]], "Metrics and distributed computations": [[130, "metrics-and-distributed-computations"]], "Complete list of metrics": [[130, "complete-list-of-metrics"]], "Helpers for customizing metrics": [[130, "helpers-for-customizing-metrics"]], "MetricUsage": [[130, "metricusage"]], "EpochWise": [[130, "epochwise"]], "RunningEpochWise": [[130, "runningepochwise"]], "BatchWise": [[130, "batchwise"]], "RunningBatchWise": [[130, "runningbatchwise"]], "SingleEpochRunningBatchWise": [[130, "singleepochrunningbatchwise"]], "BatchFiltered": [[130, "batchfiltered"]], "reinit__is_reduced": [[130, "reinit-is-reduced"]], "sync_all_reduce": [[130, "sync-all-reduce"]], "ignite.utils": [[131, "ignite-utils"]]}, "indexentries": {"tbptt_events (class in ignite.contrib.engines.tbptt)": [[0, "ignite.contrib.engines.tbptt.Tbptt_Events"]], "add_early_stopping_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.add_early_stopping_by_val_score"]], "create_supervised_tbptt_trainer() (in module ignite.contrib.engines.tbptt)": [[0, "ignite.contrib.engines.tbptt.create_supervised_tbptt_trainer"]], "gen_save_best_models_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.gen_save_best_models_by_val_score"]], "ignite.contrib.engines.common": [[0, "module-ignite.contrib.engines.common"]], "ignite.contrib.engines.tbptt": [[0, "module-ignite.contrib.engines.tbptt"]], "module": [[0, "module-ignite.contrib.engines.common"], [0, "module-ignite.contrib.engines.tbptt"], [2, "module-ignite.contrib.metrics.regression"], [4, "module-ignite.distributed.utils"], [55, "module-ignite.handlers.base_logger"], [59, "module-ignite.handlers.clearml_logger"], [64, "module-ignite.handlers.mlflow_logger"], [65, "module-ignite.handlers.neptune_logger"], [77, "module-ignite.handlers.polyaxon_logger"], [85, "module-ignite.handlers.tensorboard_logger"], [90, "module-ignite.handlers.tqdm_logger"], [91, "module-ignite.handlers.visdom_logger"], [92, "module-ignite.handlers.wandb_logger"], [129, "module-ignite"], [129, "module-ignite.contrib"], [131, "module-ignite.utils"]], "save_best_model_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.save_best_model_by_val_score"]], "setup_any_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_any_logging"]], "setup_clearml_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_clearml_logging"]], "setup_common_distrib_training_handlers() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_common_distrib_training_handlers"]], "setup_common_training_handlers() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_common_training_handlers"]], "setup_mlflow_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_mlflow_logging"]], "setup_neptune_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_neptune_logging"]], "setup_plx_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_plx_logging"]], "setup_tb_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_tb_logging"]], "setup_trains_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_trains_logging"]], "setup_visdom_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_visdom_logging"]], "setup_wandb_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_wandb_logging"]], "ignite.contrib.metrics.regression": [[2, "module-ignite.contrib.metrics.regression"]], "all_gather() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_gather"]], "all_reduce() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_reduce"]], "available_backends() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.available_backends"]], "backend() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.backend"]], "barrier() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.barrier"]], "broadcast() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.broadcast"]], "device() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.device"]], "finalize() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.finalize"]], "get_local_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_local_rank"]], "get_nnodes() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_nnodes"]], "get_node_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_node_rank"]], "get_nproc_per_node() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_nproc_per_node"]], "get_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_rank"]], "get_world_size() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_world_size"]], "has_native_dist_support (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.has_native_dist_support"]], "has_xla_support (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.has_xla_support"]], "hostname() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.hostname"]], "ignite.distributed.utils": [[4, "module-ignite.distributed.utils"]], "initialize() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.initialize"]], "model_name() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.model_name"]], "new_group() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.new_group"]], "one_rank_first() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.one_rank_first"]], "one_rank_only() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.one_rank_only"]], "set_local_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.set_local_rank"]], "show_config() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.show_config"]], "spawn() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.spawn"]], "sync() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.sync"]], "notcomputableerror (class in ignite.exceptions)": [[6, "ignite.exceptions.NotComputableError"]], "averageprecision (class in ignite.contrib.metrics)": [[8, "ignite.contrib.metrics.AveragePrecision"]], "cohenkappa (class in ignite.contrib.metrics)": [[9, "ignite.contrib.metrics.CohenKappa"]], "get_cohen_kappa_fn() (ignite.contrib.metrics.cohenkappa method)": [[9, "ignite.contrib.metrics.CohenKappa.get_cohen_kappa_fn"]], "gpuinfo (class in ignite.contrib.metrics)": [[10, "ignite.contrib.metrics.GpuInfo"]], "attach() (ignite.contrib.metrics.gpuinfo method)": [[10, "ignite.contrib.metrics.GpuInfo.attach"]], "completed() (ignite.contrib.metrics.gpuinfo method)": [[10, "ignite.contrib.metrics.GpuInfo.completed"]], "compute() (ignite.contrib.metrics.gpuinfo method)": [[10, "ignite.contrib.metrics.GpuInfo.compute"]], "reset() (ignite.contrib.metrics.gpuinfo method)": [[10, "ignite.contrib.metrics.GpuInfo.reset"]], "update() (ignite.contrib.metrics.gpuinfo method)": [[10, "ignite.contrib.metrics.GpuInfo.update"]], "precisionrecallcurve (class in ignite.contrib.metrics)": [[11, "ignite.contrib.metrics.PrecisionRecallCurve"]], "compute() (ignite.contrib.metrics.precisionrecallcurve method)": [[11, "ignite.contrib.metrics.PrecisionRecallCurve.compute"]], "roc_auc (class in ignite.contrib.metrics)": [[12, "ignite.contrib.metrics.ROC_AUC"]], "roccurve (class in ignite.contrib.metrics)": [[13, "ignite.contrib.metrics.RocCurve"]], "compute() (ignite.contrib.metrics.roccurve method)": [[13, "ignite.contrib.metrics.RocCurve.compute"]], "canberrametric (class in ignite.contrib.metrics.regression)": [[14, "ignite.contrib.metrics.regression.CanberraMetric"]], "compute() (ignite.contrib.metrics.regression.canberrametric method)": [[14, "ignite.contrib.metrics.regression.CanberraMetric.compute"]], "reset() (ignite.contrib.metrics.regression.canberrametric method)": [[14, "ignite.contrib.metrics.regression.CanberraMetric.reset"]], "fractionalabsoluteerror (class in ignite.contrib.metrics.regression)": [[15, "ignite.contrib.metrics.regression.FractionalAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.fractionalabsoluteerror method)": [[15, "ignite.contrib.metrics.regression.FractionalAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.fractionalabsoluteerror method)": [[15, "ignite.contrib.metrics.regression.FractionalAbsoluteError.reset"]], "fractionalbias (class in ignite.contrib.metrics.regression)": [[16, "ignite.contrib.metrics.regression.FractionalBias"]], "compute() (ignite.contrib.metrics.regression.fractionalbias method)": [[16, "ignite.contrib.metrics.regression.FractionalBias.compute"]], "reset() (ignite.contrib.metrics.regression.fractionalbias method)": [[16, "ignite.contrib.metrics.regression.FractionalBias.reset"]], "geometricmeanabsoluteerror (class in ignite.contrib.metrics.regression)": [[17, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.geometricmeanabsoluteerror method)": [[17, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.geometricmeanabsoluteerror method)": [[17, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.reset"]], "geometricmeanrelativeabsoluteerror (class in ignite.contrib.metrics.regression)": [[18, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[18, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[18, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.reset"]], "manhattandistance (class in ignite.contrib.metrics.regression)": [[19, "ignite.contrib.metrics.regression.ManhattanDistance"]], "compute() (ignite.contrib.metrics.regression.manhattandistance method)": [[19, "ignite.contrib.metrics.regression.ManhattanDistance.compute"]], "reset() (ignite.contrib.metrics.regression.manhattandistance method)": [[19, "ignite.contrib.metrics.regression.ManhattanDistance.reset"]], "maximumabsoluteerror (class in ignite.contrib.metrics.regression)": [[20, "ignite.contrib.metrics.regression.MaximumAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.maximumabsoluteerror method)": [[20, "ignite.contrib.metrics.regression.MaximumAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.maximumabsoluteerror method)": [[20, "ignite.contrib.metrics.regression.MaximumAbsoluteError.reset"]], "meanabsoluterelativeerror (class in ignite.contrib.metrics.regression)": [[21, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError"]], "compute() (ignite.contrib.metrics.regression.meanabsoluterelativeerror method)": [[21, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.compute"]], "reset() (ignite.contrib.metrics.regression.meanabsoluterelativeerror method)": [[21, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.reset"]], "meanerror (class in ignite.contrib.metrics.regression)": [[22, "ignite.contrib.metrics.regression.MeanError"]], "compute() (ignite.contrib.metrics.regression.meanerror method)": [[22, "ignite.contrib.metrics.regression.MeanError.compute"]], "reset() (ignite.contrib.metrics.regression.meanerror method)": [[22, "ignite.contrib.metrics.regression.MeanError.reset"]], "meannormalizedbias (class in ignite.contrib.metrics.regression)": [[23, "ignite.contrib.metrics.regression.MeanNormalizedBias"]], "compute() (ignite.contrib.metrics.regression.meannormalizedbias method)": [[23, "ignite.contrib.metrics.regression.MeanNormalizedBias.compute"]], "reset() (ignite.contrib.metrics.regression.meannormalizedbias method)": [[23, "ignite.contrib.metrics.regression.MeanNormalizedBias.reset"]], "medianabsoluteerror (class in ignite.contrib.metrics.regression)": [[24, "ignite.contrib.metrics.regression.MedianAbsoluteError"]], "medianabsolutepercentageerror (class in ignite.contrib.metrics.regression)": [[25, "ignite.contrib.metrics.regression.MedianAbsolutePercentageError"]], "medianrelativeabsoluteerror (class in ignite.contrib.metrics.regression)": [[26, "ignite.contrib.metrics.regression.MedianRelativeAbsoluteError"]], "r2score (class in ignite.contrib.metrics.regression)": [[27, "ignite.contrib.metrics.regression.R2Score"]], "compute() (ignite.contrib.metrics.regression.r2score method)": [[27, "ignite.contrib.metrics.regression.R2Score.compute"]], "reset() (ignite.contrib.metrics.regression.r2score method)": [[27, "ignite.contrib.metrics.regression.R2Score.reset"]], "wavehedgesdistance (class in ignite.contrib.metrics.regression)": [[28, "ignite.contrib.metrics.regression.WaveHedgesDistance"]], "compute() (ignite.contrib.metrics.regression.wavehedgesdistance method)": [[28, "ignite.contrib.metrics.regression.WaveHedgesDistance.compute"]], "reset() (ignite.contrib.metrics.regression.wavehedgesdistance method)": [[28, "ignite.contrib.metrics.regression.WaveHedgesDistance.reset"]], "distributedproxysampler (class in ignite.distributed.auto)": [[29, "ignite.distributed.auto.DistributedProxySampler"]], "auto_dataloader() (in module ignite.distributed.auto)": [[30, "ignite.distributed.auto.auto_dataloader"]], "auto_model() (in module ignite.distributed.auto)": [[31, "ignite.distributed.auto.auto_model"]], "auto_optim() (in module ignite.distributed.auto)": [[32, "ignite.distributed.auto.auto_optim"]], "parallel (class in ignite.distributed.launcher)": [[33, "ignite.distributed.launcher.Parallel"]], "run() (ignite.distributed.launcher.parallel method)": [[33, "ignite.distributed.launcher.Parallel.run"]], "create_supervised_evaluator() (in module ignite.engine)": [[34, "ignite.engine.create_supervised_evaluator"]], "create_supervised_trainer() (in module ignite.engine)": [[35, "ignite.engine.create_supervised_trainer"]], "deterministicengine (class in ignite.engine.deterministic)": [[36, "ignite.engine.deterministic.DeterministicEngine"]], "state_dict() (ignite.engine.deterministic.deterministicengine method)": [[36, "ignite.engine.deterministic.DeterministicEngine.state_dict"]], "reproduciblebatchsampler (class in ignite.engine.deterministic)": [[37, "ignite.engine.deterministic.ReproducibleBatchSampler"]], "setup_batch_indices() (ignite.engine.deterministic.reproduciblebatchsampler method)": [[37, "ignite.engine.deterministic.ReproducibleBatchSampler.setup_batch_indices"]], "keep_random_state() (in module ignite.engine.deterministic)": [[38, "ignite.engine.deterministic.keep_random_state"]], "update_dataloader() (in module ignite.engine.deterministic)": [[39, "ignite.engine.deterministic.update_dataloader"]], "engine (class in ignite.engine.engine)": [[40, "ignite.engine.engine.Engine"]], "add_event_handler() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.add_event_handler"]], "fire_event() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.fire_event"]], "has_event_handler() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.has_event_handler"]], "interrupt() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.interrupt"]], "last_event_name (ignite.engine.engine.engine attribute)": [[40, "ignite.engine.engine.Engine.last_event_name"]], "load_state_dict() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.load_state_dict"]], "on() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.on"]], "register_events() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.register_events"]], "remove_event_handler() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.remove_event_handler"]], "run() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.run"]], "set_data() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.set_data"]], "state (ignite.engine.engine.engine attribute)": [[40, "ignite.engine.engine.Engine.state"]], "state_dict() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.state_dict"]], "terminate() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.terminate"]], "terminate_epoch() (ignite.engine.engine.engine method)": [[40, "ignite.engine.engine.Engine.terminate_epoch"]], "callableeventwithfilter (class in ignite.engine.events)": [[41, "ignite.engine.events.CallableEventWithFilter"]], "before_and_after_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[41, "ignite.engine.events.CallableEventWithFilter.before_and_after_event_filter"]], "default_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[41, "ignite.engine.events.CallableEventWithFilter.default_event_filter"]], "every_before_and_after_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[41, "ignite.engine.events.CallableEventWithFilter.every_before_and_after_event_filter"]], "every_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[41, "ignite.engine.events.CallableEventWithFilter.every_event_filter"]], "name (ignite.engine.events.callableeventwithfilter attribute)": [[41, "ignite.engine.events.CallableEventWithFilter.name"]], "once_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[41, "ignite.engine.events.CallableEventWithFilter.once_event_filter"]], "value (ignite.engine.events.callableeventwithfilter attribute)": [[41, "ignite.engine.events.CallableEventWithFilter.value"]], "eventenum (class in ignite.engine.events)": [[42, "ignite.engine.events.EventEnum"]], "completed (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.COMPLETED"]], "dataloader_stop_iteration (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.DATALOADER_STOP_ITERATION"]], "epoch_completed (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.EPOCH_COMPLETED"]], "epoch_started (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.EPOCH_STARTED"]], "exception_raised (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.EXCEPTION_RAISED"]], "events (class in ignite.engine.events)": [[43, "ignite.engine.events.Events"]], "get_batch_completed (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.GET_BATCH_COMPLETED"]], "get_batch_started (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.GET_BATCH_STARTED"]], "interrupt (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.INTERRUPT"]], "iteration_completed (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.ITERATION_COMPLETED"]], "iteration_started (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.ITERATION_STARTED"]], "started (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.STARTED"]], "terminate (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.TERMINATE"]], "terminate_single_epoch (ignite.engine.events.events attribute)": [[43, "ignite.engine.events.Events.TERMINATE_SINGLE_EPOCH"]], "eventslist (class in ignite.engine.events)": [[44, "ignite.engine.events.EventsList"]], "removableeventhandle (class in ignite.engine.events)": [[45, "ignite.engine.events.RemovableEventHandle"]], "remove() (ignite.engine.events.removableeventhandle method)": [[45, "ignite.engine.events.RemovableEventHandle.remove"]], "state (class in ignite.engine.events)": [[46, "ignite.engine.events.State"]], "get_event_attrib_value() (ignite.engine.events.state method)": [[46, "ignite.engine.events.State.get_event_attrib_value"]], "supervised_evaluation_step() (in module ignite.engine)": [[47, "ignite.engine.supervised_evaluation_step"]], "supervised_evaluation_step_amp() (in module ignite.engine)": [[48, "ignite.engine.supervised_evaluation_step_amp"]], "supervised_training_step() (in module ignite.engine)": [[49, "ignite.engine.supervised_training_step"]], "supervised_training_step_amp() (in module ignite.engine)": [[50, "ignite.engine.supervised_training_step_amp"]], "supervised_training_step_apex() (in module ignite.engine)": [[51, "ignite.engine.supervised_training_step_apex"]], "supervised_training_step_tpu() (in module ignite.engine)": [[52, "ignite.engine.supervised_training_step_tpu"]], "disksaver (class in ignite.handlers)": [[53, "ignite.handlers.DiskSaver"]], "remove() (ignite.handlers.disksaver method)": [[53, "ignite.handlers.DiskSaver.remove"]], "timelimit (class in ignite.handlers)": [[54, "ignite.handlers.TimeLimit"]], "basehandler (class in ignite.handlers.base_logger)": [[55, "ignite.handlers.base_logger.BaseHandler"]], "baselogger (class in ignite.handlers.base_logger)": [[55, "ignite.handlers.base_logger.BaseLogger"]], "baseoptimizerparamshandler (class in ignite.handlers.base_logger)": [[55, "ignite.handlers.base_logger.BaseOptimizerParamsHandler"]], "baseoutputhandler (class in ignite.handlers.base_logger)": [[55, "ignite.handlers.base_logger.BaseOutputHandler"]], "baseweightshandler (class in ignite.handlers.base_logger)": [[55, "ignite.handlers.base_logger.BaseWeightsHandler"]], "baseweightsscalarhandler (class in ignite.handlers.base_logger)": [[55, "ignite.handlers.base_logger.BaseWeightsScalarHandler"]], "attach() (ignite.handlers.base_logger.baselogger method)": [[55, "ignite.handlers.base_logger.BaseLogger.attach"]], "attach_opt_params_handler() (ignite.handlers.base_logger.baselogger method)": [[55, "ignite.handlers.base_logger.BaseLogger.attach_opt_params_handler"]], "attach_output_handler() (ignite.handlers.base_logger.baselogger method)": [[55, "ignite.handlers.base_logger.BaseLogger.attach_output_handler"]], "ignite.handlers.base_logger": [[55, "module-ignite.handlers.base_logger"]], "basesavehandler (class in ignite.handlers.checkpoint)": [[56, "ignite.handlers.checkpoint.BaseSaveHandler"]], "__call__() (ignite.handlers.checkpoint.basesavehandler method)": [[56, "ignite.handlers.checkpoint.BaseSaveHandler.__call__"]], "remove() (ignite.handlers.checkpoint.basesavehandler method)": [[56, "ignite.handlers.checkpoint.BaseSaveHandler.remove"]], "checkpoint (class in ignite.handlers.checkpoint)": [[57, "ignite.handlers.checkpoint.Checkpoint"]], "checkpoint.item (class in ignite.handlers.checkpoint)": [[57, "ignite.handlers.checkpoint.Checkpoint.Item"]], "filename (ignite.handlers.checkpoint.checkpoint.item attribute)": [[57, "ignite.handlers.checkpoint.Checkpoint.Item.filename"]], "get_default_score_fn() (ignite.handlers.checkpoint.checkpoint static method)": [[57, "ignite.handlers.checkpoint.Checkpoint.get_default_score_fn"]], "load_objects() (ignite.handlers.checkpoint.checkpoint static method)": [[57, "ignite.handlers.checkpoint.Checkpoint.load_objects"]], "load_state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[57, "ignite.handlers.checkpoint.Checkpoint.load_state_dict"]], "priority (ignite.handlers.checkpoint.checkpoint.item attribute)": [[57, "ignite.handlers.checkpoint.Checkpoint.Item.priority"]], "reload_objects() (ignite.handlers.checkpoint.checkpoint method)": [[57, "ignite.handlers.checkpoint.Checkpoint.reload_objects"]], "reset() (ignite.handlers.checkpoint.checkpoint method)": [[57, "ignite.handlers.checkpoint.Checkpoint.reset"]], "setup_filename_pattern() (ignite.handlers.checkpoint.checkpoint static method)": [[57, "ignite.handlers.checkpoint.Checkpoint.setup_filename_pattern"]], "state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[57, "ignite.handlers.checkpoint.Checkpoint.state_dict"]], "modelcheckpoint (class in ignite.handlers.checkpoint)": [[58, "ignite.handlers.checkpoint.ModelCheckpoint"]], "clearmllogger (class in ignite.handlers.clearml_logger)": [[59, "ignite.handlers.clearml_logger.ClearMLLogger"]], "clearmlsaver (class in ignite.handlers.clearml_logger)": [[59, "ignite.handlers.clearml_logger.ClearMLSaver"]], "gradshisthandler (class in ignite.handlers.clearml_logger)": [[59, "ignite.handlers.clearml_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.handlers.clearml_logger)": [[59, "ignite.handlers.clearml_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.handlers.clearml_logger)": [[59, "ignite.handlers.clearml_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.clearml_logger)": [[59, "ignite.handlers.clearml_logger.OutputHandler"]], "weightshisthandler (class in ignite.handlers.clearml_logger)": [[59, "ignite.handlers.clearml_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.handlers.clearml_logger)": [[59, "ignite.handlers.clearml_logger.WeightsScalarHandler"]], "bypass_mode() (ignite.handlers.clearml_logger.clearmllogger class method)": [[59, "ignite.handlers.clearml_logger.ClearMLLogger.bypass_mode"]], "get_local_copy() (ignite.handlers.clearml_logger.clearmlsaver method)": [[59, "ignite.handlers.clearml_logger.ClearMLSaver.get_local_copy"]], "get_task() (ignite.handlers.clearml_logger.clearmllogger method)": [[59, "ignite.handlers.clearml_logger.ClearMLLogger.get_task"]], "global_step_from_engine() (in module ignite.handlers.clearml_logger)": [[59, "ignite.handlers.clearml_logger.global_step_from_engine"]], "ignite.handlers.clearml_logger": [[59, "module-ignite.handlers.clearml_logger"]], "remove() (ignite.handlers.clearml_logger.clearmlsaver method)": [[59, "ignite.handlers.clearml_logger.ClearMLSaver.remove"]], "set_bypass_mode() (ignite.handlers.clearml_logger.clearmllogger class method)": [[59, "ignite.handlers.clearml_logger.ClearMLLogger.set_bypass_mode"]], "earlystopping (class in ignite.handlers.early_stopping)": [[60, "ignite.handlers.early_stopping.EarlyStopping"]], "load_state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[60, "ignite.handlers.early_stopping.EarlyStopping.load_state_dict"]], "state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[60, "ignite.handlers.early_stopping.EarlyStopping.state_dict"]], "emahandler (class in ignite.handlers.ema_handler)": [[61, "ignite.handlers.ema_handler.EMAHandler"]], "attach() (ignite.handlers.ema_handler.emahandler method)": [[61, "ignite.handlers.ema_handler.EMAHandler.attach"]], "ema_model (ignite.handlers.ema_handler.emahandler attribute)": [[61, "ignite.handlers.ema_handler.EMAHandler.ema_model"]], "handle_buffers (ignite.handlers.ema_handler.emahandler attribute)": [[61, "ignite.handlers.ema_handler.EMAHandler.handle_buffers"]], "model (ignite.handlers.ema_handler.emahandler attribute)": [[61, "ignite.handlers.ema_handler.EMAHandler.model"]], "momentum (ignite.handlers.ema_handler.emahandler attribute)": [[61, "ignite.handlers.ema_handler.EMAHandler.momentum"]], "global_step_from_engine() (in module ignite.handlers)": [[62, "ignite.handlers.global_step_from_engine"]], "fastailrfinder (class in ignite.handlers.lr_finder)": [[63, "ignite.handlers.lr_finder.FastaiLRFinder"]], "apply_suggested_lr() (ignite.handlers.lr_finder.fastailrfinder method)": [[63, "ignite.handlers.lr_finder.FastaiLRFinder.apply_suggested_lr"]], "attach() (ignite.handlers.lr_finder.fastailrfinder method)": [[63, "ignite.handlers.lr_finder.FastaiLRFinder.attach"]], "get_results() (ignite.handlers.lr_finder.fastailrfinder method)": [[63, "ignite.handlers.lr_finder.FastaiLRFinder.get_results"]], "lr_suggestion() (ignite.handlers.lr_finder.fastailrfinder method)": [[63, "ignite.handlers.lr_finder.FastaiLRFinder.lr_suggestion"]], "plot() (ignite.handlers.lr_finder.fastailrfinder method)": [[63, "ignite.handlers.lr_finder.FastaiLRFinder.plot"]], "mlflowlogger (class in ignite.handlers.mlflow_logger)": [[64, "ignite.handlers.mlflow_logger.MLflowLogger"]], "optimizerparamshandler (class in ignite.handlers.mlflow_logger)": [[64, "ignite.handlers.mlflow_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.mlflow_logger)": [[64, "ignite.handlers.mlflow_logger.OutputHandler"]], "global_step_from_engine() (in module ignite.handlers.mlflow_logger)": [[64, "ignite.handlers.mlflow_logger.global_step_from_engine"]], "ignite.handlers.mlflow_logger": [[64, "module-ignite.handlers.mlflow_logger"]], "gradsscalarhandler (class in ignite.handlers.neptune_logger)": [[65, "ignite.handlers.neptune_logger.GradsScalarHandler"]], "neptunelogger (class in ignite.handlers.neptune_logger)": [[65, "ignite.handlers.neptune_logger.NeptuneLogger"]], "neptunesaver (class in ignite.handlers.neptune_logger)": [[65, "ignite.handlers.neptune_logger.NeptuneSaver"]], "optimizerparamshandler (class in ignite.handlers.neptune_logger)": [[65, "ignite.handlers.neptune_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.neptune_logger)": [[65, "ignite.handlers.neptune_logger.OutputHandler"]], "weightsscalarhandler (class in ignite.handlers.neptune_logger)": [[65, "ignite.handlers.neptune_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.handlers.neptune_logger)": [[65, "ignite.handlers.neptune_logger.global_step_from_engine"]], "ignite.handlers.neptune_logger": [[65, "module-ignite.handlers.neptune_logger"]], "remove() (ignite.handlers.neptune_logger.neptunesaver method)": [[65, "ignite.handlers.neptune_logger.NeptuneSaver.remove"]], "baseparamscheduler (class in ignite.handlers.param_scheduler)": [[66, "ignite.handlers.param_scheduler.BaseParamScheduler"]], "get_param() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[66, "ignite.handlers.param_scheduler.BaseParamScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[66, "ignite.handlers.param_scheduler.BaseParamScheduler.load_state_dict"]], "plot_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[66, "ignite.handlers.param_scheduler.BaseParamScheduler.plot_values"]], "simulate_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[66, "ignite.handlers.param_scheduler.BaseParamScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[66, "ignite.handlers.param_scheduler.BaseParamScheduler.state_dict"]], "concatscheduler (class in ignite.handlers.param_scheduler)": [[67, "ignite.handlers.param_scheduler.ConcatScheduler"]], "get_param() (ignite.handlers.param_scheduler.concatscheduler method)": [[67, "ignite.handlers.param_scheduler.ConcatScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[67, "ignite.handlers.param_scheduler.ConcatScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.concatscheduler class method)": [[67, "ignite.handlers.param_scheduler.ConcatScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[67, "ignite.handlers.param_scheduler.ConcatScheduler.state_dict"]], "cosineannealingscheduler (class in ignite.handlers.param_scheduler)": [[68, "ignite.handlers.param_scheduler.CosineAnnealingScheduler"]], "get_param() (ignite.handlers.param_scheduler.cosineannealingscheduler method)": [[68, "ignite.handlers.param_scheduler.CosineAnnealingScheduler.get_param"]], "cyclicalscheduler (class in ignite.handlers.param_scheduler)": [[69, "ignite.handlers.param_scheduler.CyclicalScheduler"]], "lrscheduler (class in ignite.handlers.param_scheduler)": [[70, "ignite.handlers.param_scheduler.LRScheduler"]], "get_param() (ignite.handlers.param_scheduler.lrscheduler method)": [[70, "ignite.handlers.param_scheduler.LRScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.lrscheduler class method)": [[70, "ignite.handlers.param_scheduler.LRScheduler.simulate_values"]], "linearcyclicalscheduler (class in ignite.handlers.param_scheduler)": [[71, "ignite.handlers.param_scheduler.LinearCyclicalScheduler"]], "get_param() (ignite.handlers.param_scheduler.linearcyclicalscheduler method)": [[71, "ignite.handlers.param_scheduler.LinearCyclicalScheduler.get_param"]], "paramgroupscheduler (class in ignite.handlers.param_scheduler)": [[72, "ignite.handlers.param_scheduler.ParamGroupScheduler"]], "get_param() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[72, "ignite.handlers.param_scheduler.ParamGroupScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[72, "ignite.handlers.param_scheduler.ParamGroupScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.paramgroupscheduler class method)": [[72, "ignite.handlers.param_scheduler.ParamGroupScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[72, "ignite.handlers.param_scheduler.ParamGroupScheduler.state_dict"]], "paramscheduler (class in ignite.handlers.param_scheduler)": [[73, "ignite.handlers.param_scheduler.ParamScheduler"]], "simulate_values() (ignite.handlers.param_scheduler.paramscheduler class method)": [[73, "ignite.handlers.param_scheduler.ParamScheduler.simulate_values"]], "piecewiselinear (class in ignite.handlers.param_scheduler)": [[74, "ignite.handlers.param_scheduler.PiecewiseLinear"]], "get_param() (ignite.handlers.param_scheduler.piecewiselinear method)": [[74, "ignite.handlers.param_scheduler.PiecewiseLinear.get_param"]], "reducelronplateauscheduler (class in ignite.handlers.param_scheduler)": [[75, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler"]], "get_param() (ignite.handlers.param_scheduler.reducelronplateauscheduler method)": [[75, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.reducelronplateauscheduler class method)": [[75, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.simulate_values"]], "create_lr_scheduler_with_warmup() (in module ignite.handlers.param_scheduler)": [[76, "ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup"]], "optimizerparamshandler (class in ignite.handlers.polyaxon_logger)": [[77, "ignite.handlers.polyaxon_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.polyaxon_logger)": [[77, "ignite.handlers.polyaxon_logger.OutputHandler"]], "polyaxonlogger (class in ignite.handlers.polyaxon_logger)": [[77, "ignite.handlers.polyaxon_logger.PolyaxonLogger"]], "global_step_from_engine() (in module ignite.handlers.polyaxon_logger)": [[77, "ignite.handlers.polyaxon_logger.global_step_from_engine"]], "ignite.handlers.polyaxon_logger": [[77, "module-ignite.handlers.polyaxon_logger"]], "expstatescheduler (class in ignite.handlers.state_param_scheduler)": [[78, "ignite.handlers.state_param_scheduler.ExpStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.expstatescheduler method)": [[78, "ignite.handlers.state_param_scheduler.ExpStateScheduler.get_param"]], "lambdastatescheduler (class in ignite.handlers.state_param_scheduler)": [[79, "ignite.handlers.state_param_scheduler.LambdaStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.lambdastatescheduler method)": [[79, "ignite.handlers.state_param_scheduler.LambdaStateScheduler.get_param"]], "multistepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[80, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.multistepstatescheduler method)": [[80, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler.get_param"]], "piecewiselinearstatescheduler (class in ignite.handlers.state_param_scheduler)": [[81, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.piecewiselinearstatescheduler method)": [[81, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.get_param"]], "stateparamscheduler (class in ignite.handlers.state_param_scheduler)": [[82, "ignite.handlers.state_param_scheduler.StateParamScheduler"]], "attach() (ignite.handlers.state_param_scheduler.stateparamscheduler method)": [[82, "ignite.handlers.state_param_scheduler.StateParamScheduler.attach"]], "simulate_values() (ignite.handlers.state_param_scheduler.stateparamscheduler class method)": [[82, "ignite.handlers.state_param_scheduler.StateParamScheduler.simulate_values"]], "stepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[83, "ignite.handlers.state_param_scheduler.StepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.stepstatescheduler method)": [[83, "ignite.handlers.state_param_scheduler.StepStateScheduler.get_param"]], "epochoutputstore (class in ignite.handlers.stores)": [[84, "ignite.handlers.stores.EpochOutputStore"]], "attach() (ignite.handlers.stores.epochoutputstore method)": [[84, "ignite.handlers.stores.EpochOutputStore.attach"]], "data (ignite.handlers.stores.epochoutputstore attribute)": [[84, "ignite.handlers.stores.EpochOutputStore.data"]], "reset() (ignite.handlers.stores.epochoutputstore method)": [[84, "ignite.handlers.stores.EpochOutputStore.reset"]], "store() (ignite.handlers.stores.epochoutputstore method)": [[84, "ignite.handlers.stores.EpochOutputStore.store"]], "update() (ignite.handlers.stores.epochoutputstore method)": [[84, "ignite.handlers.stores.EpochOutputStore.update"]], "gradshisthandler (class in ignite.handlers.tensorboard_logger)": [[85, "ignite.handlers.tensorboard_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.handlers.tensorboard_logger)": [[85, "ignite.handlers.tensorboard_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.handlers.tensorboard_logger)": [[85, "ignite.handlers.tensorboard_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.tensorboard_logger)": [[85, "ignite.handlers.tensorboard_logger.OutputHandler"]], "tensorboardlogger (class in ignite.handlers.tensorboard_logger)": [[85, "ignite.handlers.tensorboard_logger.TensorboardLogger"]], "weightshisthandler (class in ignite.handlers.tensorboard_logger)": [[85, "ignite.handlers.tensorboard_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.handlers.tensorboard_logger)": [[85, "ignite.handlers.tensorboard_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.handlers.tensorboard_logger)": [[85, "ignite.handlers.tensorboard_logger.global_step_from_engine"]], "ignite.handlers.tensorboard_logger": [[85, "module-ignite.handlers.tensorboard_logger"]], "terminateonnan (class in ignite.handlers.terminate_on_nan)": [[86, "ignite.handlers.terminate_on_nan.TerminateOnNan"]], "basictimeprofiler (class in ignite.handlers.time_profilers)": [[87, "ignite.handlers.time_profilers.BasicTimeProfiler"]], "attach() (ignite.handlers.time_profilers.basictimeprofiler method)": [[87, "ignite.handlers.time_profilers.BasicTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[87, "ignite.handlers.time_profilers.BasicTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.basictimeprofiler static method)": [[87, "ignite.handlers.time_profilers.BasicTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[87, "ignite.handlers.time_profilers.BasicTimeProfiler.write_results"]], "handlerstimeprofiler (class in ignite.handlers.time_profilers)": [[88, "ignite.handlers.time_profilers.HandlersTimeProfiler"]], "attach() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[88, "ignite.handlers.time_profilers.HandlersTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[88, "ignite.handlers.time_profilers.HandlersTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.handlerstimeprofiler static method)": [[88, "ignite.handlers.time_profilers.HandlersTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[88, "ignite.handlers.time_profilers.HandlersTimeProfiler.write_results"]], "timer (class in ignite.handlers.timing)": [[89, "ignite.handlers.timing.Timer"]], "attach() (ignite.handlers.timing.timer method)": [[89, "ignite.handlers.timing.Timer.attach"]], "pause() (ignite.handlers.timing.timer method)": [[89, "ignite.handlers.timing.Timer.pause"]], "reset() (ignite.handlers.timing.timer method)": [[89, "ignite.handlers.timing.Timer.reset"]], "resume() (ignite.handlers.timing.timer method)": [[89, "ignite.handlers.timing.Timer.resume"]], "running (ignite.handlers.timing.timer attribute)": [[89, "ignite.handlers.timing.Timer.running"]], "step() (ignite.handlers.timing.timer method)": [[89, "ignite.handlers.timing.Timer.step"]], "step_count (ignite.handlers.timing.timer attribute)": [[89, "ignite.handlers.timing.Timer.step_count"]], "total (ignite.handlers.timing.timer attribute)": [[89, "ignite.handlers.timing.Timer.total"]], "value() (ignite.handlers.timing.timer method)": [[89, "ignite.handlers.timing.Timer.value"]], "progressbar (class in ignite.handlers.tqdm_logger)": [[90, "ignite.handlers.tqdm_logger.ProgressBar"]], "attach() (ignite.handlers.tqdm_logger.progressbar method)": [[90, "ignite.handlers.tqdm_logger.ProgressBar.attach"]], "attach_opt_params_handler() (ignite.handlers.tqdm_logger.progressbar method)": [[90, "ignite.handlers.tqdm_logger.ProgressBar.attach_opt_params_handler"]], "ignite.handlers.tqdm_logger": [[90, "module-ignite.handlers.tqdm_logger"]], "log_message() (ignite.handlers.tqdm_logger.progressbar method)": [[90, "ignite.handlers.tqdm_logger.ProgressBar.log_message"]], "gradsscalarhandler (class in ignite.handlers.visdom_logger)": [[91, "ignite.handlers.visdom_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.handlers.visdom_logger)": [[91, "ignite.handlers.visdom_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.visdom_logger)": [[91, "ignite.handlers.visdom_logger.OutputHandler"]], "visdomlogger (class in ignite.handlers.visdom_logger)": [[91, "ignite.handlers.visdom_logger.VisdomLogger"]], "weightsscalarhandler (class in ignite.handlers.visdom_logger)": [[91, "ignite.handlers.visdom_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.handlers.visdom_logger)": [[91, "ignite.handlers.visdom_logger.global_step_from_engine"]], "ignite.handlers.visdom_logger": [[91, "module-ignite.handlers.visdom_logger"]], "optimizerparamshandler (class in ignite.handlers.wandb_logger)": [[92, "ignite.handlers.wandb_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.wandb_logger)": [[92, "ignite.handlers.wandb_logger.OutputHandler"]], "wandblogger (class in ignite.handlers.wandb_logger)": [[92, "ignite.handlers.wandb_logger.WandBLogger"]], "global_step_from_engine() (in module ignite.handlers.wandb_logger)": [[92, "ignite.handlers.wandb_logger.global_step_from_engine"]], "ignite.handlers.wandb_logger": [[92, "module-ignite.handlers.wandb_logger"]], "accuracy (class in ignite.metrics)": [[93, "ignite.metrics.Accuracy"]], "compute() (ignite.metrics.accuracy method)": [[93, "ignite.metrics.Accuracy.compute"]], "reset() (ignite.metrics.accuracy method)": [[93, "ignite.metrics.Accuracy.reset"]], "update() (ignite.metrics.accuracy method)": [[93, "ignite.metrics.Accuracy.update"]], "average (class in ignite.metrics)": [[94, "ignite.metrics.Average"]], "compute() (ignite.metrics.average method)": [[94, "ignite.metrics.Average.compute"]], "bleu (class in ignite.metrics)": [[95, "ignite.metrics.Bleu"]], "compute() (ignite.metrics.bleu method)": [[95, "ignite.metrics.Bleu.compute"]], "reset() (ignite.metrics.bleu method)": [[95, "ignite.metrics.Bleu.reset"]], "update() (ignite.metrics.bleu method)": [[95, "ignite.metrics.Bleu.update"]], "classificationreport() (in module ignite.metrics)": [[96, "ignite.metrics.ClassificationReport"]], "cosinesimilarity (class in ignite.metrics)": [[97, "ignite.metrics.CosineSimilarity"]], "compute() (ignite.metrics.cosinesimilarity method)": [[97, "ignite.metrics.CosineSimilarity.compute"]], "reset() (ignite.metrics.cosinesimilarity method)": [[97, "ignite.metrics.CosineSimilarity.reset"]], "update() (ignite.metrics.cosinesimilarity method)": [[97, "ignite.metrics.CosineSimilarity.update"]], "dicecoefficient() (in module ignite.metrics)": [[98, "ignite.metrics.DiceCoefficient"]], "entropy (class in ignite.metrics)": [[99, "ignite.metrics.Entropy"]], "compute() (ignite.metrics.entropy method)": [[99, "ignite.metrics.Entropy.compute"]], "reset() (ignite.metrics.entropy method)": [[99, "ignite.metrics.Entropy.reset"]], "update() (ignite.metrics.entropy method)": [[99, "ignite.metrics.Entropy.update"]], "epochmetric (class in ignite.metrics)": [[100, "ignite.metrics.EpochMetric"]], "compute() (ignite.metrics.epochmetric method)": [[100, "ignite.metrics.EpochMetric.compute"]], "reset() (ignite.metrics.epochmetric method)": [[100, "ignite.metrics.EpochMetric.reset"]], "update() (ignite.metrics.epochmetric method)": [[100, "ignite.metrics.EpochMetric.update"]], "fid (class in ignite.metrics)": [[101, "ignite.metrics.FID"]], "compute() (ignite.metrics.fid method)": [[101, "ignite.metrics.FID.compute"]], "reset() (ignite.metrics.fid method)": [[101, "ignite.metrics.FID.reset"]], "update() (ignite.metrics.fid method)": [[101, "ignite.metrics.FID.update"]], "fbeta() (in module ignite.metrics)": [[102, "ignite.metrics.Fbeta"]], "frequency (class in ignite.metrics)": [[103, "ignite.metrics.Frequency"]], "attach() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.attach"]], "completed() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.completed"]], "compute() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.compute"]], "reset() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.reset"]], "update() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.update"]], "geometricaverage (class in ignite.metrics)": [[104, "ignite.metrics.GeometricAverage"]], "compute() (ignite.metrics.geometricaverage method)": [[104, "ignite.metrics.GeometricAverage.compute"]], "inceptionscore (class in ignite.metrics)": [[105, "ignite.metrics.InceptionScore"]], "compute() (ignite.metrics.inceptionscore method)": [[105, "ignite.metrics.InceptionScore.compute"]], "reset() (ignite.metrics.inceptionscore method)": [[105, "ignite.metrics.InceptionScore.reset"]], "update() (ignite.metrics.inceptionscore method)": [[105, "ignite.metrics.InceptionScore.update"]], "iou() (in module ignite.metrics)": [[106, "ignite.metrics.IoU"]], "jaccardindex() (in module ignite.metrics)": [[107, "ignite.metrics.JaccardIndex"]], "loss (class in ignite.metrics)": [[108, "ignite.metrics.Loss"]], "compute() (ignite.metrics.loss method)": [[108, "ignite.metrics.Loss.compute"]], "required_output_keys (ignite.metrics.loss attribute)": [[108, "ignite.metrics.Loss.required_output_keys"]], "reset() (ignite.metrics.loss method)": [[108, "ignite.metrics.Loss.reset"]], "update() (ignite.metrics.loss method)": [[108, "ignite.metrics.Loss.update"]], "meanabsoluteerror (class in ignite.metrics)": [[109, "ignite.metrics.MeanAbsoluteError"]], "compute() (ignite.metrics.meanabsoluteerror method)": [[109, "ignite.metrics.MeanAbsoluteError.compute"]], "reset() (ignite.metrics.meanabsoluteerror method)": [[109, "ignite.metrics.MeanAbsoluteError.reset"]], "update() (ignite.metrics.meanabsoluteerror method)": [[109, "ignite.metrics.MeanAbsoluteError.update"]], "meanpairwisedistance (class in ignite.metrics)": [[110, "ignite.metrics.MeanPairwiseDistance"]], "compute() (ignite.metrics.meanpairwisedistance method)": [[110, "ignite.metrics.MeanPairwiseDistance.compute"]], "reset() (ignite.metrics.meanpairwisedistance method)": [[110, "ignite.metrics.MeanPairwiseDistance.reset"]], "update() (ignite.metrics.meanpairwisedistance method)": [[110, "ignite.metrics.MeanPairwiseDistance.update"]], "meansquarederror (class in ignite.metrics)": [[111, "ignite.metrics.MeanSquaredError"]], "compute() (ignite.metrics.meansquarederror method)": [[111, "ignite.metrics.MeanSquaredError.compute"]], "reset() (ignite.metrics.meansquarederror method)": [[111, "ignite.metrics.MeanSquaredError.reset"]], "update() (ignite.metrics.meansquarederror method)": [[111, "ignite.metrics.MeanSquaredError.update"]], "multilabelconfusionmatrix (class in ignite.metrics)": [[112, "ignite.metrics.MultiLabelConfusionMatrix"]], "compute() (ignite.metrics.multilabelconfusionmatrix method)": [[112, "ignite.metrics.MultiLabelConfusionMatrix.compute"]], "reset() (ignite.metrics.multilabelconfusionmatrix method)": [[112, "ignite.metrics.MultiLabelConfusionMatrix.reset"]], "update() (ignite.metrics.multilabelconfusionmatrix method)": [[112, "ignite.metrics.MultiLabelConfusionMatrix.update"]], "psnr (class in ignite.metrics)": [[113, "ignite.metrics.PSNR"]], "compute() (ignite.metrics.psnr method)": [[113, "ignite.metrics.PSNR.compute"]], "reset() (ignite.metrics.psnr method)": [[113, "ignite.metrics.PSNR.reset"]], "update() (ignite.metrics.psnr method)": [[113, "ignite.metrics.PSNR.update"]], "rootmeansquarederror (class in ignite.metrics)": [[114, "ignite.metrics.RootMeanSquaredError"]], "compute() (ignite.metrics.rootmeansquarederror method)": [[114, "ignite.metrics.RootMeanSquaredError.compute"]], "rouge (class in ignite.metrics)": [[115, "ignite.metrics.Rouge"]], "compute() (ignite.metrics.rouge method)": [[115, "ignite.metrics.Rouge.compute"]], "reset() (ignite.metrics.rouge method)": [[115, "ignite.metrics.Rouge.reset"]], "update() (ignite.metrics.rouge method)": [[115, "ignite.metrics.Rouge.update"]], "rougel (class in ignite.metrics)": [[116, "ignite.metrics.RougeL"]], "rougen (class in ignite.metrics)": [[117, "ignite.metrics.RougeN"]], "runningaverage (class in ignite.metrics)": [[118, "ignite.metrics.RunningAverage"]], "attach() (ignite.metrics.runningaverage method)": [[118, "ignite.metrics.RunningAverage.attach"]], "compute() (ignite.metrics.runningaverage method)": [[118, "ignite.metrics.RunningAverage.compute"]], "detach() (ignite.metrics.runningaverage method)": [[118, "ignite.metrics.RunningAverage.detach"]], "required_output_keys (ignite.metrics.runningaverage attribute)": [[118, "ignite.metrics.RunningAverage.required_output_keys"]], "reset() (ignite.metrics.runningaverage method)": [[118, "ignite.metrics.RunningAverage.reset"]], "update() (ignite.metrics.runningaverage method)": [[118, "ignite.metrics.RunningAverage.update"]], "ssim (class in ignite.metrics)": [[119, "ignite.metrics.SSIM"]], "compute() (ignite.metrics.ssim method)": [[119, "ignite.metrics.SSIM.compute"]], "reset() (ignite.metrics.ssim method)": [[119, "ignite.metrics.SSIM.reset"]], "update() (ignite.metrics.ssim method)": [[119, "ignite.metrics.SSIM.update"]], "topkcategoricalaccuracy (class in ignite.metrics)": [[120, "ignite.metrics.TopKCategoricalAccuracy"]], "compute() (ignite.metrics.topkcategoricalaccuracy method)": [[120, "ignite.metrics.TopKCategoricalAccuracy.compute"]], "reset() (ignite.metrics.topkcategoricalaccuracy method)": [[120, "ignite.metrics.TopKCategoricalAccuracy.reset"]], "update() (ignite.metrics.topkcategoricalaccuracy method)": [[120, "ignite.metrics.TopKCategoricalAccuracy.update"]], "variableaccumulation (class in ignite.metrics)": [[121, "ignite.metrics.VariableAccumulation"]], "compute() (ignite.metrics.variableaccumulation method)": [[121, "ignite.metrics.VariableAccumulation.compute"]], "required_output_keys (ignite.metrics.variableaccumulation attribute)": [[121, "ignite.metrics.VariableAccumulation.required_output_keys"]], "reset() (ignite.metrics.variableaccumulation method)": [[121, "ignite.metrics.VariableAccumulation.reset"]], "update() (ignite.metrics.variableaccumulation method)": [[121, "ignite.metrics.VariableAccumulation.update"]], "confusionmatrix (class in ignite.metrics.confusion_matrix)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix"]], "compute() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix.compute"]], "normalize() (ignite.metrics.confusion_matrix.confusionmatrix static method)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix.normalize"]], "reset() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix.reset"]], "update() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix.update"]], "miou() (in module ignite.metrics)": [[123, "ignite.metrics.mIoU"]], "metric (class in ignite.metrics.metric)": [[124, "ignite.metrics.metric.Metric"]], "attach() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.attach"]], "completed() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.completed"]], "compute() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.compute"]], "detach() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.detach"]], "is_attached() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.is_attached"]], "iteration_completed() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.iteration_completed"]], "load_state_dict() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.load_state_dict"]], "required_output_keys (ignite.metrics.metric.metric attribute)": [[124, "ignite.metrics.metric.Metric.required_output_keys"]], "reset() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.reset"]], "started() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.started"]], "state_dict() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.state_dict"]], "update() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.update"]], "metricslambda (class in ignite.metrics.metrics_lambda)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda"]], "attach() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.attach"]], "compute() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.compute"]], "detach() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.detach"]], "is_attached() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.is_attached"]], "reset() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.reset"]], "update() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.update"]], "precision (class in ignite.metrics.precision)": [[126, "ignite.metrics.precision.Precision"]], "update() (ignite.metrics.precision.precision method)": [[126, "ignite.metrics.precision.Precision.update"]], "recall (class in ignite.metrics.recall)": [[127, "ignite.metrics.recall.Recall"]], "update() (ignite.metrics.recall.recall method)": [[127, "ignite.metrics.recall.Recall.update"]], "ignite": [[129, "module-ignite"]], "ignite.contrib": [[129, "module-ignite.contrib"]], "batchfiltered (class in ignite.metrics.metric)": [[130, "ignite.metrics.metric.BatchFiltered"]], "batchwise (class in ignite.metrics.metric)": [[130, "ignite.metrics.metric.BatchWise"]], "epochwise (class in ignite.metrics.metric)": [[130, "ignite.metrics.metric.EpochWise"]], "metricusage (class in ignite.metrics.metric)": [[130, "ignite.metrics.metric.MetricUsage"]], "runningbatchwise (class in ignite.metrics.metric)": [[130, "ignite.metrics.metric.RunningBatchWise"]], "runningepochwise (class in ignite.metrics.metric)": [[130, "ignite.metrics.metric.RunningEpochWise"]], "singleepochrunningbatchwise (class in ignite.metrics.metric)": [[130, "ignite.metrics.metric.SingleEpochRunningBatchWise"]], "reinit__is_reduced() (in module ignite.metrics.metric)": [[130, "ignite.metrics.metric.reinit__is_reduced"]], "sync_all_reduce() (in module ignite.metrics.metric)": [[130, "ignite.metrics.metric.sync_all_reduce"]], "usage_name (ignite.metrics.metric.batchwise attribute)": [[130, "ignite.metrics.metric.BatchWise.usage_name"]], "usage_name (ignite.metrics.metric.epochwise attribute)": [[130, "ignite.metrics.metric.EpochWise.usage_name"]], "usage_name (ignite.metrics.metric.runningbatchwise attribute)": [[130, "ignite.metrics.metric.RunningBatchWise.usage_name"]], "usage_name (ignite.metrics.metric.runningepochwise attribute)": [[130, "ignite.metrics.metric.RunningEpochWise.usage_name"]], "usage_name (ignite.metrics.metric.singleepochrunningbatchwise attribute)": [[130, "ignite.metrics.metric.SingleEpochRunningBatchWise.usage_name"]], "apply_to_tensor() (in module ignite.utils)": [[131, "ignite.utils.apply_to_tensor"]], "apply_to_type() (in module ignite.utils)": [[131, "ignite.utils.apply_to_type"]], "convert_tensor() (in module ignite.utils)": [[131, "ignite.utils.convert_tensor"]], "hash_checkpoint() (in module ignite.utils)": [[131, "ignite.utils.hash_checkpoint"]], "ignite.utils": [[131, "module-ignite.utils"]], "manual_seed() (in module ignite.utils)": [[131, "ignite.utils.manual_seed"]], "setup_logger() (in module ignite.utils)": [[131, "ignite.utils.setup_logger"]], "to_onehot() (in module ignite.utils)": [[131, "ignite.utils.to_onehot"]]}})